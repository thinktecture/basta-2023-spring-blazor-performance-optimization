{
  "items": [
    {
      "id": 231,
      "type": "Webinar",
      "title": "RxJS von Grund auf - Teil 2: Operatoren und Operatorenketten",
      "date": "2021-06-15 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im ersten Teil haben wir uns die grundlegenden Konzepte hinter RxJS näher angesehen. Dabei kam ein Blick hinter die Kulissen von Operatoren und Operatorketten zu kurz. In diesem Teil möchten wir besonderen Fokus auf diese Aspekte legen und den Vorhang lüften. Dazu werden wir uns nicht nur bestehende Operatoren ansehen, sondern uns mit der Erstellung eigener Operatoren auseinander setzen.\n\n* Kurzes Recap des ersten Webinar\n* Operatoren selbstgemacht\n* Verhalten in Operatorketten\n* Operatoren parametrisieren\n* Existierende Operatoren wiederverwenden",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-teil-2-operatoren-und-operatorenketten",
          "label": "Speakerdeck (Slides)"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-02-rxjs-operators",
          "label": "GitHub (Code)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 153
    },
    {
      "id": 204,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2021-06-07 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered-862e424d-643b-4b18-8673-631c9375ed7e",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 126
    },
    {
      "id": 230,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Einführung in reaktives JavaScript",
      "date": "2021-06-01 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": "GitHub (Code Sample)"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-einfuhrung-in-reaktives-javascript",
          "label": "SpeakerDeck (Slides)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 153
    },
    {
      "id": 229,
      "type": "Webinar",
      "title": "Keycloak fuer .NET Entwickler",
      "date": "2021-05-25 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Authentication oder Authorization, Multi-Tenancy oder aber für einfache Anwendungen: Keycloak ist ein Open Source Identity and Access Management System mit dem Ihre Anwendungen Authentifizierung und Autorisierung auslagern können. Obwohl es ein Java-basierendes Produkt ist, lässt es sich dank offener Standards wie OAuth, OpenID Connect (OIDC) oder natürlich HTTP auch in ASP.NET-Core-Anwendungen integrieren.\n\nIn diesem Webinar zeigte Boris Wilhelms , wie Sie Keycloak in Ihre ASP.NET-Core-Lösungen integrieren können und wie sich Keycloak von IdentityServer oder Azure Active Directory B2C unterscheidet.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/keycloak-fuer-net-entwickler-9bbba251-7cc3-4e25-8561-b1a7f63ba979",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-keycloak",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        "Keycloak"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 152
    },
    {
      "id": 228,
      "type": "Webinar",
      "title": "Web-API mit Turbo: Deep-dive in async/await für Backend-APIs",
      "date": "2021-05-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Asynchrone Programmierung wird immer häufiger als der Heilsbringer in Sachen Performance angepriesen. Doch stimmt das auch? Die Antwort ist ein ganz klares Jaein. Was bedeutet asynchrone Programmierung überhaupt, wie unterscheidet sie sich von Multithreading und was muss ich wirklich wissen, damit die Verwendung von async/await einen spürbaren Einfluss auf die Geschwindigkeit meiner ASP.NET Core Web API zeigt? Diese Fragen und einige mehr wird Ihnen der .NET- und Backend-Experte Sebastian Gingter in diesem Webinar beantworten und darüber hinaus auf Best Practices sowie einige Tipps & Tricks eingehen. Nach diesem Talk haben Sie das notwendige Handwerkszeug beisammen, um ihre Web APIs an den richtigen Stellen durch asynchrone Operationen zu optimieren.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-2021-05-async",
          "label": "Demos auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/await-in-net",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "async",
        ".NET"
      ],
      "primaryTag": ".NET",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 151
    },
    {
      "id": 226,
      "type": "Webinar",
      "title": "Electron, Capacitor, PWA - was, wann, wie & warum?",
      "date": "2021-05-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org",
          "label": "Paint-PWA"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-capacitor-pwa-was-wann-wie-and-warum",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Capacitor",
        "Cordova",
        "Electron",
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 150
    },
    {
      "id": 224,
      "type": "Webinar",
      "title": "Azure Arc enabled Kubernetes: Hybrid and Multi-Cloud",
      "date": "2021-04-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Finally, one to rule them all: Azure Arc enabled Kubernetes allows you to manage and monitor Kubernetes clusters from different sources. Let Azure Arc act as a cockpit for all your Kubernetes clusters, no matter if they are running in AWS, Google Compute Cloud, Digital Ocean, or even a private data center.\nJoin this webinar with Thorsten Hans to understand the capabilities and see what can be achieved with Azure Arc enabled Kubernetes. With an example, you will dive into the topic and see how to use key features such as onboarding, inventory, monitoring, and Azure Policy powered governance to tame all your clusters.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-arc-enabled-kubernetes-hybrid-and-multi-cloud",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/arc-enabled-k8s-webinar-april-2021",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Kubernetes"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 148
    },
    {
      "id": 223,
      "type": "Webinar",
      "title": "Web Components: Bessere (SPA-)Architektur mit Smart- und Presentational-Components-Pattern",
      "date": "2021-04-27 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components: ein Begriff, gar (ehemaliger?) Hype, den wir in der Webentwicklung seit einiger Zeit lesen und immer wieder darüber stolpern. Custom Elements, Shadow DOM und HTML Templates ergeben ein natives Komponentenmodell für unseren Browser. Komponenten, wiederverwendbare SPA-Framework-unabhängige UI-Bausteine, die wir in jeder und für jede App nutzen könnten.\n\nDoch noch immer werden Komponenten frameworkabhängig bspw. in Angular, React oder Vue.js entwickelt. Liegt das daran, dass unserer Anwendungsarchitektur noch ein wichtiges Pattern fehlt, um SPA-Components mit Web Components sinnvoll zu kombinieren? Mit dem Pattern der Smart und Presentational Components erreichen wir eine klare Trennung zwischen State Management (Smart) und reinem User Interface und seiner Interaktion (Presentational). Was genau es damit auf sich hat und wie dies mit Web Components realisiert werden kann, zeigt Manuel Rauber im Live-Coding mit Vor- und Nachteilen anhand einer Real-World-Demo-Applikation.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-bessere-spa-architektur-mit-smart-und-presentational-components-pattern",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-smart-and-presentation-components",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 147
    },
    {
      "id": 222,
      "type": "Talk",
      "title": "Produktivitäts-PWAs auf Desktop-Niveau mit Project Fugu",
      "date": "2021-04-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Beitragenden Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. Damit können Entwickler endlich auch Produktivitäts-Apps wie Büro- und Bearbeitungsprogramme oder IDEs sinnvoll ins Web bringen. In diesem Vortrag zeigt Ihnen Christian Liebel, wie Sie Produktivitäts-PWAs auf Desktopniveau entwickeln können – Zugriff auf das Dateisystem, die Zwischenablage sowie Dateizuordnungen inklusive.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/produktivitats-pwas-auf-desktop-niveau-mit-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 146
    },
    {
      "id": 219,
      "type": "Workshop",
      "title": "JavaScript Fullstack Day: Project Fugu",
      "date": "2021-04-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Presented as a part of the full-stack day of International JavaScript Conference 2021 London, Online Edition.\n\nProgressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/javascript-fullstack-day-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": true,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 143
    },
    {
      "id": 140,
      "type": "Webinar",
      "title": "Web-Apps mit Ionic: Auf Schienen schneller ans Ziel?",
      "date": "2021-04-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen können mitunter komplex werden. Täglich gibt es neue Anforderungen und am besten soll die App noch Cross-Plattform verfügbar sein. Und natürlich darf die Entwicklung nicht zu lange dauern. Ionic versucht als Opinionated-Framework dieses Problem zu adressieren.\nIn diesem Webinar zeigt Max Schulte, was mit Ionic als SPA-Framework möglich ist und wie es dank seiner Tools, \"Production Ready\"-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-ionic-leitplanken-demo",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net",
          "label": "Live Demo (Azure)"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/web-apps-mit-ionic-auf-schienen-schneller-ans-ziel-3ed7786e-0011-4d07-a42b-acb0e5fcaa9b",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Mobile",
        "Cordova",
        "Capacitor",
        "Web Technologies",
        "Web Components",
        "Webinar",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 144
    },
    {
      "id": 218,
      "type": "Talk",
      "title": "Implementing Productivity Apps With Angular And Fugu APIs",
      "date": "2021-04-20 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have worked since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included! This allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web. Thinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis-869dec24-e8f7-4821-b15b-c063cba32760",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-2021-ldn-angular-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 143
    },
    {
      "id": 225,
      "type": "Talk",
      "title": "Infrastructure as Code for Azure with Terraform",
      "date": "2021-04-16 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Modern and distributed application architectures often require a large set of services and systems with a rather complex configuration to work as expected. You and your team can create and manage such infrastructures professionally by adopting Infrastructure as Code (IaC) and relying on Terraform. In this talk, Azure MVP Thorsten Hans demonstrates how to create reliable and predictable Azure infrastructures with Terraform. You will learn how to structure your project, create and mutate your services and manage multiple environments in no time.",
      "media": [
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=6e3aI5WAg5M",
          "label": "Recording"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/globalazure-2021-terraform",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform",
        "Azure"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 149
    },
    {
      "id": 216,
      "type": "Webinar",
      "title": "Blazor WebAssembly - Forms in Action",
      "date": "2021-04-14 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ein Großteil an Softwarelösungen hantiert mit Daten. Formulare sind hier kaum wegzudenken und ein zentraler Bestandteil. Sei es das Anmelden über eine Login-Maske oder das Buchen von Konzertkarten, überall sind Sie zu finden.\n\nIn dieser Session zeigt Patrick Jahr anhand eines Beispiels wie Formulare mit Blazor WebAssembly in .NET 5 implementiert werden können. Jedoch ist der Aufbau eines Formulars nicht alles: wird ein Nutzer nicht richtig über fehlerhafte Eingaben informiert, oder muss zu lange warten, bis das Formular neue Daten geladen hat, verliert er direkt die Lust oder das Vertauen in die Anwendung. Daher wird in dieser Session auch ein großes Augenmerk auf die Validierung von Formularen gelegt. Schlussendlich ist noch die Diskussion von Performance-beeinträchtigenden Fakten in komplexeren Szenarien ein wichtiges Thema in diesem Webinar.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/blazor-webassembly-forms-in-action",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-blazor-forms",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        ".NET",
        "Blazor",
        "WebAssembly",
        "Blazor WebAssembly"
      ],
      "primaryTag": "Blazor WebAssembly",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 142
    },
    {
      "id": 213,
      "type": "Webinar",
      "title": "Sichere und robuste Docker Images für .NET",
      "date": "2021-03-30 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Anwendungen in Containern zu betreiben gehört nicht nur zum guten Ton. Bereits seit Jahren befinden sich Technologien wie Kubernetes und Docker auf einem Siegeszug der seines gleichen sucht. Doch bereits beim Erstellen von Docker Images gilt es auf viele kleine Dinge zu achten um Anwendungen auf lange Sicht professionell in Containern zu betreiben.\n\nIn diesem Webinar zeigt Azure MVP Thorsten Hans, wie auch Sie sichere und robuste Docker Images erstellen. Sämtliche Demos und Beispiele werden in diesem Webinar anhand einer .NET-WebAPI erläutert.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-docker-march-2021",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/sichere-und-robuste-docker-images-fur-net",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Docker"
      ],
      "primaryTag": "Docker",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 141
    },
    {
      "id": 211,
      "type": "Half Day Workshop",
      "title": "Angular meets Project Fugu: Produktivitäts-PWAs auf Desktopniveau (Hands-on)",
      "date": "2021-03-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Contributors Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. Damit können Entwickler endlich auch Produktivitäts-Apps wie Büro- und Bearbeitungsprogramme oder IDEs sinnvoll ins Web bringen. In diesem Workshop zeigt Ihnen Christian Liebel von Thinktecture, wie Sie mit Angular Produktivitätsapps auf Desktopniveau entwickeln können – Zugriff auf das Dateisystem und die Zwischenablage sowie Dateizuordnungen inklusive. Und Sie können mitentwickeln: Bitte bringen Sie dazu Ihr Notebook (ohne Corporate-Proxys/Unternehmensrichtlinien) mit installiertem Google Chrome Canary, Node.js und Microsoft Visual Studio Code mit.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-meets-project-fugu-produktivitats-pwas-auf-desktopniveau-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-spring-2021-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 214,
      "type": "Workshop",
      "title": "Rock Solid, yet flexible Single Page Applications professionell mit Kubernetes betreiben",
      "date": "2021-03-23 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Kubernetes – das Cloud-Betriebssystem dieser Dekade – bietet auch für den Betrieb von Single Page Applications (SPAs) eine hohe Flexibilität und Individualisierbarkeit. In diesem Halbtages-Workshop zeigt Thorsten Hans, wie Sie Ihre SPA in Docker Images verpacken, und in Kubernetes betreiben können. Lernen Sie essenzielle Konzepte und Techniken für das Hosting von SPAs anhand einer exemplarischen Angular-Anwendung kennen. Hierbei werden wir iterativ vom Standardbetrieb, bis hin zur Abbildung einer professionellen Multi-Tenant-Umgebung mit Canary-Deployments vorgehen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/rock-solid-yet-flexible-single-page-applications-professionell-mit-kubernetes-betreiben",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-2021-kubernetes",
          "label": "Sample Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Docker",
        "Kubernetes"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 210,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Platform Realtime Push - 3",
      "date": "2021-03-23 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-core-signalr-cross-platform-realtime-push-3",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        "SignalR",
        "ASP.NET Core",
        ".NET Core",
        "JavaScript",
        "Angular",
        "Capacitor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 137
    },
    {
      "id": 212,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps – Hands on!",
      "date": "2021-03-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und im Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mit Hilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigt Ihnen Christian Liebel die Grundlagen der PWA-Entwicklung. Und Sie können aktiv mitentwickeln!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-spring-2021-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 209,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Stream-basierte Denkweise - am konkreten Beispiel",
      "date": "2021-03-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "RxJS unterstützt bei der Bewältigung asynchroner Probleme verschiedener Art, nicht nur bei AJAX-Requests. Allerdings erfordert das Stream-basierte Paradigma ein Umdenken für den Entwickler.\n\nNachdem wir uns im ersten Teil intensiv mit den Grundbausteinen von RxJS beschäftigt haben und dann im zweiten Teil sehr intensiv auf Operatoren und Operatorenketten eingegangen sind, nehmen wir uns in diesem Webinar einen Anwendungsfall aus der Realität vor. An einem konkreten Beispiel leiten wir eine Lösung ohne den Einsatz von RxJS her und stellen dieser eine elegante Lösung gegenüber, die sich den passenden Operatoren bedient.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-stream-basierte-denkweise-am-konkreten",
          "label": "Slides (Speakerdeck)"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-03-rxjs-scrolling",
          "label": "Source (GitHub)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular",
        "RxJS",
        "Angular, RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 136
    },
    {
      "id": 208,
      "type": "Webinar",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2021-03-11 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "What doesn't load in two seconds will never be accessed again: User expectations for web application performance are steadily increasing. After a web application loads, it needs to feel fast and fluid in order for the user to achieve their goal. In our Thinktecture webinar, Christian Liebel will show you Angular’s most important optimization options (Zone.js, Change Detection and Service Workers), so that you can ignite the turbo for your Angular app!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-2e112a94-b9dc-42dc-b166-e46dcb641ac7",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 135
    },
    {
      "id": 207,
      "type": "Webinar",
      "title": "Always up to date: API-Versionierung in .NET 5",
      "date": "2021-03-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit, und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, so haben wir bei APIs das Problem, dass ältere Clientanwendungen mit dem neuen Verhalten nicht mehr zurecht kommen und dann auch nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unserer API.\n\nIn diesem Webinar zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen wann überhaupt eine neue Version benötigt wird, welche Methoden es gibt eine ASP.NET-Core-Web-API zu versionieren und welche verschiedenen Herangehensweisen im Code möglich sind, unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-versioning-webinar-march-2021",
          "label": "Code-Beispiele auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/thinktecture-webinar-api-versionierung-in-net-5",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Versioning",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 134
    },
    {
      "id": 206,
      "type": "Webinar",
      "title": "Storybook: Best Practices mit Angular",
      "date": "2021-03-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Storybook ist ein hervorragendes Tool zur Erstellung von UI-Komponentenkatalogen. Steuerelemente können hier isoliert betrachtet, ausprobiert und dokumentiert werden – eine perfekte Schnittstelle zwischen Designern, Entwicklern und weiteren Projektbeteiligten. Christian Liebel stellt Ihnen in diesem Webinar ein Vorgehensmodell vor, das auf unseren Erfahrungen aus vielen Kundenprojekten mit Angular basiert. Auf einen Streich entsteht damit nicht nur eine erstklassige Komponentenbibliothek, sondern zugleich eine besonders modulare Codebasis – die zugleich Synergieeffekte für Unit Tests und Mocking mit sich bringt.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/storybook-best-practices-mit-angular",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 128
    },
    {
      "id": 205,
      "type": "Webinar",
      "title": "Keycloak fuer .NET Entwickler",
      "date": "2021-02-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Authentication oder Authorization, Multi-Tenancy oder aber für einfache Anwendungen: Keycloak ist ein Open Source Identity and Access Management System mit dem Ihre Anwendungen Authentifizierung und Autorisierung auslagern können. Obwohl es ein Java-basierendes Produkt ist, lässt es sich dank offener Standards wie OAuth, OpenID Connect (OIDC) oder natürlich HTTP auch in ASP.NET-Core-Anwendungen integrieren.\nIn diesem Webinar zeigt Ihnen Boris Wilhelms wie Sie Keycloak in Ihre ASP.NET-Core-Lösungen integrieren können und wie sich Keycloak von IdentityServer oder Azure Active Directory B2C unterscheidet.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/keycloak-fuer-net-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-keycloak",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "ASP.NET Core",
        "IAM",
        "Keycloak"
      ],
      "primaryTag": "Keycloak",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 127
    },
    {
      "id": 203,
      "type": "Workshop",
      "title": "Progressive Web Apps und Project Fugu: Das nächste Level für Cross-Platform-Apps",
      "date": "2021-02-18 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) ermöglichen es Ihnen, Businessanwendungen für den Browser zu entwickeln, die sich zugleich wie native Anwendungen anfühlen und dabei sogar offline-fähig sind. Dank Project Fugu stehen diese PWAs ihren nativen Gegenstücken in nichts nach! Erfahren Sie in diesem Workshop, wie Sie erfolgreich ihre eigenen PWAs entwickeln!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-und-project-fugu-das-nachste-level-fur-cross-platform-apps?slide=7",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-pwa-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 199,
      "type": "Talk",
      "title": "Advanced Blazor Server: Tiefen und Untiefen meistern",
      "date": "2021-02-18 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor Server ist anders. Es hat gegenüber Blazor WebAssembly ein anderes Verhalten zur Laufzeit. Dabei spielen vor allem Razor Pages eine Rolle, die Dependency Injection funktioniert leicht anders als gewohnt und auch das Zustandsmanagement ist eine Sache für sich. Trauen Sie sich in die tiefsten Tiefen des Blazor-Server-Kaninchenbaus! ASP.NET-Core- und Backend-Experte Sebastian Gingter nimmt Sie an die Hand und zeigt Ihnen diese und noch weitere Spezialitäten von Blazor Server und wie man damit erfolgreich umgeht.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-blazor-server",
          "label": "Repo auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-spring-2021-blazor-server",
          "label": "Folien bei Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "ASP.NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 200,
      "type": "Webinar",
      "title": "RxJS from the group up - Introduction to reactive JavaScript",
      "date": "2021-02-18 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "RxJS is a very powerful tool and has been established in Angular as its central way of communication between Components and Services.\n\nIf you are not quite comfortable yet to use RxJS in all of its glory, then this Webinar is for you. Yannick is going to show you the basic concepts and ideas behind all of RxJS's moving parts, to make sure you can wield this powerful tool more confidently.\n\nAgenda:\n- Why streams?\n- Asynchronicity and the observer pattern\n- Working with RxJS\n- Unsubscribing and completion\n- Resources to help yourself",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-from-the-ground-up-introduction-to-reactive-javascript",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": "Code Sample (GitHub)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 124
    },
    {
      "id": 202,
      "type": "Talk",
      "title": "Implementing Productivity Apps with Angular and Fugu APIs",
      "date": "2021-02-17 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have been working since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included!\nThis allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web.\nThinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis-cec204b8-f3b4-4dea-a468-a56a0a7b3aea",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 125
    },
    {
      "id": 215,
      "type": "Talk",
      "title": "Kubernetes für .NET Anwendungsentwickler",
      "date": "2021-02-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie möchten Ihre .NET-Core-Anwendung in Kubernetes betreiben und lernen, wie Sie das Potential des Containerorchestrators nutzen können? Dann besuchen Sie diesen Talk von Kubernetes- und Cloud-Native-Experte Thorsten Hans. Sie werden nicht nur den praktischen Umgang mit Kubernetes aus Sicht des Entwicklers lernen, sondern auch, wie Sie Patterns und Praktiken nutzen, um Ihre .NET-Core-Anwendungen optimal in Containern zu betreiben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-fur-net-anwendungsentwickler",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-kubernetes-for-net-devs",
          "label": "Sample Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 201,
      "type": "Talk",
      "title": "Superkräfte für Produktivitäts-PWAs – Project Fugu",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein hervorragendes plattformübergreifendes Anwendungsmodell. In mancherlei Hinsicht musste das Modell jedoch noch hinter seine nativen Gegenstücke zurücktreten. Das wollen Google, Microsoft und Intel mit dem Capabilities Project – Codename Fugu – jetzt ändern. Ihr Ziel: ein leistungsfähigeres Web. Dank den Fugu APIs erhalten PWAs nun Zugriff auf das lokale Dateisystem und die Zwischenablage und können sich als Bearbeitungsprogramm für bestimmte Dateierweiterungen hinterlegen. In dieser Session zeigt Christian Liebel von Thinktecture, wie Fugu APIs entstehen und wie sie einen ganzen Schwung an Produktivitäts-Apps ins Web verlagern könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/superkrafte-fur-produktivitats-pwas-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 196,
      "type": "Talk",
      "title": "Blazor in .NET 5: Single-Page-Applications mit C# & WebAssembly",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page-Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor-Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von vielen Beispielen wie Blazor in .NET 5 tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-in-net-5-single-page-applications-mit-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 197,
      "type": "Keynote",
      "title": "Technical Keynote: Auf dem Weg zu „One .NET“ – das eine Framework, sie alle zu beherrschen",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im November 2020 ist .NET 5.0 erschienen. Auch wenn die Vision \"One .NET\" erst mit Version 6.0 vollständig umgesetzt sein wird, so bietet .NET 5.0 doch viele spannende Neuerungen bei Sprachsyntax, Klassen, Anwendungsmodellen und Deployment. In dieser technischen Keynote wird DOTNET-DOKTOR Holger Schwichtenberg zusammen mit Kollegen einige Highlights der neuen Version hervorheben, Empfehlungen zur Migration alter Anwendungen geben und auch einen Ausblick auf die .NET-Zukunft liefern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/technical-keynote-auf-dem-weg-zu-one-net-das-eine-framework-sie-alle-zu-beherrschen",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 198,
      "type": "Talk",
      "title": "Schneller ans Ziel: Web-Apps mit Ionic",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen können mitunter komplex werden. Täglich gibt es neue Anforderungen und am besten soll die App auch noch Cross-Platform verfügbar sein. Und natürlich darf die Entwicklung nicht zu lange dauern. Ionic versucht als opinionated Framework dieses Problem zu adressieren. In seinem Vortrag zeigt Max Schulte, was mit Ionic als SPA-Framework möglich ist und wie es dank seiner Tools, Production-Ready-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/schneller-ans-ziel-web-apps-mit-ionic",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net/tabbed/new-offer",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Capacitor",
        "PWA",
        "Web Technologies",
        "Hybrid-App",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 195,
      "type": "Workshop",
      "title": "ASP.NET Core Blazor: Moderne Businessanwendungen mit C# & WebAssembly - Full-Stack- und Cross-Plattform",
      "date": "2021-02-15 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht-webnativen Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET webbasierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browserp﻿lattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Als Abrundung des Workshops soll auch ein Blick auf und ein Vergleich mit Server-side Blazor nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-und-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-blazor-workshop",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 194,
      "type": "Webinar",
      "title": "Blazor WebAssembly: SPAs mit C# und .NET 5",
      "date": "2021-02-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript oder TypeScript – na klar! Mit ASP.NET Core Blazor gibt es jedoch eine mögliche Alternative für .NET-Entwickler. Auf Basis des Web-Standards WebAssembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# & Razor entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor WebAssembly in .NET 5 möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Ein realistischer Blick auf die Grenzen der Technologie darf hierbei freilich nicht fehlen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-spas-mit-c-number-und-net-5",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 122
    },
    {
      "id": 193,
      "type": "Talk",
      "title": "Full Stack .NET: Single Page Applications mit Blazor, C# & WebAssembly",
      "date": "2021-02-08 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) – bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell – je nach Anwendungsfall – die Grenzen liegen.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/full-stack-net-single-page-applications-mit-blazor-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 121
    },
    {
      "id": 192,
      "type": "Webinar",
      "title": "Unit-Testing in Angular mit Jest",
      "date": "2021-02-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Unit-Tests sind ein hervorragendes Mittel, um (kritische) Funktionalität einer Anwendung automatisiert und schnell überprüfen zu lassen. Das SPA-Framework Angular liefert mit Karma von vornherein eine Testunterstützung mit. Mit Facebooks Jest gibt es jedoch ein weiteres Framework, das unter anderem mit paralleler Testausführung lockt.\n\nIn diesem Webinar zeigt Ihnen Christian Liebel, wie Sie Ihre Angular-App mithilfe von Jest testen können. Nachdem wir zu Beginn ein gemeinsames Verständnis zum Thema Unit Tests geschaffen haben, werden wir uns abschließend auch fortgeschrittenen Inhalten wie Spys und Mocks nähern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/unit-testing-in-angular-mit-jest",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/unit-testing-angular-jest-webinar-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 120
    },
    {
      "id": 190,
      "type": "Talk",
      "title": "Blazor WebAssembly & gRPC - Code-first .NET SPA developer productivity",
      "date": "2021-01-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "With Blazor WebAssembly, developers can write C# code for SPAs in the browser and share code with the server-side of their applications. Usually, you design and use JSON-based Web APIs to communicate between the client and the server logic. In this session, Christian Weyer demonstrates how to employ gRPC & gRPC-Web in a code-first manner to share .NET interface contracts in a strongly-typed way. With this approach, no code generation is needed, you get the same syntax and full IntelliSense on both sides. In fact, you gain the good parts we already had many years ago with WCF - now for the ubiquitous & open web. But: is really everything gold that glitters?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-and-grpc-code-first-net-spa-developer-productivity",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-grpc-code-first",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 118
    },
    {
      "id": 191,
      "type": "Talk",
      "title": "Azure Arc enabled Kubernetes: Hybrid und Multi-Cloud",
      "date": "2021-01-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Endlich alle unter einem Dach. Mit Azure Arc enabled Kubernetes können Kubernetes-Cluster in Azure verwaltet und überwacht werden, und dies unabhängig davon, in welcher Umgebung der Cluster betrieben wird. Azure Arc dient als zentrales und professionelles Cockpit für Ihre Kubernetes-Cluster die in Amazon AWS, Google Compute Cloud, Digital Ocean, oder in privaten Rechenzentren betrieben werden. In diesem Webinar zeigt Thorsten Hans welche Möglichkeiten und Potentiale Azure Arc enabled Kubernetes bietet.  Anhand einer Beispielumgebung werden Sie sehen, wie Inventarisierung, Monitoring und Governance – unter Verwendung von Azure Policies und Open Policy Agent - auf externe Kubernetes-Cluster angewendet werden können.\n ",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-arc-enabled-kubernetes-hybrid-und-multi-cloud",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/arc-enabled-k8s-webinar-january-2021",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Kubernetes",
        "Azure"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 119
    },
    {
      "id": 189,
      "type": "Webinar",
      "title": "RxJS von Grund auf - Teil 2: Operatoren und Operatorenketten",
      "date": "2021-01-19 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im ersten Teil haben wir uns die grundlegenden Konzepte hinter RxJS näher angesehen. Dabei kam ein Blick hinter die Kulissen von Operatoren und Operatorketten zu kurz. In diesem Teil möchten wir besonderen Fokus auf diese Aspekte legen und den Vorhang lüften. Dazu werden wir uns nicht nur bestehende Operatoren ansehen, sondern uns mit der Erstellung eigener Operatoren auseinander setzen.\n\n* Kurzes Recap des ersten Webinar\n* Operatoren selbstgemacht\n* Verhalten in Operatorketten\n* Operatoren parametrisieren\n* Existierende Operatoren wiederverwenden",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-teil-2-operatoren-und-operatorenketten",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-02-rxjs-operators",
          "label": "Github Repo"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular, RxJS",
        "RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 117
    },
    {
      "id": 187,
      "type": "Webinar",
      "title": "Blazor Server: Mögliche Architekturalternative zu SPAs?",
      "date": "2020-12-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Viele .NET-Entwickler sind Feuer und Flamme wenn es um Blazor und Webentwicklung geht. Wenn man etwas genauer hinschaut, stellt man schnell fest, dass man gleich zwei Geschmacksrichtungen vor sich hat: Blazor WebAssembly und Blazor Server.\n\nIn diesem Webinar wollen wir uns genauer mit Blazor Server beschäftigen: Was ist Blazor Server überhaupt, wo liegen die Unterschiede zum Client-seitigen Blazor und SPAs im Allgemeinen und welche Auswirkungen haben diese Unterschiede auf die Art, wie wir Web-Anwendungen schreiben? Was muss ich lernen, um mit Blazor Server arbeiten zu können und worauf muss ich eventuell besonders achten, wenn ich meine ersten Schritte mit Blazor Server gehen möchte? All diese Fragen wird unser Experte Sebastian Gingter in dieser Session klären.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/blazor-server-mogliche-architekturalternative-zu-spas",
          "label": "Slides zum Webinar"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-blazor-server-12-2020",
          "label": "GitHub Repo mit dem Beispielcode"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Architecture",
        "ASP.NET Core",
        "SignalR",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 116
    },
    {
      "id": 186,
      "type": "Webinar",
      "title": "Full Throttle: Azure Infrastructures with Terraform",
      "date": "2020-12-09 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "You want to provision and manage your cloud infrastructure professionally yet still keep things simple? Then you should join this webinar and dive into Terraform with Thorsten Hans.\nYou will learn by practical examples how to automate your mission-critical workloads by adopting Infrastructure as Code (IaC) and mastering Terraform.\nWithin an hour, you will learn everything you need to create and manage your cloud environments. Thorsten explains all necessary concepts and techniques like the Terraform workflow, how modules work, expressions, and interpolation, by live-coding an example infrastructure during the webinar.\nAfter the event, you will be able to express your infrastructures in code, even if you are using different cloud offerings such as AWS, GCP, or Digital Ocean.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-december-2020",
          "label": "GitHub Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/full-throttle-azure-infrastructures-with-terraform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 115
    },
    {
      "id": 185,
      "type": "Webinar",
      "title": "Blazor WebAssembly: Neues in .NET 5\u000b",
      "date": "2020-12-08 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ähnlich wie bei Angular und React wird auch bei Blazor ständig an der Plattform weiter gearbeitet. Vor allem bei Blazor WebAssembly als relativer Framework-Neuling sind die Verbesserungen und Neuerungen des ASP.NET-Teams bei Microsoft von Interesse. In diesem Webinar zeigt Christian Weyer auf gewohnt pragmatische Art was alles neu ist im .NET-5-Release und wie diese Features einzuordnen sind.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-neues-in-net-5",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-things-to-know/tree/net5-demos",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor",
        ".NET Core",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 114
    },
    {
      "id": 184,
      "type": "Webinar",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-12-02 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann.\n\nIn unserem Thinktecture-Webinar zeigt Ihnen Christian Liebel mit Zone.js, Change Detection und Service Workern die wichtigsten Performance-Stellschrauben des Angular-Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-c737c808-80f3-4e86-b27f-54d311007d2c",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 113
    },
    {
      "id": 182,
      "type": "Webinar",
      "title": "Pragmatische API-Versionierung in ASP.NET Core",
      "date": "2020-11-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit, und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, so haben wir bei APIs das Problem, dass ältere Clientanwendungen mit dem neuen Verhalten nicht mehr zurecht kommen und dann auch nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unserer API. In diesem Webinar zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen wann überhaupt eine neue Version benötigt wird, welche verschiedenen Methoden es gibt eine ASP.NET-Core-Web-API zu versionieren und welche verschiedenen Herangehensweisen im Code möglich sind, unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-versioning-webinar-november-2020",
          "label": "GitHub - Repo"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/thinktecture-webinar-pragmatische-api-versionierung-in-asp-dot-net-core",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Versioning",
        "ASP.NET Core"
      ],
      "primaryTag": "ASP.NET Core",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "webinar-test",
      "bigmarkerRef": "1f15d74a37a4",
      "ctaKey": "Recording ansehen",
      "additionalInfo": "",
      "conference": 112
    },
    {
      "id": 183,
      "type": "Talk",
      "title": "Real-World Blazor WebAssembly : 5(+) Dinge, die Sie kennen sollten",
      "date": "2020-11-24 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "In diesen 60 Minuten spricht Christian Weyer über fünf Erkenntnisse aus dem praktischen Einsatz von Blazor WebAssembly - mit Demos, live und in Farbe. Auch wenn für Sie vielleicht nur ein einziges \"Ding\" dabei ist, das sie neu lernen: diese Session sollte sich dennoch lohnen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/real-world-blazor-webassembly-5-plus-dinge-die-sie-kennen-sollten",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-things-to-know",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "gRPC",
        "SPA",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 68
    },
    {
      "id": 134,
      "type": "Workshop",
      "title": "Tausche .NET gegen Web: Desktop-Apps als PWA entwickeln",
      "date": "2020-11-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Für .NET-Entwickler ist völlig klar: Wenn eine Desktopanwendung entwickelt werden muss, greift man zu Windows Forms oder WPF. In dieser DevSession nehmen wir eine alternative Technologie unter die Lupe: Progressive Web Apps. Dieses Anwendungsmodell auf Basis von Webtechnologien bietet nicht nur eine erstklassige Unterstützung für Desktopanwendungen, sondern läuft auf Basis desselben Quelltextes auch noch im Browser oder auf Mobilgeräten. Microsoft ist einer der wesentlichen Treiber der Progressive Web Apps – und das nicht erst, seitdem der eigene Browser Edge auf dem Chrome-Unterbau Chromium basiert. Im Rahmen von Project Fugu kooperiert Microsoft mit Intel und Google, um mächtige Schnittstellen für Webanwendungen einzuführen: Das schließt Dateizuordnungen, Zugriff auf das native Dateisystem oder die Zwischenablage sowie Sprunglisteneinträge mit ein. In dieser Session zeigt Ihnen Christian Liebel von Thinktecture, wie Sie erstklassige Produktivitätsapps für den Desktop als PWA entwickeln können – und ganz nebenbei auch noch Apps für den Browser und Mobilgeräte herausfallen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/tausche-net-gegen-web-desktop-apps-als-pwa-entwickeln",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ddc-2020-desktop-pwas",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org/",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 68
    },
    {
      "id": 132,
      "type": "Talk",
      "title": "Real-World Blazor: 5 Dinge, die Sie kennen sollten",
      "date": "2020-11-23 21:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Blazor Server oder Blazor WebAssembly: es gibt Dinge in Microsofts Web-UI-Framework, die sich mitunter erst im Projektalltag heraus kristallisieren. In diesen 60 Minuten spricht Christian Weyer über fünf Erkenntnisse aus dem praktischen Einsatz von Blazor Server & WebAssembly - mit Demos live und in Farbe. Auch wenn für Sie vielleicht nur ein einziges Ding dabei ist, das sie neu lernen: diese Session sollte sich dennoch lohnen ;-) ",
      "media": [],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 68
    },
    {
      "id": 181,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Plattform Realtime Push - 2",
      "date": "2020-11-17 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-core-signalr-cross-plattform-realtime-push-2",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "JavaScript",
        "Blazor",
        "ASP.NET Core",
        "SignalR"
      ],
      "primaryTag": "SignalR",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 111
    },
    {
      "id": 179,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Einführung in reaktives JavaScript",
      "date": "2020-11-10 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "RxJS ist sehr mächtig. So mächtig, dass es Angular als zentrales Denk- und Programmiermodell für die interne Kommunikation unter Komponenten und Services auserkoren hat.\n\nSie fühlen sich noch nicht sicher genug, RxJS in vollem Umfang einzusetzen? Dann zeigt Ihnen Yannick wie Sie mit den notwendigen Ideen, Konzepten und Grundlagen, RxJS im Handumdrehen verstehen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-einfuhrung-in-reaktives-javascript",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 110
    },
    {
      "id": 178,
      "type": "Webinar",
      "title": "Serverless Computing in Azure Kubernetes Service mit KEDA",
      "date": "2020-11-03 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit Azure Functions stellt Microsoft ein flexibles und mächtiges Framework für Serverless Computing bereit, womit skalierbare und reaktive Anwendungen erstellt werden können. Mit Kubernetes Event-driven Applications (KEDA), können Sie Ihre Azure Functions problemlos in einem Kubernetes-Cluster betreiben. Doch KEDA kümmert sich nicht nur um den Betrieb. Durch geschickte Integration von sowohl externen als auch internen Nachrichten- und Ereignissystemen wie Azure Service Bus oder Azure Event Hub skaliert KEDA Ihre Azure Functions automatisch anhand der anfallenden Anfragen",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/serverless-computing-in-azure-kubernetes-service-mit-keda-503afff9-4772-4c26-b9d8-9c846baec4ab",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/keda-webinar-november-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Kubernetes",
        "Serverless",
        "Azure"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 109
    },
    {
      "id": 175,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2020-10-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered-5a8402f4-2ec1-470c-805f-c44598b49e64",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 176,
      "type": "Talk",
      "title": "Implementing Productivity Apps with Angular and Fugu APIs",
      "date": "2020-10-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have been working since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included! This allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web. Thinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-2020-angular-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 133,
      "type": "Webinar",
      "title": "Web Components – das Ende der SPA-Framework-Ära?",
      "date": "2020-10-27 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components – ein Begriff, den wir immer öfter lesen und lesen werden. Dahinter stehen die Technologien Custom Elements, Shadow DOM und HTML Templates. Zusammen ergeben sie ein natives Komponentenmodell für unseren Browser. Es hilft uns, wiederverwendbare UI-Komponenten zu entwickeln, die wir in jeder App benutzen können. Völlig gleich, ob diese Anwendungen mit einem SPA-Framework entwickelt wurden. \n\nBedeutet das aber auch, dass wir eigentlich gar kein SPA-Framework mehr benötigen, sondern alles mit Web Components entwickeln können? Dieser spannenden Frage geht Manuel Rauber in diesem Webinar nach anhand einer Real-World-Demo-Applikation, Live-Coding und den Vor- und Nachteilen von Web Components.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-das-ende-der-spa-framework-ara",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 106
    },
    {
      "id": 172,
      "type": "Half Day Workshop",
      "title": "PWA-Bootcamp: von 0 auf MS Paint (hands-on)",
      "date": "2020-10-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Contributors Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. In diesem Bootcamp zeigt Ihnen Christian Liebel von Thinktecture, wie Sie in nur einem halben Tag eine vereinfachte Version von Paint implementieren und auf Ihrem Gerät installieren können – inklusive Dateisystemzugriff. Bitte bringen Sie Ihr Notebook (ohne Corporate-Proxys/Unternehmensrichtlinien) mit installiertem Google Chrome Canary und Microsoft Visual Studio Code mit.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-bootcamp-von-0-auf-ms-paint-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/mobiletechcon-2020-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 105
    },
    {
      "id": 174,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Taken to The Next Level",
      "date": "2020-10-27 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to take your Progressive Web App to the next level?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-taken-to-the-next-level",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 55
    },
    {
      "id": 171,
      "type": "Workshop",
      "title": "PWA Workshop: Progressive Web Apps, Superpowered",
      "date": "2020-10-25 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen shortcuts, clipboard access, and native file system access are only a few examples of Fugu’s powerful APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-workshop-progressive-web-apps-superpowered",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-munich-2020-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 177,
      "type": "Webinar",
      "title": "3D-Visualisierung im Web mit BabylonJS ",
      "date": "2020-10-20 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne Businessanwendungen sind schon lange nicht mehr langweilig: Daten wollen visualisiert werden und zwar verständlich und ansprechend. Genau dabei helfen Web-Grafik-Engines wie BabylonJS. Sie ermöglichen, 2D-, 3D, Virtual- und Augmented-Reality-Inhalte verständlich darzustellen. Somit lassen sich unter anderem digitale Konzepte visualisieren, konfigurieren und testen – Cross-Plattform und performant.\n\nIn dieser Session zeigt Max Schulte anhand einer Angular-Anwendung, Kernaspekte und Wege sowie einen Architekturansatz, um neue Visualisierungs- und Bedienmöglichkeiten in Ihre Anwendung integrieren zu können",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-visualisierung-im-web-mit-babylonjs",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-3d-visualisierung-babylonjs-angular",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://green-sky-080a5d803.azurestaticapps.net/",
          "label": "Demo App"
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#143",
          "label": "BabylonJS Playground Start"
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#142",
          "label": "BabylonJS Playground Ende"
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "JavaScript",
        "Architecture",
        "Typescript",
        "Web Technologies",
        "Webinar",
        "BabylonJs"
      ],
      "primaryTag": "BabylonJs",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 107
    },
    {
      "id": 135,
      "type": "Talk",
      "title": "Das Frontend-Experiment: Tausche Framework gegen Web Components",
      "date": "2020-10-14 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Aktuell sind Frameworks wie Angular oder React das Mittel der Wahl für webbasierte Frontends, doch das könnte sich in Zukunft ändern. Christian Liebel von Thinktecture wagt den Blick über den Tellerrand: Mit Web Components bekommt das Web derzeit ein Komponentenmodell, das kontinuierlich weiterentwickelt wird. Die heute bekannten Frameworks könnten damit in Zukunft weniger attraktiv werden. Anhand eines Experiments wird gezeigt, ob Frontends mit Web Components schon heute komplett ohne Framework aufgezogen werden können und ob das für die heute typische App-Entwicklung reichen könnte.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies",
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 57
    },
    {
      "id": 170,
      "type": "Webinar",
      "title": "Blazor WebAssembly jenseits von REST: gRPC in Web-Apps & .NET",
      "date": "2020-10-13 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor WebAssembly ermöglicht SPAs und PWAs für Desktop und Mobile - mit C#, .NET und HTTPS-/REST-Calls. Aber da muss es nicht aufhören. Über gRPC bzw. gRPC-Web kann man zum einen optimierte binäre Daten zwischen Blazor und APIs austauschen - und zum anderen eine Contract-First-Programmierung realisieren. Blazor kann auch hier im Konzert von etablierten Cross-Plattform-Lösungen mitspielen. Sehen Sie in diesem Webinar von Christian Weyer Blazor WebAssembly in Action - jenseits von REST.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-jenseits-von-rest-grpc-in-web-apps-and-net",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "gRPC",
        "ASP.NET Core",
        "Architecture",
        "SPA",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 104
    },
    {
      "id": 169,
      "type": "Talk",
      "title": "Real-time in no time (and costs) – with Azure Functions, Cosmos DB & SignalR",
      "date": "2020-10-13 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Let’s try to sort out some of the real strengths of Serverless and see where it can be a productive tool in your Cloud arsenal: real-time architectures & communication. Join Christian Weyer while discussing Azure Functions, Cosmos DB, and SignalR Service in a holistic scenario – by illustrating an end-to-end solution for a scalable real-time application built in almost no time, with almost no runtime costs. And action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/real-time-in-no-time-and-costs-with-azure-functions-cosmos-db-and-signalr",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Azure Functions",
        ".NET Core",
        "Architecture",
        "SignalR",
        "Serverless"
      ],
      "primaryTag": "Serverless",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 103
    },
    {
      "id": 167,
      "type": "Half Day Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-10-07 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-9ae2ffa5-17a4-4c07-9528-af5899ece615",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-perf",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 166,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2020-10-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-pwa",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-83a8be36-1440-4465-9ea8-813149a0c041",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 168,
      "type": "Workshop",
      "title": "RxJS in Angular-Anwendungen: so schwimmen Sie nicht mehr gegen den Stream",
      "date": "2020-10-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie sind Angular-Entwickler und fühlen sich noch nicht sicher genug, RxJS in vollem Umfang einzusetzen? Es hat sich gezeigt, dass es in der Community noch viel Unsicherheit in der Nutzung von RxJS gibt – selbst für erfahrene Entwickler. In dieser Session mit Yannick Baron wird die Denk- und Arbeitsweise hinter streambasiertem Datenfluss mit RxJS nochmal speziell im Kontext von Angular-Anwendungen angesehen. Darüber hinaus werden häufige Stolperfallen, Antipatterns und Patterns, sowie nützliche Anwendungsbeispiele vorgestellt, um die Anwendung von RxJS einfacher und vertrauter zu machen. Lasst uns gemeinsam mit dem Stream schwimmen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-in-angular-anwendungen-so-schwimmen-sie-nicht-mehr-gegen-den-stream",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-angular-demos",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 163,
      "type": "Workshop",
      "title": "Hands-on-Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2020-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und im Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mit Hilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single Page App Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-moderne-cross-plattform-losungen-01aea073-b24a-4f4a-a53b-aed937f7361d",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 164,
      "type": "Workshop",
      "title": "Kubernetes für Entwickler und Architekten",
      "date": "2020-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\nAusfallsichere und skalierbare Anwendungen zu betreiben und dabei ohne Ausfallzeiten neue Versionen Ihrer Software bereitzustellen, klingt auch heute noch für viele Lösungsanbieter nach einem schönen Traum. Mit Kubernetes und insbesondere den verwalteten Angeboten wie Azure Kubernetes Service (AKS) ist dieser Traum für Viele in greifbare Nähe gerückt. In diesem Tagesworkshop erklärt Thorsten Hans die Eigenschaften, Bestandteile und Möglichkeiten, die Kubernetes als Anwendungsplattform bietet. Nach dem Einstieg und den ersten Schritten mit Kubernetes werden Sie lernen, wie existierende Anwendungsbestandteile im Container-Orchestrator bereitgestellt und effektiv betrieben werden können. Essenzielle Themen, wie beispielsweise automatische Skalierung, der Umgang mit sensitiven Konfigurationsdaten, oder die Verwendung von externen, persistenten Datenspeichern, werden anhand von Beispielen aus der Praxis erläutert und können von Ihnen selbst erprobt werden.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-kubernetes-workshop",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-workshop-at-basta-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Docker",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 160,
      "type": "Talk",
      "title": "Serverless Computing in Azure Kubernetes Service mit KEDA",
      "date": "2020-09-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit Azure Functions stellt Microsoft ein flexibles und mächtiges Framework für Serverless Computing bereit, womit skalierbare und reaktive Anwendungen erstellt werden können. Mit Kubernetes Event-driven Applications (KEDA), können Sie Ihre Azure Functions problemlos in einem Kubernetes-Cluster betreiben. Doch KEDA kümmert sich nicht nur um den Betrieb. Durch geschickte Integration von sowohl externen als auch internen Nachrichten- und Ereignissystemen wie Azure Service Bus oder Azure Event Hub skaliert KEDA Ihre Azure Functions automatisch anhand der anfallenden Anfragen. In diesem Vortrag zeigt Thorsten Hans, wie Sie zukunftssichere, skalierbare und reaktive cloud-native Anwendungen erstellen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/serverless-computing-in-azure-kubernetes-service-mit-keda",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-keda",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 161,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum",
      "date": "2020-09-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum-f3051ae8-e858-4be1-9c36-a8e7a094e22e",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        3
      ],
      "tags": [
        "Electron",
        "Cordova",
        "Capacitor",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 162,
      "type": "Talk",
      "title": "3D-Daten-Visualisierung in Businessanwendungen mit BabylonJS – das Web kann’s",
      "date": "2020-09-23 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne Businessanwendungen sind schon lange nicht mehr langweilig: Daten wollen visualisiert werden und zwar verständlich und ansprechend. Genau dabei helfen Web-Grafik-Engines wie BabylonJS. Sie ermöglichen, 2D-, 3D, Virtual- und Augmented-Reality-Inhalte verständlich darzustellen. Somit lassen sich unter anderem digitale Konzepte visualisieren, konfigurieren und testen – Cross-Plattform und performant. In dieser Session zeigt Max Schulte anhand einer Angular-Anwendung Kernaspekte und Wege sowie einen Architekturansatz, um neue Visualisierungs- und Bedienmöglichkeiten in Ihre Anwendung integrieren zu können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-demo-basta-2020-mainz",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-daten-visualisierung-in-businessanwendungen-mit-babylonjs-das-web-kanns",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#142",
          "label": "BabylonJS PLayground - Live Coding "
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Mobile",
        "Typescript",
        "BabylonJs"
      ],
      "primaryTag": "BabylonJs",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 158,
      "type": "Talk",
      "title": "Kubernetes für .NET Core Entwickler",
      "date": "2020-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie möchten Ihre .NET-Core-Anwendung in Kubernetes betreiben und lernen, wie Sie das Potenzial des Container-Orchestrators nutzen können? Dann besuchen Sie diesen Talk von Kubernetes- und Cloud-native-Experte Thorsten Hans. Sie werden nicht nur den praktischen Umgang mit Kubernetes aus Sicht des Entwicklers lernen, sondern auch, wie Sie Patterns und Praktiken nutzen, um Ihre .NET-Core-Anwendungen optimal in Containern zu betreiben.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-aks",
          "label": "GitHub Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-fur-net-core-etnwicker",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 156,
      "type": "Talk",
      "title": "ASP.NET Core Web-API-Versionierung direkt aus der Praxis",
      "date": "2020-09-22 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, haben wir bei APIs das Problem, dass sich ältere Clientanwendungen auf das Verhalten verlassen, das wir damals bereitgestellt hatten. Änderungen daran würden die Clients nicht verstehen und daher nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unseres API. In dieser Session zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen, wann überhaupt eine neue Version benötigt wird, welche verschiedenen Methoden es gibt, um ein ASP.NET-Core-Web-API zu versionieren, und welche verschiedenen Herangehensweisen im Code möglich sind, um unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-api-versioning",
          "label": "Beispielcode und Demos auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-hybrid-2020-asp-dot-net-core-api-versionierung-aus-der-praxis",
          "label": "Slides bei Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Versioning",
        "ASP.NET Core",
        "Integration",
        "Microservices",
        "Architecture",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 157,
      "type": "Talk",
      "title": "ASP.NET Core Blazor: Single Page Applications im Browser mit C# & WebAssembly",
      "date": "2020-09-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) – bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell – je nach Anwendungsfall – die Grenzen liegen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-single-page-applications-im-browser-mit-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "PWA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 159,
      "type": "Talk",
      "title": "Progressive Web Apps mit Angular: Tipps für Fortgeschrittene",
      "date": "2020-09-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifendes Anwendungsmodell, das auf Webtechnologien basiert. Auch Googles SPA Framework Angular enthält eine PWA-Unterstützung, die schnell angeschaltet ist. Doch damit geht die Arbeit erst richtig los: Christian Liebel zeigt Ihnen, wie Sie mit Angular-App-Updates richtig kommunizieren, Cache-Probleme debuggen und den Anwender korrekt zum Abonnement von Pushbenachrichtigungen oder zum Installieren der App auffordern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-tipps-fur-fortgeschrittene-9c0c117d-93e4-4557-8404-30e43bfcc40c",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 155,
      "type": "Workshop",
      "title": "ASP.NET Core Blazor: moderne Businessanwendungen mit C# & WebAssembly – Full-Stack & Cross-Plattform",
      "date": "2020-09-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht webnative Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor WebAssembly Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET Web-basierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browserplattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Zur Abrundung des Workshops soll auch ein Blick auf Server-side Blazor und der Vergleich damit nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-and-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "Web Components",
        "SPA",
        "Architecture",
        "PWA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 154,
      "type": "Webinar",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff [Webinar]",
      "date": "2020-09-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden.\n\nChristian Liebel zeigt Ihnen die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-25bc73fd-b138-4ac8-8eae-0ea5f9d5e5a9",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "b1af99b54d9e",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 100
    },
    {
      "id": 153,
      "type": "Talk",
      "title": "Blazor-Gwerch: Dodned im Brausa - echt etz?",
      "date": "2020-09-11 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor bereits in einer frühen Vorab-Version möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-gwerch-dodned-im-brausa-echt-etz",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "PWA",
        "Web Technologies",
        "WebAssembly",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 38
    },
    {
      "id": 152,
      "type": "Webinar",
      "title": "Infrastructure as Code - Azure with HashiCorp Terraform",
      "date": "2020-09-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar-september-2020",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-september-2020",
          "label": "Sample GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Terraform",
        "Azure",
        "Infrastructure as Code"
      ],
      "primaryTag": "Infrastructure as Code",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 99
    },
    {
      "id": 115,
      "type": "Talk",
      "title": " Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2020-09-04 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 37
    },
    {
      "id": 150,
      "type": "Workshop",
      "title": "Web-Apps schneller entwickeln mit Ionic & Angular",
      "date": "2020-09-03 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen werden schnell komplex. Neben den rapide wechselnden Anforderungen soll die App installierbar, performant und einfach zu warten sein – und die Entwicklungszeit ist kosteneffektiv knapp bestimmt. Genau diese und andere Herausforderungen versucht Ionic als opinionated Framework zu adressieren. \n\nIn diesem Workshop zeigt Max Schulte, was mit Ionic und Angluar möglich ist und wie Ionic, dank seiner Tools, \"Production Ready\"-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/web-apps-schneller-entwickeln-mit-ionic-and-angular",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-ionic",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Capacitor",
        "Web Technologies",
        "Web Components",
        "Mobile",
        "PWA",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 149,
      "type": "Half Day Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-09-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-20655223-0b14-43ab-ba43-5b8943e2dad7",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-perf",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "Performance"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 151,
      "type": "Talk",
      "title": "Web Components: An Overview",
      "date": "2020-09-02 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "A brief overview of web components in regard to the question \"can web components replace SPA frameworks?\".",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-components-an-overview",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 37
    },
    {
      "id": 148,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2020-09-02 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-e71f0872-ccce-43de-9da3-f63db1b40c24",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-pwa",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://speakerdeck.com/thorstenhans/ohne-netz-aber-mit-doppeltem-boden-offline-first-apps-mit-html5-und-sql-server-backend",
          "label": "Ohne Netz, aber mit doppeltem Boden: Offline-First-Apps mit HTML5 und SQL Server Backend"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 147,
      "type": "Webinar",
      "title": "Blazor Server: Mögliche Architekturalternative zu SPAs?",
      "date": "2020-08-12 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Viele .NET-Entwickler sind Feuer und Flamme wenn es um Blazor und Webentwicklung geht. Wenn man etwas genauer hinschaut, stellt man schnell fest, dass man gleich zwei Geschmacksrichtungen vor sich hat: Blazor WebAssembly und Blazor Server.\n \nIn diesem Webinar wollen wir uns genauer mit Blazor Server beschäftigen: Was ist Blazor Server überhaupt, wo liegen die Unterschiede zum Client-seitigen Blazor und SPAs im Allgemeinen und welche Auswirkungen haben diese Unterschiede auf die Art, wie wir Web-Anwendungen schreiben? Was muss ich lernen, um mit Blazor Server arbeiten zu können und worauf muss ich eventuell besonders achten, wenn ich meine ersten Schritte mit Blazor Server gehen möchte?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/isabelschrage/blazor-server-mogliche-architekturalternative-zu-spas",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "SPA",
        "ASP.NET Core",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": "f61bec5686c7",
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 98
    },
    {
      "id": 146,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-07-28 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number-juli-2020",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "Web Technologies",
        "SPA",
        ".NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 97
    },
    {
      "id": 145,
      "type": "Webinar",
      "title": "Electron, Cordova & PWA - was, wann, wie & warum?",
      "date": "2020-07-21 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang.\n\nPWA-Professional Christian Liebel erklärt Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-and-pwa-was-wann-wie-and-warum",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Electron",
        "Web Technologies",
        "PWA",
        "Cordova"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 96
    },
    {
      "id": 144,
      "type": "Webinar",
      "title": "Git started",
      "date": "2020-07-14 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Versionskontrolle ist ein Muss in jedem Projekt, ob groß oder klein, professionell oder privat. Git wurde 2005 ins Leben gerufen und ist eines der populärsten Systeme zur verteilten Versionsverwaltung.\nSetzen sie schon Git ein und fühlen sich unsicher in der Verwendung, oder ist Git neu für Sie?\n\nDieses Webinar erklärt das Konzept hinter Git und illustriert die Verwendung im Day-to-Day-Business, um ein fundamentales Verständnis zu vermitteln. Auch Every-Day-Benutzer könnten das eine oder andere noch dazu lernen. Let's git started - alle zusammen!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/git-started-verteilte-versionsverwaltung-mit-git",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 95
    },
    {
      "id": 143,
      "type": "Webinar",
      "title": "Docker für .NET Entwickler",
      "date": "2020-07-07 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/docker-webinar",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/docker-webinar",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Containers",
        "Docker"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 94
    },
    {
      "id": 142,
      "type": "Webinar",
      "title": "Azure Functions - Serverless für .NET Entwickler",
      "date": "2020-06-30 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Serverless-Modell ist eine von vielen verschiedenen Möglichkeiten, Anwendungen für die Cloud zu entwickeln und zu betreiben. Es verspricht einen leichten Einstieg in die Entwicklung von Anwendungen und in den Betrieb eines Backends. Dabei ist leider nicht immer klar, wann und wie das Serverless-Modell sinnvoll genutzt werden kann.\n\nIn diesem Webinar zeigt Boris Wilhelms, was das Serverless-Modell ist und wie wir als .NET-Entwickler Azure Functions nutzen können um Serverless Code zu schreiben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/azure-functions-serverless-fur-net-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-azure-functions",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "Azure",
        ".NET Core",
        "Serverless",
        "Webinar",
        "Azure Functions"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 93
    },
    {
      "id": 141,
      "type": "Talk",
      "title": "Angular für XAML-Entwickler",
      "date": "2020-06-30 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das moderne Web lockt mit mächtigen Features und sprengt Plattformgrenzen. Googles SPA-Framework Angular eröffnet einen möglichen Weg in diese schöne neue Welt. Das Framework weist zwar eine gewisse Lernkurve auf, doch XAML-Entwickler haben beim Einstieg in die Technologie glücklicherweise entscheidende Vorteile: Denn viele aus WPF, Silverlight und UWP bekannte Konzepte finden sich auch in Angular wieder. In diesem Webinar möchten wir XAML-Entwicklern anhand konkreter Fallbeispiele eine Orientierungshilfe geben und zeigen, wie der Einstieg in die Entwicklung mit Angular rasch gelingen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-fur-xaml-entwickler-20eb1f34-cf5c-4d1d-b639-b2d8522ad933",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-angular",
          "label": "Angular-Beispiel"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-wpf",
          "label": "WPF-Beispiel"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 85
    },
    {
      "id": 131,
      "type": "Talk",
      "title": "Blazor jenseits von REST: SignalR & gRPC in Web-Apps",
      "date": "2020-06-29 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor WebAssembly ermöglicht SPAs und PWAs für Desktop und Mobile - mit C#, .NET und HTTPS-/REST-Calls. Aber da muss es nicht aufhören. Über gRPC bzw. gRPC-Web kann man zum einen hoch optimierte binäre Daten zwischen Blazor und APIs austauschen - und zum anderen eine Contract-First-Programmierung realisieren. Wenn man zudem ein bisschen Leben in Form von Echtzeit-Updates in die Anwendung bringen möchte, dann ist SignalR die richtige Wahl. Blazor kann auch hier im Konzert der Cross-Plattform-Lösungen mitspielen. Sehen Sie in dieser Session von Christian Weyer Blazor in Action - jenseits von REST.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-jenseits-von-rest-signalr-and-grpc-in-web-apps",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/dwx-home-blazor-grpc-signalr",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "SignalR",
        "gRPC",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 85
    },
    {
      "id": 139,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Plattform Realtime Push",
      "date": "2020-06-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-signalr-core-cross-platform-realtime-push",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Blazor",
        "SignalR"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 91
    },
    {
      "id": 138,
      "type": "Webinar",
      "title": "Angular für XAML-Entwickler",
      "date": "2020-06-09 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das moderne Web lockt mit mächtigen Features und sprengt Plattformgrenzen. Googles SPA-Framework Angular eröffnet einen möglichen Weg in diese schöne neue Welt. Das Framework weist zwar eine gewisse Lernkurve auf, doch XAML-Entwickler haben beim Einstieg in die Technologie glücklicherweise entscheidende Vorteile: Denn viele aus WPF, Silverlight und UWP bekannte Konzepte finden sich auch in Angular wieder. In diesem Webinar möchten wir XAML-Entwicklern anhand konkreter Fallbeispiele eine Orientierungshilfe geben und zeigen, wie der Einstieg in die Entwicklung mit Angular rasch gelingen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-fur-xaml-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-angular",
          "label": "Angular-Beispiel"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-wpf",
          "label": "WPF-Beispiel"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 90
    },
    {
      "id": 137,
      "type": "Webinar",
      "title": "Azure Kubernetes Service für .NET Core Entwickler",
      "date": "2020-06-02 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-kubernetes-service-fur-net-core-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/aks-netcore-webinar",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        ".NET Core",
        "AKS",
        "Docker"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 89
    },
    {
      "id": 136,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-05-26 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Webinar anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number-1bf79f69-2ba4-413c-b0a1-04c794513a88",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "SPA",
        ".NET Core",
        "Web Technologies",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 88
    },
    {
      "id": 173,
      "type": "Webinar",
      "title": "Web Components – das Ende der SPA-Framework-Ära?",
      "date": "2020-05-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components – ein Begriff, den wir immer öfter lesen und lesen werden. Dahinter stehen die Technologien Custom Elements, Shadow DOM und HTML Templates. Zusammen ergeben sie ein natives Komponentenmodell für unseren Browser. Es hilft uns, wiederverwendbare UI-Komponenten zu entwickeln, die wir in jeder App benutzen können. Völlig gleich, ob diese Anwendungen mit einem SPA-Framework entwickelt wurden. \n\nBedeutet das aber auch, dass wir eigentlich gar kein SPA-Framework mehr benötigen, sondern alles mit Web Components entwickeln können? Dieser spannenden Frage geht Manuel Rauber in diesem Webinar nach anhand einer Real-World-Demo-Applikation, Live-Coding und den Vor- und Nachteilen von Web Components.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-das-ende-der-spa-framework-ara-c68b0388-7730-4822-abc5-c7e96e18a067",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 86
    },
    {
      "id": 127,
      "type": "Webinar",
      "title": "3D-Visualisierung in Web Apps: Angular und BabylonJS in Symbiose",
      "date": "2020-05-12 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Dieses Webinar zeigt die Vorteile einer 3D-Engine in modernen Business-Anwendungen. Es wird in Detail auf die Aspekte einer integrativen Architektur eingegangen und anhand einer Demo und Live-Code verdeutlicht wie die Kommunikation stattfinden kann. ",
      "media": [
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": "Lagerhaus Beispiel App"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-architecture",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-visualisierung-in-web-apps-angular-und-babylonjs-in-symbiose",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Architecture",
        "Performance",
        "Web Technologies",
        "BabylonJs"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 80
    },
    {
      "id": 130,
      "type": "Webinar",
      "title": "Entity Framework Core - Performance-Optimierung aus der Praxis",
      "date": "2020-05-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit der Veröffentlichung von Entity Framework Core v3 hat sich das Verhalten des Objekt-Relationalen-Mappers von Microsoft an einigen Stellen maßgeblich geändert. Einige Performanceprobleme haben sich mit der neuen Version praktisch von selbst gelöst, andere Probleme sind neu bzw. aus älteren Versionen von Entity Framework zurückgekehrt. Es ist somit sehr empfehlenswert zu wissen, welche Version für welche Problemart besonders anfällig ist, um möglichst viel Geschwindigkeit aus EF-Abfragen und den dahinterliegenden SQL-Abfragen herauszuholen.\nIm ersten Teil des Webinars werden die häufigsten Performance-Probleme in Entity Framework Core v2 und v3 aufgezeigt. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden SQL Server Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/entity-framework-core-performance-optimierung-aus-der-praxis",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Execution Plan",
        "MS SQL Server",
        "Performance",
        "Entity Framework Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 84
    },
    {
      "id": 227,
      "type": "Webinar",
      "title": "Entity Framework Core 5 - Performance-Optimierung aus der Praxis",
      "date": "2020-05-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ef-core-performance-webinar-2021",
          "label": "Demos"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/entity-framework-core-5-performance-optimierung-aus-der-praxis",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 84
    },
    {
      "id": 117,
      "type": "Webinar",
      "title": "ASP.NET Core Web-API Dokumentation mit Swagger",
      "date": "2020-04-29 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wenn wir eine .NET Core Web-API bauen, ist es nicht nur damit getan, ein neues Projekt zu erzeugen, ein paar Controller zu implementieren und sie dann zu deployen.\n\nEine API ist - wie der Name schon sagt - eine Schnittstelle, und eine Schnittstelle sollte wohl definiert und auch wohl dokumentiert sein. Vor allem, damit die Entwickler, die mit unserer API arbeiten müssen, auch wissen was sie kann und wie sie funktioniert. Allerdings soll uns die Dokumentation nicht zu viel Zeit kosten und sie sollte möglichst immer auf dem aktuellen Stand sein. Und was wäre, wenn eine solche, schnell erstellte Dokumentation uns als API-Entwickler und auch den Konsumenten unserer API auch noch Arbeit abnehmen könnte?\n\nIn diesem Webinar zeigt Ihnen Sebastian Gingter wie man diese beiden Fliegen mit einer Klappe schlagen kann: Mit Hilfe von Swagger erzeugen wir erst eine umfassende, ständig aktuelle und lebendige Dokumentation unserer API im Open API Format. Danach sehen wir uns an, wie uns diese technische Dokumentation helfen kann, zum einen Zeit zu sparen und zum anderen Fehler zu vermeiden, in dem wir diese akkurate Basis nehmen, um Client- Code und Test-Rümpfe zu generieren. Web APIs jenseits von Hello World, mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/tt-webinar-2020-openapi",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/tt-webinar-2020-openapi",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Swagger",
        "ASP.NET Core",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 77
    },
    {
      "id": 116,
      "type": "Webinar",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2020-04-21 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel zeigt Ihnen die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-5abb7495-ffd9-4b00-b8bc-589f079f79a2",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pwa-deep-dive-webinar",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://www.thinktecture.com/de/cheatsheet/pwa",
          "label": "PWA Cheat Sheet"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies",
        "Webinar",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 76
    },
    {
      "id": 114,
      "type": "Talk",
      "title": "Web Components als Frameworkersatz – das Frontend-Experiment",
      "date": "2020-04-16 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wenn ein Frontend im Web benötigt wird, ist die Wahl schnell auf die üblichen Verdächtigen eingegrenzt: Angular, React oder Blazor. Durch Web Components könnte sich das in Zukunft ändern. Christian Liebel von Thinktecture wagt einen Blick in die Glaskugel: Mit Web Components hat das Web ein Komponentenmodell erhalten, das kontinuierlich weiterentwickelt wird. Vielleicht braucht es in Zukunft nicht mehr für jeden Anwendungsfall zwingend ein schweres Framework. Anhand eines Experiments wird demonstriert, ob sich Frontends schon heute komplett mit Web Components statt Frameworks aufziehen lassen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-components-als-frameworkersatz-das-frontend-experiment",
          "label": ""
        },
        {
          "type": "Video",
          "url": "https://www.twitch.tv/videos/594354515?t=05h42m47s",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 75
    },
    {
      "id": 113,
      "type": "Talk",
      "title": "Terraform Webinar",
      "date": "2020-04-16 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/terraform-webinar-azure-meetup-ffm",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform"
      ],
      "primaryTag": "Terraform",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 74
    },
    {
      "id": 112,
      "type": "Webinar",
      "title": "Infrastructure as Code mit Terraform",
      "date": "2020-04-14 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-april-2020",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 73
    },
    {
      "id": 110,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-04-01 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Webinar anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "SPA",
        ".NET Core",
        "Web Technologies",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 71
    },
    {
      "id": 108,
      "type": "Workshop",
      "title": "Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2020-02-28 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Push-Benachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-fur-moderne-cross-plattform-losungen",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pwapraxis/angular-demo",
          "label": "Angular-Projekt"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pwapraxis/server",
          "label": "Server"
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 101,
      "type": "Talk",
      "title": "Swagger & Co. im Praxiseinsatz für Tests und Clients",
      "date": "2020-02-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Als Entwickler wollen wir uns das Leben möglichst einfach machen. Und wenn wir eine Aufgabe vor uns haben, dann wollen wir auch möglichst viel damit erreichen. Nun haben wir ein ASP.NET-Core-Web-API gebaut, und es mit Hilfe von Swagger dokumentiert. Und nun? In dieser Session zeigt Ihnen Sebastian Gingter, wie man mit möglichst wenig Aufwand möglichst viel aus einer lebendigen Swagger-Dokumentation herausholen kann. Dabei erleben Sie auch, wie man von dort aus mit wenigen Schritten zu einer umfassenden End-to-End-Testsuite kommt. Und wenn wir schon dabei sind, dann schauen wir uns auch noch an, wie wir von der Dokumentation zu komplett funktionalen Clientbibliotheken kommen, ohne uns zu sehr anzustrengen: E2E-Web-APIs – jenseits von Hello World und mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-openapi",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-spring-2020-openapi",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Swagger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 107,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum?",
      "date": "2020-02-26 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum-42fa2c1b-346d-4e77-a03a-4b03036d9048",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-electron-cordova-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Cordova",
        "Electron",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 106,
      "type": "Talk",
      "title": "Progressive Web-Apps mit Angular: Tipps für Fortgeschrittene",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifendes Anwendungsmodell, das auf Webtechnologien basiert. Auch Googles SPA Framework Angular enthält eine PWA-Unterstützung, die schnell angeschaltet ist. Doch damit geht die Arbeit erst richtig los: Christian Liebel zeigt Ihnen, wie Sie mit Angular App-Updates richtig kommunizieren, Cacheprobleme debuggen und den Anwender korrekt zum Abonnement von Push-Benachrichtigungen oder zum Installieren der App auffordern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-tipps-fur-fortgeschrittene",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-advanced-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 104,
      "type": "Talk",
      "title": "Blazor: SPAs im Browser mit C# und WebAssembly",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-spas-im-browser-mit-c-number-und-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "PWA",
        "Web Components",
        "Web Technologies",
        "SPA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 102,
      "type": "Talk",
      "title": "Web Components: native Komponenten fürs Web – das Ende der SPA Frameworks?",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Komponenten – ein Begriff der uns Entwicklern sehr geläufig ist, egal ob als Windows-, Desktop- oder Webentwickler. Durch Kapselung von UI-Definition und Code-behind erhalten wir modulare und wiederverwendbare Bausteine zum Zusammensetzen der Oberfläche unserer Anwendung. Während wir damals im Web mit jQueryUI erste Komponenten entwickeln konnten, bedienen wir uns heute moderner Frameworks wie Angular, React oder Vue.js. Doch mit den Webstandards für HTML-Templates, Shadow DOM und Custom Elements erhalten wir die Möglichkeit, ein natives Komponentenmodell im Browser zu nutzen, gänzlich ohne Frameworks: Es leben die Web Components! In dieser Session klärt Manuel Rauber, wie Web Components funktionieren, wo die Vorteile und Nachteile liegen und ob wir heutzutage schon in der Lage sind, Single Page Applications zu entwickeln, die gänzlich ohne Frameworks auskommen. Sind Sie auch schon auf die Antworten gespannt?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-native-komponenten-furs-web-das-ende-der-spa-frameworks",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-web-components/",
          "label": "Live Demo"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": "Chat Demo"
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": "Chat Online Demo"
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Web Components",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 103,
      "type": "Talk",
      "title": "Pragmatische Microservices mit .NET Core (3) – mehr als nur gRPC",
      "date": "2020-02-24 21:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Microservices: ja! Oder eher doch nicht? Um diese Frage beantworten zu können, klärt Christian Weyer in diesem Vortrag, was Microservices sind, was sie nicht sind, wann man sie nutzt – und vor allem: wie man Microservices in der .NET-Welt implementieren kann. Sehen Sie Architekturansätze und Patterns in Aktion und erleben Sie Technologien wie Web-APIs, gRPC, Push Messaging, Background Workers und Co. im praktischen Einsatz mit .NET Core 3. Versuchen wir gemeinsam, langweilige Architekturthemen spannend zu machen – durch eine pragmatische Sichtweise.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pragmatic-microservices-dotnetcore",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-mit-net-core-3-mehr-als-nur-grpc",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Architecture",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 105,
      "type": "Workshop",
      "title": "Workshop - Blazor: Moderne Businessanwendungen mit C# & WebAssembly – Full-Stack- und Cross-Plattform",
      "date": "2020-02-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht-webnativen Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET webbasierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browser-P﻿lattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Als Abrundung des Workshops soll auch ein Blick auf und ein Vergleich mit Server-side Blazor nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/workshop-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-und-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "SPA",
        "PWA",
        "Web Components",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 100,
      "type": "Talk",
      "title": "Hot Topic: Dependency Injection",
      "date": "2020-02-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Dependency Injection (DI). By now, everyone should have heard about it.\nBut what actually is \"Dependency Injection\" and \"Inversion of Control\"?\nWe can find 'it' implemented in a lot of frameworks nowadays and for\nsomeone not familiar with the concept it might seem like magic.\nIn this session we are going to take a closer look behind the curtains\nof this software design principle and show what DI can do for us and how\na very simplistic version could be implemented in Javascript.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/hot-topic-dependency-injection-lets-talk-about-it",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/dependency-injection-poc",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular",
        "Architecture",
        "Typescript"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 69
    },
    {
      "id": 99,
      "type": "Talk",
      "title": "Angular - BabylonJS Integration Deep Dive",
      "date": "2020-02-06 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "\"Angular - BabylonJS Integration Deep Dive\" - This talk demonstrates how Angular and BabylonJS can be integrated in detail, what key aspects are there, and gives an idea of what can be created with the demonstrated approach.\nYou will learn about the similarities and differences between Angular and BabylonJS, as well as an approach to create a future proof architecture that utilizes the best of both frameworks.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/angular-babylonjs-integration-deep-dive",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-architecture",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Architecture",
        "BabylonJs",
        "Integration",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 67
    },
    {
      "id": 80,
      "type": "Talk",
      "title": "Web Components, ganz ohne Framework! Live & in Action ",
      "date": "2020-01-21 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Jeder kennt es: Kapselung und Wiederverwendung von UI-Komponenten im Web sind sehr mühsam. Meist ist es ein Zusammenkopieren von HTML, CSS und JavaScript, oftmals über eine oder mehrere Dateien verteilt. Vergisst man einen Teil, sieht es nicht wie gewünscht aus oder die Interaktion funktioniert nicht.\nDoch damit ist jetzt Schluss! Mit Web Components eröffnen sich neue Wege im Web, um UI-Komponenten standardisiert und ganz ohne Framework implementieren und verwenden zu können. In dieser Session zeigt Patrick Jahr die wichtigsten Punkte für die erste eigene Web Component mit den Standards HTML Templates, Custom Elements und Shadow DOM. Alles Live mit VSCode, Chrome und den DevTools – in Action!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/web-component-ganz-ohne-framework-live-and-in-action-81b71392-fd8e-4d7f-b0d3-0a828673f7f1",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/rnjs-native-web-components",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        "JavaScript",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 51
    },
    {
      "id": 81,
      "type": "Workshop",
      "title": "Serverless-Architekturen für Java, .NET und node.js – mit Azure Functions & Co.",
      "date": "2019-12-10 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Egal ob Sie Java, .NET oder node.js als Haupttechnologie nutzen: mit Serverless-Ansätzen können Sie schnell \"Gummi auf die Straße\" bringen, um ihre Microservices oder Ihren \"Glue Code\" mir-nichts-dir-nichts entwickeln und bereitstellen zu können. In diesem Workshop sehen Sie Azure Serverless-Dienste ohne großes Marketing-Tamtam im Einsatz. Neben den Grundlagen werden vor allem typische Anwendungsszenarien für Azure Functions, Azure Service Bus, Azure Storage und Co. illustriert. Lehnen Sie sich also zurück und sehen Sie Serverless in Action, mit Java, .NET und JavaScript.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-fur-java-net-und-node-dot-js-mit-azure-functions-and-co",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure Functions",
        "Serverless",
        "Microservices",
        ".NET Core",
        "Azure",
        "Java",
        "JavaScript"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 41
    },
    {
      "id": 76,
      "type": "Workshop",
      "title": "Offline-First: Architektur-Patterns & Implementierung für APIs & Backends",
      "date": "2019-12-10 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\"Keine Internetverbindung\" – ein Satz, den wir alle aus vielen Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form eines HTTP APIs. Wie man sein Backend um eine offline-fähige Architektur erweitert, um es bspw. von einer SPA/PWA nutzen zu können, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Workshop. Denn bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Allgemein werden Themen im API Design, u.a. Synchronisationsstrategien von Anwendungs- und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur – sowohl für neue als auch bestehende Anwendungen – diskutiert. Am Beispiel einer PWA mit einem Backend in Java als auch in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns gezeigt.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/offline-first-architektur-patterns-and-implementierung-fur-apis-and-backends",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-boardist-offline.azurewebsites.net/",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-boardist.azurewebsites.net/games",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 41
    },
    {
      "id": 50,
      "type": "Talk",
      "title": "Entity Framework Core - Performanzoptimierung",
      "date": "2019-12-09 10:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Entity Framework hat Microsoft vor Jahren einen Objekt-Relationalen-Mapper geschaffen, welcher sich in der .NET-Welt mittlerweile einer großen Beliebtheit erfreut. Der O/R-Mapper ermöglicht es, ohne SQL-Kenntnisse auf eine Datenbank sowohl lesend als auch schreibend zuzugreifen. Doch hier verbergen sich Risiken, denn ein O/R-Mapper erweckt den Eindruck, dass der Anwendungsentwickler sich nie wieder mit SQL zu befassen braucht - was für 80% der Abfragen in einer Anwendung auch stimmen mag. Die restlichen 20% können allerdings die gesamte Applikation durch sehr schlechte Antwortzeiten beinah unbenutzbar machen. Die unperformanten SQL-Abfragen sind jedoch nicht die einzige Quelle welche die Benutzbarkeit in Mitleidenschaft ziehen. Es spielt auch eine Rolle wie genau Entity Framework im Code verwendet wird. Nicht selten wird die Tatsache vergessen, dass die LINQ-Abfragen am Ende nicht im Arbeitsspeicher, sondern durch die Datenbank ausgeführt werden – mehr oder weniger „transparent“. In ersten Teil des Vortrags wird gezeigt auf was geachtet werden sollte, um die häufigsten Stolperfallen bei der Verwendung von Entity Framework Core zu vermeiden. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden die Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/it-tage-2019-entity-framework-core-performanzoptimierung",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Execution Plan",
        "MS SQL Server",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 52
    },
    {
      "id": 64,
      "type": "Talk",
      "title": "Progressive Web Apps: Cross-Plattform-Apps über iOS und macOS hinaus",
      "date": "2019-12-04 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\nStellen Sie sich vor, Sie schreiben Ihre App einmal – und sie läuft nicht nur auf macOS und iOS, sondern auch noch auf Windows, Android, Linux, Chrome, Safari, Firefox und Edge! Der alte Java-Traum \"Write once, run anywhere\" wird mit den Progressive Web Apps endlich Wirklichkeit. Christian Liebel stellt Ihnen das neue Anwendungsmodell abseits des App Store einschließlich seiner technologischen Grundlagen vor, und zeigt, was es leisten kann und wo die Grenzen der PWA liegen.",
      "media": [
        {
          "type": "Related Link",
          "url": "https://heise-macdev.de/lecture.php?id=9471&source=0",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-cross-plattform-apps-uber-ios-und-macos-hinaus",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 29
    },
    {
      "id": 74,
      "type": "Talk",
      "title": "“Alles C#, oder was?\" Cross-Plattform Web-Anwendungen mit ASP.NET Core Blazor",
      "date": "2019-11-26 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor bereits in einer frühen Vorab-Version möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/alles-c-number-oder-was-cross-plattform-web-anwendungen-mit-asp-dot-net-core-blazor",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "PWA",
        "Web Technologies",
        "WebAssembly"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 51,
      "type": "Talk",
      "title": "Entity Framework Core - Performanzoptimierung",
      "date": "2019-11-26 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Entity Framework hat Microsoft vor Jahren einen Objekt-Relationalen-Mapper geschaffen, welcher sich in der .NET-Welt mittlerweile einer großen Beliebtheit erfreut. Der O/R-Mapper ermöglicht es, ohne SQL-Kenntnisse auf eine Datenbank sowohl lesend als auch schreibend zuzugreifen. Doch hier verbergen sich Risiken, denn ein O/R-Mapper erweckt den Eindruck, dass der Anwendungsentwickler sich nie wieder mit SQL zu befassen braucht - was für 80% der Abfragen in einer Anwendung auch stimmen mag. Die restlichen 20% können allerdings die gesamte Applikation durch sehr schlechte Antwortzeiten beinah unbenutzbar machen. Die unperformanten SQL-Abfragen sind jedoch nicht die einzige Quelle welche die Benutzbarkeit in Mitleidenschaft ziehen. Es spielt auch eine Rolle wie genau Entity Framework im Code verwendet wird. Nicht selten wird die Tatsache vergessen, dass die LINQ-Abfragen am Ende nicht im Arbeitsspeicher, sondern durch die Datenbank ausgeführt werden – mehr oder weniger „transparent“. In ersten Teil des Vortrags wird gezeigt auf was geachtet werden sollte, um die häufigsten Stolperfallen bei der Verwendung von Entity Framework Core zu vermeiden. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden die Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/ddc-2019-entity-framework-core-performance-optimization",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Performance",
        "MS SQL Server",
        "Execution Plan"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 63,
      "type": "Workshop",
      "title": "Progressive Web Apps für .NET-Entwickler: Frontend der Zukunft",
      "date": "2019-11-25 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET Core eignet sich hervorragend zur Implementierung plattformübergreifender Konsolenanwendungen und Backends. Zuletzt haben nun auch wieder Frontendtechnologien in .NET Core Einzug erhalten. Doch Windows Forms und WPF sind nicht plattformübergreifend einsetzbar. Progressive Web Apps (PWA) hingegen laufen auf allen nennenswerten Mobil- und Desktopplattformen sowie in jedem Browser und bieten sich somit als zukunftssichere Frontendplattform an. Frameworks wie Angular bringen Architekturkonzepte ins Web, die Sie von WPF/XAML schon kennen. Insgesamt eignen sich PWA hervorragend als Frontend für Ihre in .NET Core geschriebene Webschnittstelle. Christian Liebel stellt Ihnen die PWA-Basics vor und zeigt, wie Sie mit einem in .NET Core geschriebenen Backend kommunizieren können.",
      "media": [
        {
          "type": "Related Link",
          "url": "https://www.dotnet-developer-conference.de/programm/#/talk/progressive-web-apps-fur-net-entwickler-frontend-der-zukunft",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-fur-net-entwickler-frontend-der-zukunft",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 61,
      "type": "Talk",
      "title": "Blockchain als Architektur-Komponente – Fluch oder Segen? ",
      "date": "2019-11-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Start der Bitcoin Blockchain im Jahr 2009 wurde der Welt eine verteilte Datenbank zugänglich, bei der nur im Konsens der Teilnehmer über den aktuellen Zustand bestimmt werden kann. Während der Use-Case einer unabhängigen Währung leicht zu greifen ist, fällt es uns bisweilen schwer, die Charakteristiken von Blockchains sinnvoll auf andere Anwendungen zu übertragen. In diesem Talk werden Sie lernen, welche Features die Blockchain einzigartig machen und unter welchen Umständen Sie davon profitieren können - aber auch wann Sie davon absehen sollten. Dieses Wissen wird Patrick Stürmlinger mit Ihnen anhand eines real existierenden Projekts zur Sicherung von Dokumentenarchiven anwenden und vertiefen.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        9
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 23
    },
    {
      "id": 72,
      "type": "Talk",
      "title": "WebComponents: Native Komponenten fürs Web – mal ohne Framework?",
      "date": "2019-11-18 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Begriffe UI-Komponenten oder Controls kennen wir Entwickler seit \"Ewigkeiten\". Durch Kapselung erhalten wir modulare und wiederverwendbare Baukastenelemente, aus denen unsere UI-Anwendungen zusammengesetzt werden. Bisher mussten wir uns im Web eines SPA Frameworks bedienen. Ob Angular, React, Vue.js oder Polymer. Doch keines dieser Frameworks wollte oder konnte so recht mit dem anderen zusammenarbeiten. Dies könnte sich in Zukunft ändern mit WebComponents. Diese beschreiben anhand von Standards wie CustomElements ein Komponentenmodell für das Web und bietet damit erstmal die Möglichkeit, native Komponenten im Browser gänzlich ohne ein Framework oder aber über Framework-Grenzen hinweg einzusetzen. In dieser Session klärt Manuel Rauber wie WebComponents funktionieren, wo die Vorteile und Nachteile liegen – und, vermutlich am spannendsten: er geht der Frage in gewohnt praktischer Manier nach, ob WebComponents mit aktuellen Single-Page Application (SPA) Frameworks wie Angular oder React genutzt und erstellt werden können. Abgerundet wird das Ganze mit einem Ausblick, wie wir künftig Web-Anwendungen mit Web Components entwickeln könnten. Auf zum nächsten Schritt!",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": "https://github.com/thinktecture-labs/web-components-chat"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-mal-ohne-framework?slide=2",
          "label": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-mal-ohne-framework?slide=2"
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net",
          "label": "https://tt-web-components-chat-ng.azurewebsites.net"
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 23
    },
    {
      "id": 62,
      "type": "Talk",
      "title": "Too many challenges, so little time – How can blockchain integration succeed without an army of engineers?",
      "date": "2019-11-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "For a long time, neither politics nor business took the issue of Blockchain seriously. Today, every larger company develops at least proof of concepts, while Blockchain initiatives are proclaimed. However, feasibility quickly reaches its limits when it comes to transforming a PoC into a product. The rapid development of the space, even by IT standards, and a simultaneous lack of Blockchain experts slows down many projects. In this talk, Patrick Stürmlinger points out the difficulties of integration and introduces you to the concept of a Blockchain gateway (including an exemplary implementation), which solves the biggest integration problems such as the different functionality of the different Blockchains, the predictability of costs and the handling of mini-forks. ",
      "media": [],
      "previewSrc": "",
      "speaker": [
        9
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 4
    },
    {
      "id": 67,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-11-09 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, you’ll get to know common performance pitfalls in Angular applications and learn how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Related Link",
          "url": "http://www.devfestka.de/programm",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-9422e7d0-1204-4577-bd57-e6d318cd6c57",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 30
    },
    {
      "id": 65,
      "type": "Talk",
      "title": " PWA Update 2019: Modern Web APIs for even better Progressive Web Apps",
      "date": "2019-11-08 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "PWA is a great application model: These cross-platform, web-based apps work offline, can show push notifications and run in an own window (desktop) or standalone (mobile). Google’s Project Fugu will bring even more native functionality to the web, such as notification badges, wake locks and native file system access. Thinktecture’s Christian Liebel, GDE for Web Technologies, shows you how those APIs will pave the way for an even brighter future for Progressive Web Apps.",
      "media": [
        {
          "type": "Related Link",
          "url": "http://www.devfestka.de/programm",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-2019-modern-web-apis-for-even-better-progressive-web-apps",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 30
    },
    {
      "id": 66,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-getriebene Microservices mit Azure Functions & Co. – auch für Java-Entwickler",
      "date": "2019-11-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Warum muss es \"Serverless oder Microservices\" sein? Es sollte vielmehr \"Microservices mit Serverless\" heißen! Basierend auf einigen der allgemein anerkannten Prinzipien von Microservices können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen - nennen wir sie mal Nanoservices. Christian Weyer zeigt Ihnen einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Diensten & Tools. Erleben Sie Serverless Azure mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier in Aktion - jenseits der typischen Functions-as-a-Service-Beispiele.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-getriebene-microservices-mit-azure-functions-and-co-auch-fur-java-entwickler-1231a20a-87da-4e62-af77-74ee9f8279da",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 32
    },
    {
      "id": 60,
      "type": "Talk",
      "title": "Advanced Progressive Web Apps: Push notifications under control",
      "date": "2019-10-21 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, Progressive Web Apps (PWA) are one of the hottest topics on the web today. A PWA should feel like a real app, including the ability to show push notifications. In this talk, Thinktecture’s Christian Liebel (@christianliebel) will show you how to implement push messaging in your PWA or website using the Push API, including a look at helpful libraries and third-party services. As a part of Google’s Project Fugu, push notifications will get even better thanks to the advent of the Badging API and Notification Triggers.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/advanced-progressive-web-apps-push-notifications-under-control-81c57f71-2200-4494-b14c-8a03c45697e6",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://javascript-conference.com/web-development-architecture/advanced-progressive-web-apps-push-notifications-under-control/",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-munich-2019-push",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=fKDdulqFGSU",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 6
    },
    {
      "id": 59,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-10-19 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, we’ll have a look at common performance pitfalls in Angular applications and how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone, lazy loading, server-side rendering and Service Worker support. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Related Link",
          "url": "https://codecamp.ro/timisoara#agenda",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-f862942b-25a1-4a41-a82c-7df93c77c505",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 28
    },
    {
      "id": 58,
      "type": "Keynote",
      "title": "The Web in 2020: wohin sich das Web bewegt",
      "date": "2019-10-15 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Einmal im Jahr trifft sich das World Wide Web Consortium (W3C) zur Meetingwoche. Christian Liebel von Thinktecture war beim diesjährigen Treffen der Arbeitsgruppen in Japan dabei und hat die neuesten Informationen im Gepäck: Welche Spezifikationen gerade im Gespräch sind – welche neuen Schnittstellen das Web bekommen soll – und was das für Webanwendungen im Jahr 2020 heißen könnte.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/the-web-in-2020-wohin-sich-das-web-bewegt",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://www.web-developer-conference.de/programm/#/talk/keynote-tba",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 27
    },
    {
      "id": 57,
      "type": "Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2019-10-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-2dfd9043-3590-4810-9621-64e02eadb77c",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://liebel.io/ngp19h",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 71,
      "type": "Workshop",
      "title": "Immer & überall: Offlinefähige Progressive Web Apps – am Beispiel Angular",
      "date": "2019-10-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "“Keine Internetverbindung” – ein Satz, den wir alle aus genutzten Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form einer Web API. Bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Gerade in der heutigen Zeit, in der Menschen immer mobiler werden, in Autos, Zügen und Flugzeugen unterwegs sind und arbeiten, benötigt man oftmals offline Zugriff auf die Anwendungsdaten. Wie man diese echt offline-fähigen Single-Page Applications/Progressive Web Apps realisiert, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Ganztagesworkshop. Allgemein werden Themen wie Synchronisationsstrategien von Anwendungsdaten und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur sowohl für neue als auch bestehende Anwendungen diskutiert. Am Beispiel einer Angular-basierten App mit einem exemplarischen Backend in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns implementiert.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/immer-and-uberall-offlinefahige-progressive-web-apps-am-beispiel-angular",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 70,
      "type": "Workshop",
      "title": "WebComponents: Native Komponenten fürs Web - ohne und mit Frameworks",
      "date": "2019-10-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Der aktuelle Single-Page Application und der frühere Windows-Entwickler kennt sie seit „Ewigkeiten”: UI-Komponenten, oder Controls. Durch Kapselung erhalten wir modulare und wiederverwendbare Baukastenelemente, aus denen unsere UI-Anwendungen zusammengesetzt werden. Bisher mussten wir uns im Web eines SPA Frameworks bedienen – ob Angular, ReactJS, Vue.js oder Polymer. Doch keines dieser Frameworks wollte oder konnte so recht mit dem anderen zusammenarbeiten. Dies könnte sich in Zukunft ändern mit WebComponents. Diese beschreiben anhand von Standards wie CustomElements ein Komponentenmodell für das Web und bietet damit erstmal die Möglichkeit, native Komponenten im Browser gänzlich ohne ein Framework oder aber über Framework-Grenzen hinweg einzusetzen. \nIn dieser Session klären Manuel Rauber und Patrick Jahr wie WebComponents funktionieren, wo die Vorteile und Nachteile liegen – und, vermutlich am spannendsten: sie gehen der Frage in gewohnt praktischer Manier nach, ob WebComponents mit aktuellen Single-Page Application (SPA) Frameworks wie Angular genutzt und erstellt werden können und welche Rolle Ivy dabei spielt. Abgerundet wird das Ganze mit einem Ausblick, wie wir künftig Web-Anwendungen mit Web Components entwickeln könnten. Auf zum nächsten Schritt!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-ohne-und-mit-frameworks",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-2019-fall-web-components",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": null
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        11,
        1
      ],
      "tags": [
        "Angular",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 56,
      "type": "Workshop",
      "title": "Robuste Design Systems mit Storybook und Angular: vom Konzept zur lebendigen Anwendung",
      "date": "2019-10-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit den stetig wachsenden Möglichkeiten, die Cross-Platform-Anwendungen bieten, wachsen auch die Anforderungen an deren Design. Skalierbarkeit, Flexibilität und Wandelbarkeit gehören zu den Grundprinzipien eines modernen User-Interfaces. Andreas Wissel und Christian Liebel erarbeiten mit Ihnen in diesem Workshop anhand von Praxisbeispielen einen robusten Workflow. Mit Storybook und Angular lassen sich so isolierte, test- und wartbare Komponenten im Handumdrehen umsetzen. Ihre Designer und Entwickler werden es lieben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/robuste-design-systems-mit-storybook-und-angular-vom-konzept-zur-lebendigen-anwendung?slide=34",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://bit.ly/ng-ds",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 55,
      "type": "Workshop",
      "title": "Hands-on Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2019-09-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-moderne-cross-plattform-losungen",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/html5-javascript/cross-plattform-workshop/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 54,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum",
      "date": "2019-09-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2019-electron-cordova-pwa",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/web-development/electron-cordova-pwa-was-wann-wie-und-warum/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 49,
      "type": "Talk",
      "title": "Advanced ASP.NET Core Web APIs: testen und dokumentieren – aber richtig!",
      "date": "2019-09-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Jeder baut Web-APIs, oder? Leider ist es nicht damit getan, ein neues Projekt zu erzeugen, ein paar Controller zu implementieren und dann sein Web-API zu deployen. Zum einen sollte es vernünftig dokumentiert werden, damit die Entwickler, die mit unserem API arbeiten müssen, auch wissen, was es kann und wie es funktioniert. Zum anderen sollten wir selber auch sicherstellen, dass unser API das tut, was es soll. In dieser Session zeigt Ihnen Sebastian Gingter, wie man diese beiden Fliegen mit einer Klappe schlagen kann. Mit Hilfe von Open API/Swagger erzeugen wir erst eine umfassende, ständig aktuelle und lebendige Dokumentation unseres APIs. Im zweiten Schritt generieren wir aus dieser Dokumentation auch gleich Tests für das API-Test-Tool Postman, die wir dann mit etwas JavaScript Testcode anreichern und diese sogar als automatisierte Integrationstests laufen lassen können. Web-APIs jenseits von Hello World, mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-fall-2019-openapi",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=8bU6O_fMr5U",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-fall-2019-openapi",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 73,
      "type": "Talk",
      "title": "Blockchain für Architekten und Entwickler – was steckt wirklich dahinter?",
      "date": "2019-09-23 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "In wenigen Jahren werden wir Blockchains so selbstverständlich nutzen wie heute Datenbanken – und das nicht wegen seltsamer Kryptowährungen, die bereits heute schon mehr an Tulpenkrise als an seriöses Software-Engineering denken lassen. In dieser Session präsentiert Ingo Rammer die konkreten technischen Motivationen, Hintergründe und Zusammenhänge, die den Hype überstehen werden. Sie lernen die fundamentalen Elemente, Arten und Betriebsmodi von öffentlichen und privaten Blockchains kennen und werden wissen, warum Smart Contracts weder „smart“ noch „Verträge“, sondern einfach Regeln zur Prüfung von replizierten Transaktionen sind. Nach diesem Vortrag haben Sie eine solide Basis, um zu beurteilen, ob – und wenn ja, in welchen Bereichen – Ihre Anwendungsfälle von der Nutzung von Blockchain-Technologien profitieren könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/blockchain-fur-architekten-und-entwickler-was-steckt-wirklich-dahinter-8ed00546-c53f-431a-ac74-dc26fe2956d6",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=brw9SHxPcYM",
          "label": null
        },
        {
          "type": "Slides-Originalformat",
          "url": "https://thinktecture2com.sharepoint.com/:p:/s/prj-conferences/ERwa_ZzYxC5KgC6tvvbWtFIB3vgmaUigt9mlfaATtbMllQ?e=c1LPgw",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 53,
      "type": "Talk",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2019-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen am Beispiel einer in Angular geschriebenen Anwendung die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.\n\nDieser Talk richtet sich an Entwickler, die grob wissen, um was es bei Progressive Web Apps geht. In diesem Track gibt es auch den passenden Grundlagenvortrag („Progressive Enhancement im Web: PWA-Grundlagen“), der Ihnen dieses Verständnis vermittelt. Bitte nehmen Sie ein Smartphone mit, um ggf. die Demoanwendung auf dem eigenen Gerät ausprobieren zu können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-82e2dd43-1bc2-49cc-bdbc-30c1e618ba22",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/web-development/pwa-deep-dive-offline-anwendungen-im-griff/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 125,
      "type": "Workshop",
      "title": "Moderne Businessanwendungen mit Angular, .NET Core und Azure – Weitblick für Backend- und Frontend-Entwickler",
      "date": "2019-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Alle reden darüber: Mobile-Apps, Webtechnologien und Cloud. Die Welt besteht nicht mehr nur aus Windows allein und Ihr Job als Entwickler ändert sich. In diesem Workshop zeigen Thorsten Hans und Boris Wilhelms interessierten .NET-Entwicklern, welche architekturellen Ideen und Konzepte hinter modernen Businessanwendungen auf Basis von .NET Core, Azure Functions, Angular und TypeScript stecken.\n\nLernen Sie praktische Lösungen für eine Reihe diverser Problem- und Fragestellungen kennen. Wie kann man geräte- und plattformübergreifend Businessanwendungen mit Angular bauen? Wie kann man dies für Windows, iOS, Android und fürs Web gleichermaßen realisieren? Wie können diese Anwendungen Daten und Anwendungslogik mit Hilfe Service-basierter Architekturen nutzen? Dieser Workshop liefert Antworten auf all diese interessanten Fragen. Moderne Businessanwendungen mit Angular, Cordova, Electron, .NET Core und Azure – in Action!",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4,
        14
      ],
      "tags": [
        "Angular",
        ".NET Core",
        "Azure Functions",
        "Azure",
        "Electron",
        "Serverless",
        "SPA",
        "Cordova",
        "Architecture"
      ],
      "primaryTag": "Architecture",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 52,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-08-29 18:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, you’ll get to know common performance pitfalls in Angular applications and learn how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ngde2019-perf",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-e85cc65c-9ba7-4300-b10f-526ad3ba2ecd",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=moUCZoJfhwY",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 24
    },
    {
      "id": 46,
      "type": "Workshop",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-07-03 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, we’ll have a look at common performance pitfalls in Angular applications and how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone, lazy loading, server-side rendering and Service Worker support. Let’s make your Angular app blazing fast!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://youtu.be/SY7-8JJAtGM",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 30,
      "type": "Talk",
      "title": "Mehr als nur HTTP-APIs: Pragmatische Serverless Backends mit JavaScript / TypeScript und Azure Functions",
      "date": "2019-06-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Serverless ist in aller Munde und so gut wie jede JavaScript-basierte Anwendung braucht irgendeine Art von Backend. Warum also nicht die beiden Ideen vereinen? In dieser Session zeigt Christian anhand von Azure Functions, wie man mit TypeScript effizient eigene HTTP APIs baut, ohne großes Infrastruktur-Tamtam. \nAber damit nicht genug: Basierend auf allgemein anerkannten Prinzipien können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen. Sieh dafür einen pragmatischen Ansatz mit Functions, Service Bus und weiteren Azure-Cloud-Diensten sowie Tools. Eben mehr als nur HTTP-APIs.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/typescript-und-azure-functions",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Serverless",
        "Azure Functions",
        "Typescript",
        "JavaScript",
        "Azure"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 15
    },
    {
      "id": 44,
      "type": "Talk",
      "title": "PWA-Update: Neue Webschnittstellen für noch bessere Progressive Web Apps",
      "date": "2019-06-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps funktionieren offline, können Pushbenachrichtigungen darstellen und laufen auf jeder Plattform von Android über Firefox bis Windows. Außerdem können Entwickler auf alle Funktionen zugreifen, für die es eine Webschnittstelle gibt. In der Vergangenheit waren dies etwa Gamepads oder der Standort des Anwenders. Mit neuen Webschnittstellen will das World Wide Web Consortium (W3C) die Lücke zwischen nativen Apps und PWA weiter schließen: Mithilfe der Writable Files API sollen PWA auf einen Teilbereich des nativen Dateisystems zugreifen können, die Badging API erlaubt das Setzen von Notification-Badges und die Shape Detection API erlaubt das Erkennen von Barcodes, Gesichtern oder Text in Bildern. Christian Liebel zeigt Ihnen brandheiße Web-APIs, die Progressive Web Apps noch mächtiger machen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-neue-webschnittstellen-fur-noch-bessere-progressive-web-apps-6e9b8f36-27c0-4835-afd0-a4f135364c48",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 21
    },
    {
      "id": 45,
      "type": "Talk",
      "title": "Web-Payments neu gedacht: Abrechnen mit der Payment Request API",
      "date": "2019-06-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Anbieter von Onlineshops, Abodiensten oder Progressive Web Apps kennen das Problem: Sobald Zahlungen vom Nutzer angefordert werden sollen, wird die Sache komplex. Anwender müssen die immerselben Daten in vor allem mobil schwer zu bedienende Formulare eintragen und eventuell wird der Bedienfluss durch eine Weiterleitung zu einem externen Zahlungsdienstleister unterbrochen. Wäre es nicht schön, wenn der Webbrowser die Anwenderdaten vorausfüllen und der Nutzer auf komfortable Methoden wie Apple Pay oder Google Pay zurückgreifen könnte? Die Payment Request API bringt genau diese Features in Web. Christian Liebel von Thinktecture zeigt Ihnen, wofür sich diese plattformübergreifend einsetzbare Webschnittstelle eignet und wo ihre Grenzen liegen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-payments-neu-gedacht-abrechnen-mit-der-payment-request-api",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 21
    },
    {
      "id": 29,
      "type": "Workshop",
      "title": "Azure in Action: Pragmatische Cloud-Lösungen mit Containern & Serverless",
      "date": "2019-06-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "IDE öffnen, „File – New Project – Cloud“, OK klicken und fertig. Oder? Nun, nicht ganz. Denn egal ob AWS, GCP oder eben Azure: am Ende des Tages werden Sie sich fragen, warum, wann und wie gehe ich in die Cloud? Genau diese Fragestellungen wollen Thorsten Hans und Christian Weyer für Java-, node.js- und .NET-Entwickler in diesem Workshop beantworten. Anhand diverser Use Cases werden mögliche Wege mit, über und in Azure diskutiert. Was bedeuten Architekturansätze wie Cloud-Native Microservices und Serverless Microservices? Wie gehe ich bei Brownfield-Projekten vor und wie kann ich Greenfield-Lösungen effizient in Azure realisieren? Wo liegen Unterschiede und Benefits von datengetriebenen und von ereignisgetriebenen Ansätzen? Wie kann ich mit dem Sammelsurium an Patterns, Technologien und Tools in Azure kosteneffektiv hantieren und dennoch flexibel sein? All dies werden wir anhand praktischer Beispiele und pragmatischer Lösungen in interaktiver Art und Weise adressieren. Sehen Sie PaaS, Web Apps, Containers, Orchestrators, Serverless, Functions & Co. mit der Azure-Cloud anhand von .NET-Demos in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/azure-in-action-pragmatische-cloud-losungen-mit-containern-and-serverless-1e2ffa1a-2a42-4355-8c53-3676a71176ff",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/azure-functions-extensibility",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/aks-demo-app",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices",
        "Serverless",
        "Containers",
        "Kubernetes",
        "AKS",
        "Azure Functions"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 14
    },
    {
      "id": 48,
      "type": "Workshop",
      "title": "Einmal API mit allem, bitte: ASP.NET Core MVC und SignalR in Action!",
      "date": "2019-06-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne APIs können so viel mehr als nur gängige HTTPS-Endpunkte bereitzustellen: Zum einen die Möglichkeit zur (optionalen) Echtzeitkommunikation auf Basis von WebSockets. Mit Hilfe von Microsofts Open-Source-Plattform ASP.NET Core MVC und SignalR lassen sich im Handumdrehen Web-APIs und Push Services entwickeln. Doch damit nicht genug: Weitere Themen wie Security, Rate Limiting, eine sinnvolle Dokumentation und ein vernünftiges, zentralisiertes Logging sind mit von der Partie. Und jeder dieser einzelnen Bereiche bietet uns eine neue Herausforderung.\n\nSebastian Gingter und Manuel Rauber zeigen Ihnen in diesem Workshop, wie man mit .NET Core moderne APIs auf und für verschiedene Plattformen entwickeln kann. Zusätzlich wird durch den Einsatz von Entity Framework Core die Anbindung an unterschiedliche Datenbanken ermöglicht. Durch den Einsatz weiterer Open-Source-Bibliotheken für Logging oder zur automatischen Generierung einer Swagger/OpenAPI-Dokumentation ergänzen wir das API um weitere Funktionalitäten. Eine Clientanwendung, das Deployment auf unterschiedliche Plattformen und das Deployment in die Cloud runden den Workshop ab – vollständig End-to-end und einmal mit allem eben!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/einmal-api-mit-allem-bitte-asp-dot-net-core-mvc-und-signalr-in-action-164d1e3e-189b-4b6a-95a3-33003e3f3f05",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-ms-summit-spring-2019-services-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        1
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 14
    },
    {
      "id": 43,
      "type": "Workshop",
      "title": "Progressive Web Apps for PHP Developers in action!",
      "date": "2019-06-05 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps work anywhere from iOS to Windows, run offline and can make use of native functionality such as camera access or geolocation. Thinktecture’s Christian Liebel shows you the technological foundations of this very promising application model—in action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-for-php-developers-in-action",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 20
    },
    {
      "id": 42,
      "type": "Talk",
      "title": "Progressive Web Apps for .NET Developers: An Overview",
      "date": "2019-05-28 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps work anywhere from iOS to Windows, run offline and can make use of native functionality such as camera access or geolocation. Thinktecture’s Christian Liebel shows you the technological foundations of this very promising application model, demonstrates how your PWAs can integrate with the Windows Runtime and what the new Chromium-based Edge means for Progressive Web Apps.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-for-net-developers-an-overview",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 19
    },
    {
      "id": 82,
      "type": "Talk",
      "title": "Advanced Azure Functions – beyond HTTP GET /helloworld",
      "date": "2019-05-27 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Azure Functions enable to swiftly create serverless applications & services. But in practice, we soon face situations where the simple Hello-World-ish approaches do no longer suffice. In this talk, Christian Weyer shows you how to use Microsoft's Functions-as-a-Service (FaaS) platform to realize scenarios beyond the usual static triggers & bindings, like HTTP. He illustrates how you can secure your functions, create your own custom extensions, use dynamic bindings to implement tricky use cases. Hosting Azure Functions is also discussed because it is not always possible to use the public Cloud as-is. Come and see Azure Functions with C # in action - beyond Hello World.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/helloworld",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Azure Functions",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 19
    },
    {
      "id": 27,
      "type": "Talk",
      "title": "Angewandte Serverless Microservices mit Azure Functions & Co.",
      "date": "2019-05-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Warum muss es \"Serverless oder Microservices\" sein? Es sollte vielmehr \"Microservices mit Serverless\" heißen! Basierend auf einigen der allgemein anerkannten Prinzipien von Microservices können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen - nennen wir sie mal Nanoservices. Christian Weyer zeigt Ihnen einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Diensten & Tools. Erleben Sie Serverless Azure mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier in Aktion - jenseits der typischen Functions-as-a-Service-Beispiele.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/angewandte-serverless-microservices-mit-azure-functions-and-co",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 12
    },
    {
      "id": 41,
      "type": "Talk",
      "title": "Advanced Progressive Web Apps: Push notifications under control",
      "date": "2019-05-13 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, Progressive Web Apps (PWA) are one of the hottest topics on the web today. A PWA should feel like a real app, including the ability to show push notifications. In this talk, Thinktecture’s Christian Liebel (@christianliebel) will show you how to implement push messaging in your PWA or website using the Push API, including a look at helpful libraries and third-party services. As a part of Google’s Project Fugu, push notifications will get even better thanks to the advent of the Badging API and Notification Triggers.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/advanced-progressive-web-apps-push-notifications-under-control-61ddbb4e-026d-4beb-a251-eaeea2ab1730",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 18
    },
    {
      "id": 40,
      "type": "Talk",
      "title": "PWA-Update: Neue Webschnittstellen für noch bessere Progressive Web Apps",
      "date": "2019-05-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps funktionieren offline, können Pushbenachrichtigungen darstellen und laufen auf jeder Plattform von Android über Firefox bis Windows. Außerdem können Entwickler auf alle Funktionen zugreifen, für die es eine Webschnittstelle gibt. In der Vergangenheit waren dies etwa Gamepads oder der Standort des Anwenders. \nMit neuen Webschnittstellen will das World Wide Web Consortium (W3C) die Lücke zwischen nativen Apps und PWA weiter schließen: Mithilfe der Writable Files API sollen PWA auf einen Teilbereich des nativen Dateisystems zugreifen können, die Badging API erlaubt das Setzen von Notification-Badges und die Shape Detection API erlaubt das Erkennen von Barcodes, Gesichtern oder Text in Bildern. Christian Liebel zeigt Ihnen brandheiße Web-APIs, die Progressive Web Apps noch mächtiger machen.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-neue-webschnittstellen-fur-noch-bessere-progressive-web-apps",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 17
    },
    {
      "id": 26,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-getriebene Microservices mit Azure Functions & Co. – auch für Java-Entwickler",
      "date": "2019-05-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Microsofts Azure Cloud auf der JAX? Ja, in der Tat. Denn nicht immer muss oder soll es AWS (Amazon Web Services) oder GCP (Google Cloud Platform) sein. Azure bietet mittlerweile eine holistische Plattform für so gut wie jede Cloud-Anforderung an. Auch und vor allem in den Bereichen Cloud Native und Serverless investiert Microsoft sehr viel. In dieser Session zeigt Christian Weyer von Thinktecture – ohne großes Marketing-Tamtam – neben den Grundlagen vor allem typische Anwendungsszenarien für Azure Functions, Azure Service Bus und Co. Fokus soll dabei auf Event-getriebene Microservices-Architekturen liegen. Lehnen Sie sich also zurück und sehen Sie \"die andere Cloud\" – auch mit Java – in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-getriebene-microservices-mit-azure-functions-and-co-auch-fur-java-entwickler",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core",
        "Node.js",
        "Java"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 11
    },
    {
      "id": 25,
      "type": "Talk",
      "title": "Blockchain in 2019: Wichtigste Fakten & sinnvolle Use Cases – jenseits des Hypes",
      "date": "2019-05-07 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blockchain in 2019: Wichtigste Fakten & sinnvolle Use Cases – jenseits des Hypes",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blockchain-in-2019-wichtigste-fakten-and-sinnvolle-use-cases-jenseits-des-hypes",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 10
    },
    {
      "id": 123,
      "type": "Talk",
      "title": "Advanced Azure Functions",
      "date": "2019-04-27 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Azure Functions makes it easy to quickly create simple Serverless applications & services. However in the rarest cases \"Hello World\"-like implementations are sufficient in practice. So, can we implement complex requirements with that technology? Yes we can. In this talk Boris Wilhelms shows you how you can use Microsofts FaaS-platform to implement scenarios beyond the common triggers and bindings and how you can secure your Functions. The topic of hosting is also covered since it is not always possible to use the public cloud, but you can use and benefit from the Serverless concept in a on-premises environment.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/advanced-azure-functions-at-global-azure-bootcamp-2019-frankfurt",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/gab-ffm-2019",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Azure Functions"
      ],
      "primaryTag": "Azure Functions",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 78
    },
    {
      "id": 16,
      "type": "Talk",
      "title": "Code your Azure Environments with Terraform",
      "date": "2019-04-26 22:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 5
    },
    {
      "id": 24,
      "type": "Talk",
      "title": "Pragmatic Serverless Microservices with Azure Functions & Co. - more than FaaS",
      "date": "2019-04-10 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Why does it have to be Serverless versus Microservices? Couldn’t it be rather Microservices with Serverless? Based on some of the well-accepted principles of Microservices, we can use Serverless architectures and technologies to build highly focused Microservices – which we might call Nanoservices. Christian Weyer will show you a pragmatic approach on how to build Nanoservices with Azure Functions, Azure Service Bus, Azure Storage and friends. Join him to see Serverless Azure in action, with .NET Core, JavaScript and Java – beyond the typical Functions-as-a-Service examples.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatic-serverless-microservices-with-azure-functions-and-co-more-than-faas-60687a12-ba7f-487a-a8e2-922a14b162ed",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 9
    },
    {
      "id": 23,
      "type": "Talk",
      "title": "Advanced Serverless Azure: Extending Azure Functions to meet your Runtime Infrastructure Needs",
      "date": "2019-04-09 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Bindings and runtime extensions are the engines of Azure Functions that fuel Azure-based Serverless architectures. In this short talk, Christian Weyer will show you in a live coding session how you can build and use your own custom bindings and extensions. Based on a real project’s requirements, he will walk you through the internals of Azure Functions and create a fully functional custom binding that implements patterns for reusing custom infrastructure needs.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/advanced-serverless-azure-extending-azure-functions-to-meet-your-runtime-infrastructure-needs",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/azure-functions-extensibility",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 9
    },
    {
      "id": 22,
      "type": "Talk",
      "title": "Pragmatische Serverless Microservices mit Azure Functions & Co. (Kaa Sörwa unn Söavis-Gschmarri – so Cloud-Gwerch hald)",
      "date": "2019-04-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das ist eine Hip, das andere ist Hype. Aber muss es Serverless *oder* Microservices sein? Vielmehr sollte es Microservices *mit* Serverless heißen. Basierend auf allgemein anerkannten Prinzipien können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices ohne viel Infrastruktur-Tamtam zu erstellen - nennen wir sie der Einfachheit halber Nanoservices. Der Unterfranke und DDF-Pionier Christian Weyer zeigt euch einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Cloud-Diensten & Tools. Erleben Sie Serverless Azure in Aktion mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier - auf dem Server, äh.... #KaaSörwa",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-serverless-microservices-mit-azure-functions-and-co-kaa-sorwa-unn-soavis-gschmarri-so-cloud-gwerch-hald",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Angular",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 39,
      "type": "Talk",
      "title": "PWA Deep-Dive: Offline-Anwendungen im Griff",
      "date": "2019-04-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps bieten sich als plattformübergreifendes Anwendungsmodell als idealer Partner für in .NET geschriebene Backends an. Zentrale Eigenschaft einer jeden Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: Im Tunnel, im Park oder im Dschungel. Zur Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen die Mechanik hinter der dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit ihren nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offline-anwendungen-im-griff",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 38,
      "type": "Workshop",
      "title": "Frontend der Zukunft: Progressive Web Apps für .NET-Entwickler",
      "date": "2019-04-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET Core eignet sich hervorragend zur Implementierung plattformübergreifender Konsolenanwendungen und Backends. Zuletzt haben nun auch wieder Frontendtechnologien in .NET Core Einzug erhalten. Doch Windows Forms und WPF sind nicht plattformübergreifend einsetzbar. Progressive Web Apps (PWA) hingegen laufen auf allen nennenswerten Mobil- und Desktopplattformen sowie in jedem Browser und bieten sich somit als zukunftssichere Frontendplattform an. Frameworks wie Angular bringen Architekturkonzepte ins Web, die Sie von WPF/XAML schon kennen. Insgesamt eignen sich PWA hervorragend als Frontend für Ihre in .NET Core geschriebene Webschnittstelle. Christian Liebel stellt Ihnen die PWA-Basics vor und zeigt, wie Sie mit einem in .NET Core geschriebenen Backend kommunizieren können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/frontend-der-zukunft-progressive-web-apps-fur-net-entwickler-52418789-d092-4bf2-9e4d-c001b320f31b",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 68,
      "type": "Workshop",
      "title": "Immer und überall: offlinefähige Progressive Web Apps – am Beispiel Angular",
      "date": "2019-03-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\"Keine Internetverbindung\" – ein Satz, den wir alle aus genutzten Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form eines Web API. Bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Gerade in der heutigen Zeit, in der Menschen immer mobiler werden, in Autos, Zügen und Flugzeugen unterwegs sind und arbeiten, benötigt man oftmals offline Zugriff auf die Anwendungsdaten. Wie man diese echt offline-fähigen Single-Page Applications/Progressive Web Apps realisiert, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Ganztagesworkshop. Allgemein werden Themen wie Synchronisationsstrategien von Anwendungsdaten und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur sowohl für neue als auch bestehende Anwendungen diskutiert. Am Beispiel einer Angular-basierten App mit einem exemplarischen Backend in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns implementiert.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/immer-und-uberall-offlinefahige-progressive-web-apps-am-beispiel-angular",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 16
    },
    {
      "id": 37,
      "type": "Workshop",
      "title": "Progressive Web-Apps mit Angular: hands-on",
      "date": "2019-03-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind das App-Modell der Zukunft. Das sagt zumindest Google und hat damit nichts Geringeres vor, als App-Stores von Mobilgeräten zu verbannen. Stattdessen lautet der Gedanke: Offlinefähigkeit, Push Notifications und schnelles Startverhalten sollen ins Web kommen. Ein Fingertipp reicht und eine mobile Website wird zur installierten App auf dem Gerät einschließlich Homescreen-Icon: Android, iOS, Windows, macOS und Linux auf einen Streich.\nChristian Liebel von Thinktecture zeigt Ihnen, wie Sie mit Angular, Angular Material und der Angular CLI PWAs entwickeln und somit sanft und sacht die Schlucht zwischen reinen Web-Sites, Web-Apps und hybriden/nativen Apps schließen können. Und Sie können mitmachen: Dazu benötigen Sie mindestens einen Laptop und optional ein aktuelles Smartphone mit iOS oder Android.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-hands-on",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 16
    },
    {
      "id": 36,
      "type": "Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2019-03-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen an nur einem Tag anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-3ee1e5ae-aa20-466b-b362-a101daf26e77",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 15,
      "type": "Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2019-03-20 23:00:00.0000000",
      "language": "DE",
      "billed": true,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen an nur einem Tag anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Speakerdeck",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-3ee1e5ae-aa20-466b-b362-a101daf26e77",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 35,
      "type": "Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2019-03-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 34,
      "type": "Talk",
      "title": "Progressive Web Apps update 2019: Web Goes Native (RheinNeckarJS)",
      "date": "2019-03-12 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, PWA is one of the hottest topics in Web space today. Progressive Web Apps are cross-platform, support browsers, desktop and mobile platforms—a perfect match for your business application. A PWA should feel like a real app we are used to since years: users want an icon on the home screen as well was native-like performance and feature richness. Christian Liebel, author of “Progressive Web Apps: Das Praxisbuch” and consultant at Thinktecture, shows you how to develop your first PWA, implement offline availability using service workers and send push notifications even when your app is closed. In addition, Christian brings you up to date on modern web APIs and service worker enhancements that will further enhance PWA functionality. Come and bring your PWA questions with you!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-update-2019-web-goes-native-e93aacbc-e56e-46e4-9306-4632dd21b39d",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 33,
      "type": "Workshop",
      "title": "Hands-on Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2019-03-01 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-echte-cross-plattform-losungen-5b162ec3-4953-40f7-aff4-1e49fd3ffc0b",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2019-pwa-workshop",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 5,
      "type": "Workshop",
      "title": "Workshop: Von null auf hundert – Blockchain-Anwendungen mit Hyperledger Fabric",
      "date": "2019-02-28 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "In diesem Ganztagesworkshop erfahren Sie, wie Sie – ganz ohne CPU-intensives Mining und ohne Kryptowährungen – auf der Basis der Open-Source-Plattform \"Hyperledger Fabric\" eine private (\"permissioned\") Blockchain zwischen Geschäftspartnern aufbauen und wie Sie mit Node.js dafür Smart Contracts und HTTP-Endpunkte entwickeln können. Nach einer kurzen Zusammenfassung der technischen Blockchain-Grundlagen sehen Sie, wie eine private Blockchain auf Basis von Hyperledger Fabric konfiguriert und betrieben wird. Danach lernen Sie die Besonderheiten dieser Umgebung zur Entwicklung von Smart Contracts kennen und wie Sie Tools und Vorgehensweisen zum Deployen, Debuggen und Verwalten Ihrer Anwendungen nutzen können. Neben den typischen Sicherheitsaspekten von Blockchain-Anwendungen im Geschäftsumfeld lernen Sie auch verschiedene Versionierungs- und Governance-Strategien zum langfristigen Betrieb Ihrer Smart Contracts kennen. Zu guter Letzt sehen Sie, wie Sie mit zwischengeschalteten Node.js APIs zwischen .NET-Anwendungen und den entstandenen Smart Contracts bidirektional kommunizieren können, um den Datenaustausch zwischen Ihren existierenden Systemen und der Blockchain-Umgebung zu erlauben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/workshop-von-null-auf-hundert-blockchain-anwendungen-mit-hyperledger-fabric",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Hyperledger",
        "Node.js"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 2,
      "type": "Talk",
      "title": "Hyperledger Fabric: Die Open-Source Basis für Ihre Blockchain",
      "date": "2019-02-27 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "In dieser Session stellt Ihnen Ingo Rammer die von der Linux Foundation betreute open-source Blockchain-Basistechnologie Hyperledger Fabric vor. Sie lernen die Grundlagen von Fabric für den Betrieb von privaten bzw. berechtigungsgestützten Blockchains kennen und erfahren die dafür geeigneten Einsatzgebiete, Architekturentscheidungen sowie Sicherheitsaspekte. Diese Session ist eine optimale Grundlage, um Sie für die Folgesession \"Coding Hyperledger Fabric – Smart Contracts und Clients mit Node.js\" vorzubereiten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/hyperledger-fabric-die-open-source-basis-fur-ihre-blockchain-f198d4d3-90fc-497d-bdde-fdd35fcf4731",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Hyperledger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 4,
      "type": "Talk",
      "title": "Coding Hyperledger Fabric – Smart Contracts und Clients mit Node.js",
      "date": "2019-02-27 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "Aufbauend auf den Inhalten der Session \"Hyperledger Fabric: die Open-Source Basis für Ihre Blockchain\" zeigt Ihnen Ingo Rammer in dieser Session, wie Sie die SDKs für Fabric in Ihrem Code nutzen können. Sie lernen, wie Sie von ihrem Client aus Transaktionen initiieren und wie Sie Chaincode (Smart Contracts in Fabric) erstellen können, um diese zu verarbeiten. Sie sehen, wie Sie eventgesteuert auf Ereignisse der Blockchain reagieren können und wie Sie mit den unterschiedlichen Arten von Daten Ihrer Blockchain interagieren. Zu guter Letzt erfahren Sie, wie Sie mit Fabric einen typischen Code>Test>Debug>Deploy-Zyklus umsetzen können.\n\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/coding-hyperledger-fabric-smart-contracts-und-clients-mit-node-dot-js",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Node.js",
        "Hyperledger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 20,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-basierte Microservices mit Azure Functions & Co.",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm… Ja, in der Tat. Der Serverless-Ansatz verspricht eine niedrige Hürde, um den Einstieg in Microservices zu finden. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand praktischer Anwendungsfälle. Auf Basis erprobter Designpatterns können Sie mit Azure Functions, Azure Service Bus und Co. in kurzer Zeit sowohl einfache als auch komplexe Services-Anwendungen designen und implementieren – lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Kommen Sie vorbei – eventuell lernen Sie die Basis für Ihr neues Businesssoftware-Backend kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-basierte-microservices-mit-azure-functions-and-co-c4053d0c-b7d8-433f-a60c-6f4a249cb2db",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 31,
      "type": "Talk",
      "title": "Real-World Angular: Erfahrungen aus (fast) vier Jahren Projektgeschäft",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Frankfurt, im Februar 2015: In einer Hotellobby probiert die Thinktecture-Crew eine der frühen, blutigen Alphaversionen von Angular 2 aus. Seither sind vier Jahre vergangen. Zurück in Frankfurt zeigt Christian Liebel von Thinktecture, welche Lehren das Thinktecture-Team aus beinahe vier Jahren Projektgeschäft gezogen hat. Wir besprechen bspw. erweiterte TypeScript-Sprachfeatures, die Unterteilung von Angular-Projekten in isolierte Module sowie verschiedene Maßnahmen zur Verbesserung der Performance. Dieser Talk richtet sich an Angular-Entwickler, welche die Grundlagen des Frameworks verstehen und schon erste Projekte damit umgesetzt haben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/real-world-angular-erfahrungen-aus-fast-vier-jahren-projektgeschaft",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 32,
      "type": "Talk",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen am Beispiel einer in Angular geschriebenen Anwendung die Mechanik hinter  dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.\nDieser Talk richtet sich an Entwickler, die grob wissen, um was es bei Progressive Web Apps geht. In diesem Track gibt es auch den passenden Grundlagenvortrag („Progressive Enhancement im Web: PWA-Grundlagen“), der Ihnen dieses Verständnis vermittelt. Bitte nehmen Sie ein Smartphone mit, um ggf. die Demoanwendung auf dem eigenen Gerät ausprobieren zu können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 21,
      "type": "Talk",
      "title": "Pragmatische Microservices-Architekturen mit .NET Core – Patterns & Code",
      "date": "2019-02-25 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Angetrieben durch mögliche Nachteile einer monolithischen Architektur wollen Microservices und damit verbundene Designpatterns und -ideen das scheinbare Allheilmittel sein. In diesem Vortrag klärt Christian Weyer die folgenden Fragen: Was sind Microservices und was sind sie nicht? Wann setzt man sie ein? Und vor allem: Wie baut und betreibt man Microservices in der .NET-Core-Welt? Sehen Sie Architekturansätze und Patterns in Aktion und erleben Sie Technologien wie Service Discovery, Web APIs, SignalR, Message Queuing und Co. im praktischen Einsatz. Versuchen wir also gemeinsam, langweilige Architekturthemen spannend zu machen: auf pragmatische Weise. Dieser Talk richtet sich an .NET-Entwickler- und -Architekten, die Microservices verstehen und ohne jegliche Frameworks und Clouds in Aktion sehen wollen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-architekturen-mit-net-core-patterns-and-code",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pragmatic-microservices-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 126,
      "type": "Workshop",
      "title": "Moderne Businessanwendungen mit Angular, .NET Core und Azure – Weitblick für Backend- und Frontend-Entwickler",
      "date": "2019-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Alle reden darüber: Mobile-Apps, Webtechnologien und Cloud. Die Welt besteht nicht mehr nur aus Windows allein und Ihr Job als Entwickler ändert sich. In diesem Workshop zeigen Thorsten Hans und Boris Wilhelms interessierten .NET-Entwicklern, welche architekturellen Ideen und Konzepte hinter modernen Businessanwendungen auf Basis von .NET Core, Azure Functions, Angular und TypeScript stecken.\n\nLernen Sie praktische Lösungen für eine Reihe diverser Problem- und Fragestellungen kennen. Wie kann man geräte- und plattformübergreifend Businessanwendungen mit Angular bauen? Wie kann man dies für Windows, iOS, Android und fürs Web gleichermaßen realisieren? Wie können diese Anwendungen Daten und Anwendungslogik mit Hilfe Service-basierter Architekturen nutzen? Dieser Workshop liefert Antworten auf all diese interessanten Fragen. Moderne Businessanwendungen mit Angular, Cordova, Electron, .NET Core und Azure – in Action!",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4,
        14
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Azure",
        "Azure Functions",
        "Cordova",
        "Electron",
        "Serverless",
        "SPA",
        "Architecture"
      ],
      "primaryTag": "Architecture",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 28,
      "type": "Talk",
      "title": "Serverless Microservices - by example of Azure Functions (and a bit of deep dive into the platform)",
      "date": "2019-02-22 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Why does it have to be Serverless versus Microservices? Couldn’t it be rather Microservices with Serverless? Based on some of the well-accepted principles of Microservices, we can use Serverless architectures and technologies to build highly focused Microservices – which we might call Nanoservices. \nChristian Weyer will show you a pragmatic approach on how to build Nanoservices with Azure Functions, Azure Service Bus, Azure Storage and friends. Join him to see Serverless Azure in action, with .NET Core, JavaScript and Java – beyond the typical Functions-as-a-Service examples.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-microservices-by-example-of-azure-functions-and-a-bit-of-deep-dive-into-the-platform",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Microservices",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 13
    },
    {
      "id": 47,
      "type": "Talk",
      "title": "Code your Azure Deployments using Terraform",
      "date": "2019-02-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Using HashiCorp’s Terraform you can code almost every Azure Deployment. Having your entire infrastructure as source code makes it easy to spin up new environments in a couple of minutes. Terraform takes this approach a step further, having a single language and a single CLI allows you to describe deployments for almost every cloud vendor. With Terraform Execution Plans you can also inspect what will be deployed, changed or deleted in Azure without harming existing deployments. Join this talk by Thorsten Hans and learn how to write your deployments and quickly create different, independent environments such as Testing, Staging, and Production in Azure.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 19,
      "type": "Talk",
      "title": "Serverless in Action: Event-gesteuerte Microservices - am Beispiel Azure",
      "date": "2019-01-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm... Ja, in der Tat. Der Serverless-Ansatz für Microservices verspricht eine niedrige Hürde, um den Einstieg zu finden und auch um ans Ziel zu kommen. Dabei ist Serverless jedoch nicht für jeden und alles geeignet. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand eines realistischen Anwendungsbeispiels. Auf Basis erprobter Design Patterns können Sie mit Azure Functions, Azure Event Grid, Azure Cosmos DB, Azure Storage & Co. in kurzer Zeit einfache & komplexe Anwendungen designen und implementieren - lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Wohnen Sie dieser Session bei und bilden Sie sich Ihre Meinung - eventuell lernen Sie die Basis Ihrer neuen Business-Software hier kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-in-action-event-gesteuerte-microservices-am-beispiel-azure",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 7
    },
    {
      "id": 78,
      "type": "Talk",
      "title": "WebAssembly & ASP.NET Blazor: .NET auf dem Weg, den Browser zu erobern?",
      "date": "2018-12-12 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/it-tage-2018-webassembly-and-blazor-2018-12-13",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 43
    },
    {
      "id": 83,
      "type": "Workshop",
      "title": "Azure in Action: Pragmatische Cloud-Lösungen mit Containern & Serverless",
      "date": "2018-12-04 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "IDE öffnen, „File – New Project – Cloud“, OK klicken und fertig. Oder? Nun, nicht ganz. Denn egal ob AWS, GCP oder eben Azure: am Ende des Tages werden Sie sich fragen, warum, wann und wie gehe ich in die Cloud? Genau diese Fragestellungen wollen Thorsten Hans und Christian Weyer für Java-, node.js- und .NET-Entwickler in diesem Workshop beantworten. Anhand diverser Use Cases werden mögliche Wege mit, über und in Azure diskutiert. Was bedeuten Architekturansätze wie Cloud-Native Microservices und Serverless Microservices? Wie gehe ich bei Brownfield-Projekten vor und wie kann ich Greenfield-Lösungen effizient in Azure realisieren? Wo liegen Unterschiede und Benefits von datengetriebenen und von ereignisgetriebenen Ansätzen? Wie kann ich mit dem Sammelsurium an Patterns, Technologien und Tools in Azure kosteneffektiv hantieren und dennoch flexibel sein? All dies werden wir anhand praktischer Beispiele und pragmatischer Lösungen in interaktiver Art und Weise adressieren. Sehen Sie PaaS, Web Apps, Containers, Orchestrators, Serverless, Functions & Co. mit der Azure-Cloud anhand von .NET-Demos in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/azure-in-action-pragmatische-cloud-losungen-mit-containern-and-serverless",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/aks-demo-app",
          "label": "Containers"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": "Serverless"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "AKS",
        "Azure",
        "Azure Functions",
        "Containers",
        "Kubernetes",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 59
    },
    {
      "id": 84,
      "type": "Talk",
      "title": "Auf ins Blaue: Azure Cloud Services für Java-Entwickler – ein persönlicher Überblick",
      "date": "2018-11-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ein Blick über den Tellerrand kann ja nicht schaden: was hat Microsofts Azure Cloud für Java-Entwickler und -Architekten zu bieten? Freilich ist die blaue Wolke ähnlich mächtig, breit an Services und tief an Features wie die Marktbegleiter AWS oder GPC. In dieser Session möchte daher Christian Weyer – der seit 2008 mit Azure arbeitet – einen nicht ganz unvoreingenommenen Überblick über die zentralen Services geben, die für Java-, .NET- aber auch andere Entwickler zur Verfügung stehen. Angefangen bei Container-as-a-Services mit Docker- und Kubernetes als Basis, über klassische Platform-as-a-Service-Angebote für Web Applications, Datenbanken oder Messaging, bis hin zu ultracoolen Serverless-Architekturen – illustriert mit praktischen Beispielen. Und dies von jemandem, der so gut wie keine Ahnung von Java hat.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/auf-ins-blaue-azure-cloud-services-fur-java-entwickler-ein-personlicher-uberblick",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure Functions",
        "Serverless",
        "Azure",
        "Java"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 60
    },
    {
      "id": 85,
      "type": "Talk",
      "title": "eXtreme Serverless Azure: Data, Compute, Realtime - in Action!",
      "date": "2018-10-12 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Whaaat? No servers? Well, yes. Serverless is all the hype these days. Let's try to sort out some of the real strengths of Serverless and see where Serverless & PaaS build a set of highly productive weapons in your Cloud arsenal. Join Christian Weyer from Thinktecture while he discusses Azure Functions, Storage, CosmosDB and SignalR Service in a holistic scenario - all by building an end-to-end solution that should 'just work' by the end of this session: creating a scalable real-time application in almost no time - really? Aaand action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/extreme-serverless-azure-data-compute-realtime-in-action-c24f4632-02c5-4183-9871-8fb829839d41",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/extreme-serverless-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Azure Functions",
        "Java",
        "JavaScript",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 61
    },
    {
      "id": 86,
      "type": "Talk",
      "title": "WebAssembly & PWA: Single Page Applications (SPAs) ohne JavaScript?",
      "date": "2018-10-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ohoh: JavaScript auf einer JavaScript-Konferenz in Frage zu stellen! Lassen Sie uns über das Web als Plattform reden und darüber wie wir JavaScript-basierte Browser-Anwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browser-Plattformen haben die Art und Weise verändert, wie wir Anwendungen, bspw. Line-of-Business Applications, erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung - eine großartige Basis für moderne Anwendungen gemäß der Idee von Progressive Web Apps (PWA). Mit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard haben wir so allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Session wird Christian Weyer über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C ++ - oder gar Java bzw. C # / .NET-Code im Browser ohne Plug-in nutzen können - und so die optimale Performance aus ihrer \"App\" holen können. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche neuen Möglichkeiten WebAssembly unserer geliebten Plattform verleihen kann. Spüren Sie das mögliche Potenzial Ihrer nächsten (Geschäfts-)Anwendung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-pwa-single-page-applications-spas-ohne-javascript",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angulardays-2018-herbst-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 62
    },
    {
      "id": 87,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps: Rethinking modern application development",
      "date": "2018-10-03 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Choose your programming language of choice for building fast, ubiquitously cross-platform, future-proof modern applications: dang - your dream will finally come true! Really...? Let's see. Undoubtedly, everybody needs to build business applications, somehow. The web and the browser platforms have changed the way we can build LOB applications and these platforms have evolved considerably in the past 5 years. More and more native features are available to SPAs (single page applications) running in the browser - a great base for modern applications as so-called Progressive Web Apps (PWA). Now, with the rise of WebAssembly (WASM) as a standard and the improving maturity of PWAs we have powerful tools in our hand to build the next generation of web-based applications. In this session Christian Weyer will talk about the features & possibilities of Progressive Web Apps as app-like appearance, installability or offline operations, paired with the power of WebAssembly as a bytecode for all major modern browsers. See how to use PWAs to build native-like applications on the browser platforms and experience the strength of WASM to run C, C++ or C#/.NET code in the browser, without any plugin. This can be a disruptive approach for both greenfield and brownfield projects. Lean back and watch how the web is evolving into a new stage of capabilities and feel the potential of your next (business) application. Let’s do it!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-rethinking-modern-application-development-7686e386-c777-43f0-8cdd-f41019e8525b",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-nl-2018-wasm-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "PWA",
        "Blazor",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 63
    },
    {
      "id": 75,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-basierte Microservices mit Azure Functions & Co",
      "date": "2018-09-25 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm… Ja, in der Tat. Der Serverless-Ansatz verspricht eine niedrige Hürde, um den Einstieg in Microservices zu finden. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand praktischer Anwendungsfälle. Auf Basis erprobter Designpatterns können Sie mit Azure Functions, Azure Service Bus und Co. in kurzer Zeit sowohl einfache als auch komplexe Services-Anwendungen designen und implementieren – lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Kommen Sie vorbei – eventuell lernen Sie die Basis für Ihr neues Businesssoftware-Backend kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-basierte-microservices-mit-azure-functions-and-co",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=5VIDcSbTgYI",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Azure Functions",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 88,
      "type": "Talk",
      "title": "Pragmatische Microservices-Architekturen mit ASP.NET Core & Co.",
      "date": "2018-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Schlagwort Microservices ist in aller Munde. Angetrieben durch die zahlreichen Nachteile einer monolithischen Architektur wollen Microservices und damit verbundene Design-Patterns und -Ideen das scheinbare Allheilmittel sein. In diesem Vortrag klärt Christian Weyer über den Mythos Microservices auf. Was sind sie, was sind sie nicht, wann setzt man sie ein – und vor allem: Wie baut und betreibt man Microservices in der .NET/.NET-Core-Welt? Sehen Sie Architekturansätze in Aktion und erleben Sie Technologien wie Service Discovery, Web API, SignalR, Message Queuing und Azure im praktischen Einsatz. Versuchen wir also gemeinsam, langweilige Architekturthemen spannend zu machen: auf pragmatische Weise!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-architekturen-mit-asp-dot-net-core-and-co",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 79,
      "type": "Talk",
      "title": "WebAssembly und Blazor - Wie .NET jetzt auch den Browser erobert?",
      "date": "2018-09-24 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET hat höchstens noch auf dem Server eine Zukunft? Diese Aussage stimmt im modernen Web mittlerweile nicht mehr ganz: Seit der Verfügbarkeit von WebAssembly, einem Bytecode fürs Web, können nun auch etwa in C# geschriebene Programme im Browser ausgeführt werden. Das ist mitunter eine interessante Migrationsstrategie, um .NET-Berechnungskerne ins Web zu portieren und mit Single-Page Applications (SPA), zum Beispiel auf Basis von Angular, zu paaren. Mit dem Projekt Blazor vom ASP.NET-Team experimentiert Microsoft zudem mit einem eigenen SPA-Framework mitsamt Tooling, das jedoch nicht auf HTML und JavaScript, sondern auf der Templating-Sprache Razor sowie C# und .NET Core basiert. Sebastian Gingter und Christian Liebel zeigen Ihnen beide Ansätze und geben eine Einschätzung, wo Blazor eine valide Option für die Erstellung von webbasierten UIs sein kann. Klar ist: Was im Web läuft, das kann auf nahezu allen Plattformen ausgeführt werden. Und auch der Verteilung Ihrer Anwendung als Progressive Web App mit vielen nativen Features steht nichts im Wege.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/webassembly-und-blazor-wie-net-jetzt-auch-den-browser-erobert",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=z3x1u-cuED8",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        3
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 92,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps - Next Generation Apps",
      "date": "2018-09-09 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Gesetzt den Fall, Sie halten Cross-Plattform SPAs (Single Page Applications) für eine gute Idee, könnte diese Night Session in der Tat interessant für Sie werden. Lassen Sie uns über das Web als Plattform reden und darüber, wie wir JavaScript-basierte Browseranwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browserplattformen haben die Art und Weise verändert, wie wir Anwendungen erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung – eine großartige Basis für moderne Applikationen gemäß der Idee von Progressive Web Apps (PWA). Zudem haben wir mit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Night Session wird Christian Weyer sowohl über PWAs als auch über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C++, Java oder C#/.NET-Code im Browser ohne Plug-in nutzen können – sei es aus Performance- oder Wiederverwendungsgründen. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche Möglichkeiten PWAs und WebAssembly dem Web verleihen könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-next-generation-apps",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/software-architecture-summit-2018-pwa-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "PWA",
        "Web Technologies",
        "WebAssembly"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 66
    },
    {
      "id": 129,
      "type": "Talk",
      "title": "Legacy-Anwendungen ver-Service-fizieren mit ASP.NET Core",
      "date": "2018-09-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wer kennt sie nicht: Zehn bis 20-Jährige native Anwendungen weisen nicht selten bekannte Schwierigkeiten auf. Sie sind groß, monolitisch, komplex, launenhaft, laufen nur auf einem bestimmten Betriebssystem mit einem ganz bestimmten Patch Level, es gibt genau einen Entwickler, der diese versteht und jede einzelne von denen ist eine State Machine.\nAus den genannten Gründen und um die Marktanteile zu erweitern ist es kein Wunder, dass die Hersteller ihre Anwendung am liebsten hinter einer Web-API verstecken möchten, welche über eine stabile, performante und vergleichsweise einfache API konsumiert werden kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/legacy-anwendungen-ver-service-fizieren-mit-asp-dot-net-core",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pawelgerr/Talks-LegacyApplications",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        "Architecture",
        "ASP.NET Core",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 83
    },
    {
      "id": 89,
      "type": "Talk",
      "title": "WebAssembly: Dem JavaScript sein Tod!?",
      "date": "2018-06-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blasphemie: JavaScript auf einer JavaScript-Konferenz in Frage zu stellen!\nLassen Sie uns über das Web als Plattform reden und darüber, wie wir JavaScript-basierte Browseranwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browserplattformen haben die Art und Weise verändert, wie wir Anwendungen, beispielsweise Line-of-Business Applications, erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung - eine großartige Basis für moderne Anwendungen gemäß der Idee von Progressive Web Apps (PWA).\nMit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard haben wir so allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Session werden Christian Weyer und Sebastian Gingter über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C++, oder gar Java beziehungsweise C#/.NET-Code im Browser ohne Plug-in nutzen können – und so die optimale Performance aus ihrer \"App\" holen können. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche neuen Möglichkeiten WebAssembly unserer geliebten Plattform verleihen kann. Spüren Sie das Potenzial Ihrer nächsten (Geschäfts-)Anwendung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-dem-javascript-sein-tod",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/enterjs-2018-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Technologies",
        "JavaScript",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 64
    },
    {
      "id": 77,
      "type": "Workshop",
      "title": "Moderne APIs mit ASP.NET Core MVC und SignalR – End-to-End",
      "date": "2018-06-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne APIs bieten neben der gängigen HTTPS-Interaktion auch die Möglichkeit zur Echtzeitkommunikation auf Basis von WebSockets. Mit Hilfe von Microsofts Open-Source-Plattform ASP.NET Core MVC und SignalR lassen sich im Handumdrehen Web-APIs und Push-Services entwickeln. Doch damit nicht genug: Weitere Themen wie Security, Rate-Limiting, eine sinnvolle Dokumentation und ein vernünftiges zentralisiertes Logging sind mit von der Partie. Und jeder dieser einzelnen Bereiche bietet uns eine neue Herausforderung. Sebastian Gingter und Manuel Rauber zeigen Ihnen in diesem Workshop, wie man mit .NET Core moderne APIs auf und für verschiedene Plattformen entwickeln kann. Zusätzlich wird durch den Einsatz von Entity Framework Core die Anbindung an verschiedene Datenbanken ermöglicht. Durch den Einsatz weiterer Open-Source-Bibliotheken fürs Logging oder zur automatischen Generierung einer Swagger/OpenAPI-Dokumentation ergänzen wir die API um weitere Funktionalitäten. Eine Client-Anwendung, das Deployment auf unterschiedliche Plattformen und das Deployment in die Cloud runden den Workshop ab – vollständig End-to-End eben!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/einmal-api-mit-allem-bitte-asp-dot-net-core-mvc-und-signalr-in-action-164d1e3e-189b-4b6a-95a3-33003e3f3f05",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-ms-summit-spring-2018-services-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        1
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 42
    },
    {
      "id": 91,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps: Rethinking modern application development",
      "date": "2018-05-23 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Choose your programming language of choice for building fast, ubiquitously cross-platform, future-proof modern applications: dang - your dream will finally come true! Really...? Let's see. Undoubtedly, everybody needs to build business applications, somehow. The web and the browser platforms have changed the way we can build LOB applications and these platforms have evolved considerably in the past 5 years. More and more native features are available to SPAs (single page applications) running in the browser - a great base for modern applications as so called Progressive Web Apps (PWA). Now, with the rise of WebAssembly (WASM) as a standard and the improving maturity of PWAs we have powerful tools in our hand to build the next generation of web-based applications. In this session Christian Weyer will talk about the features & possibilities of Progressive Web Apps as app-like appearance, installability or offline operations, paired with the power of WebAssembly as a bytecode for all major modern browsers. See how to use PWAs to build native-like applications on the browser platforms and experience the strength of WASM to run C, C++ or C#/.NET code in the browser, without any plugin. This can be a disruptive approach for both greenfield and brownfield projects. Lean back and watch how the web is evolving into a new stage of capabilities and feel the potential of your next (business) application. Let’s do it!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-rethinking-modern-application-development",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-2018-wasm-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "PWA",
        "Web Technologies",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 65
    },
    {
      "id": 90,
      "type": "Workshop",
      "title": "Modern Cross-Platform Business Applications with Angular, Cordova, Electron, PWA & Serverless Backends",
      "date": "2018-05-21 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Modern business applications are facing entirely different challenges today. End-users are used to just leverage their mobile phone, tablets, laptops and (maybe) desktop computers. Applications, data and processes just need to work, just need to “be there” – regardless of the application hosting and provisioning model. Developers should realize these ever-changing challenges and should address possible approaches for ubiquitous solutions. In this full-day workshop, Thorsten and Christian from Thinktecture show you a way how to design, architect, implement and run modern business applications – end-to-end. Come and see how to provide lightweight APIs into your business processes via Serverless technolgoies and architectures in Azure. Feel the power of real-cross platform HTML5 SPAs – e.g. based on Angular – to offer a use-case-optimized user experience across all platforms on any devices and runtimes. Let’s start with Angular web applications for the browser and augment them to have native functionalities on the mobile platforms with Apache Cordova and on desktop operating systems with GitHub Electron. Last but not least, join us for a sneak preview into a hopefully not too disitant future: Progressive Web Apps (PWA) could be the ever-lasting ultimate app model for everybody. Apps without the need to install, just running inside the browser engines with power to interact natively. Sounds too good? Let’s see – all this in action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/modern-cross-platform-business-applications-with-angular-cordova-electron-pwa-and-serverless-backends",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-2018-mba-ws",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Azure Functions",
        "Cordova",
        "Electron",
        "PWA",
        "Serverless",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 65
    },
    {
      "id": 128,
      "type": "Talk",
      "title": "Legacy-Anwendungen ver-Service-fizieren mit ASP.NET Core",
      "date": "2018-04-27 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wer kennt sie nicht: Zehn bis 20-Jährige native Anwendungen weisen nicht selten bekannte Schwierigkeiten auf. Sie sind groß, monolitisch, komplex, launenhaft, laufen nur auf einem bestimmten Betriebssystem mit einem ganz bestimmten Patch Level, es gibt genau einen Entwickler, der diese versteht und jede einzelne von denen ist eine State Machine.\nAus den genannten Gründen und um die Marktanteile zu erweitern ist es kein Wunder, dass die Hersteller ihre Anwendung am liebsten hinter einer Web-API verstecken möchten, welche über eine stabile, performante und vergleichsweise einfache API konsumiert werden kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/legacy-anwendungen-ver-service-fizieren-mit-asp-dot-net-core",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pawelgerr/Talks-LegacyApplications",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        "Architecture",
        "ASP.NET Core",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 81
    },
    {
      "id": 124,
      "type": "Talk",
      "title": "Event-based Microservices with Azure Functions, EventGrid & Co.",
      "date": "2018-04-21 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Whaaat? No servers? Well, yes. The Serverless approach for building microservices promises to offer a low entry barrier - for both getting starting and for fulfilling a target. In this session Christian & Boris will show you end-to-end Serverless with Azure & .NET Core by means of a realistic application scenario from customer projects.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architectures-event-based-microservices-with-azure-functions-eventgrid-and-co",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/globalazurebootcamp-2018-serverless",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6,
        14
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Azure Functions"
      ],
      "primaryTag": "Azure Functions",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 79
    },
    {
      "id": 231,
      "type": "Webinar",
      "title": "RxJS von Grund auf - Teil 2: Operatoren und Operatorenketten",
      "date": "2021-06-15 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im ersten Teil haben wir uns die grundlegenden Konzepte hinter RxJS näher angesehen. Dabei kam ein Blick hinter die Kulissen von Operatoren und Operatorketten zu kurz. In diesem Teil möchten wir besonderen Fokus auf diese Aspekte legen und den Vorhang lüften. Dazu werden wir uns nicht nur bestehende Operatoren ansehen, sondern uns mit der Erstellung eigener Operatoren auseinander setzen.\n\n* Kurzes Recap des ersten Webinar\n* Operatoren selbstgemacht\n* Verhalten in Operatorketten\n* Operatoren parametrisieren\n* Existierende Operatoren wiederverwenden",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-teil-2-operatoren-und-operatorenketten",
          "label": "Speakerdeck (Slides)"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-02-rxjs-operators",
          "label": "GitHub (Code)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 153
    },
    {
      "id": 204,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2021-06-07 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered-862e424d-643b-4b18-8673-631c9375ed7e",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 126
    },
    {
      "id": 230,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Einführung in reaktives JavaScript",
      "date": "2021-06-01 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": "GitHub (Code Sample)"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-einfuhrung-in-reaktives-javascript",
          "label": "SpeakerDeck (Slides)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 153
    },
    {
      "id": 229,
      "type": "Webinar",
      "title": "Keycloak fuer .NET Entwickler",
      "date": "2021-05-25 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Authentication oder Authorization, Multi-Tenancy oder aber für einfache Anwendungen: Keycloak ist ein Open Source Identity and Access Management System mit dem Ihre Anwendungen Authentifizierung und Autorisierung auslagern können. Obwohl es ein Java-basierendes Produkt ist, lässt es sich dank offener Standards wie OAuth, OpenID Connect (OIDC) oder natürlich HTTP auch in ASP.NET-Core-Anwendungen integrieren.\n\nIn diesem Webinar zeigte Boris Wilhelms , wie Sie Keycloak in Ihre ASP.NET-Core-Lösungen integrieren können und wie sich Keycloak von IdentityServer oder Azure Active Directory B2C unterscheidet.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/keycloak-fuer-net-entwickler-9bbba251-7cc3-4e25-8561-b1a7f63ba979",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-keycloak",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        "Keycloak"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 152
    },
    {
      "id": 228,
      "type": "Webinar",
      "title": "Web-API mit Turbo: Deep-dive in async/await für Backend-APIs",
      "date": "2021-05-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Asynchrone Programmierung wird immer häufiger als der Heilsbringer in Sachen Performance angepriesen. Doch stimmt das auch? Die Antwort ist ein ganz klares Jaein. Was bedeutet asynchrone Programmierung überhaupt, wie unterscheidet sie sich von Multithreading und was muss ich wirklich wissen, damit die Verwendung von async/await einen spürbaren Einfluss auf die Geschwindigkeit meiner ASP.NET Core Web API zeigt? Diese Fragen und einige mehr wird Ihnen der .NET- und Backend-Experte Sebastian Gingter in diesem Webinar beantworten und darüber hinaus auf Best Practices sowie einige Tipps & Tricks eingehen. Nach diesem Talk haben Sie das notwendige Handwerkszeug beisammen, um ihre Web APIs an den richtigen Stellen durch asynchrone Operationen zu optimieren.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-2021-05-async",
          "label": "Demos auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/await-in-net",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "async",
        ".NET"
      ],
      "primaryTag": ".NET",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 151
    },
    {
      "id": 226,
      "type": "Webinar",
      "title": "Electron, Capacitor, PWA - was, wann, wie & warum?",
      "date": "2021-05-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org",
          "label": "Paint-PWA"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-capacitor-pwa-was-wann-wie-and-warum",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Capacitor",
        "Cordova",
        "Electron",
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 150
    },
    {
      "id": 224,
      "type": "Webinar",
      "title": "Azure Arc enabled Kubernetes: Hybrid and Multi-Cloud",
      "date": "2021-04-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Finally, one to rule them all: Azure Arc enabled Kubernetes allows you to manage and monitor Kubernetes clusters from different sources. Let Azure Arc act as a cockpit for all your Kubernetes clusters, no matter if they are running in AWS, Google Compute Cloud, Digital Ocean, or even a private data center.\nJoin this webinar with Thorsten Hans to understand the capabilities and see what can be achieved with Azure Arc enabled Kubernetes. With an example, you will dive into the topic and see how to use key features such as onboarding, inventory, monitoring, and Azure Policy powered governance to tame all your clusters.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-arc-enabled-kubernetes-hybrid-and-multi-cloud",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/arc-enabled-k8s-webinar-april-2021",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Kubernetes"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 148
    },
    {
      "id": 223,
      "type": "Webinar",
      "title": "Web Components: Bessere (SPA-)Architektur mit Smart- und Presentational-Components-Pattern",
      "date": "2021-04-27 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components: ein Begriff, gar (ehemaliger?) Hype, den wir in der Webentwicklung seit einiger Zeit lesen und immer wieder darüber stolpern. Custom Elements, Shadow DOM und HTML Templates ergeben ein natives Komponentenmodell für unseren Browser. Komponenten, wiederverwendbare SPA-Framework-unabhängige UI-Bausteine, die wir in jeder und für jede App nutzen könnten.\n\nDoch noch immer werden Komponenten frameworkabhängig bspw. in Angular, React oder Vue.js entwickelt. Liegt das daran, dass unserer Anwendungsarchitektur noch ein wichtiges Pattern fehlt, um SPA-Components mit Web Components sinnvoll zu kombinieren? Mit dem Pattern der Smart und Presentational Components erreichen wir eine klare Trennung zwischen State Management (Smart) und reinem User Interface und seiner Interaktion (Presentational). Was genau es damit auf sich hat und wie dies mit Web Components realisiert werden kann, zeigt Manuel Rauber im Live-Coding mit Vor- und Nachteilen anhand einer Real-World-Demo-Applikation.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-bessere-spa-architektur-mit-smart-und-presentational-components-pattern",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-smart-and-presentation-components",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 147
    },
    {
      "id": 222,
      "type": "Talk",
      "title": "Produktivitäts-PWAs auf Desktop-Niveau mit Project Fugu",
      "date": "2021-04-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Beitragenden Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. Damit können Entwickler endlich auch Produktivitäts-Apps wie Büro- und Bearbeitungsprogramme oder IDEs sinnvoll ins Web bringen. In diesem Vortrag zeigt Ihnen Christian Liebel, wie Sie Produktivitäts-PWAs auf Desktopniveau entwickeln können – Zugriff auf das Dateisystem, die Zwischenablage sowie Dateizuordnungen inklusive.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/produktivitats-pwas-auf-desktop-niveau-mit-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 146
    },
    {
      "id": 219,
      "type": "Workshop",
      "title": "JavaScript Fullstack Day: Project Fugu",
      "date": "2021-04-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Presented as a part of the full-stack day of International JavaScript Conference 2021 London, Online Edition.\n\nProgressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/javascript-fullstack-day-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": true,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 143
    },
    {
      "id": 140,
      "type": "Webinar",
      "title": "Web-Apps mit Ionic: Auf Schienen schneller ans Ziel?",
      "date": "2021-04-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen können mitunter komplex werden. Täglich gibt es neue Anforderungen und am besten soll die App noch Cross-Plattform verfügbar sein. Und natürlich darf die Entwicklung nicht zu lange dauern. Ionic versucht als Opinionated-Framework dieses Problem zu adressieren.\nIn diesem Webinar zeigt Max Schulte, was mit Ionic als SPA-Framework möglich ist und wie es dank seiner Tools, \"Production Ready\"-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-ionic-leitplanken-demo",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net",
          "label": "Live Demo (Azure)"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/web-apps-mit-ionic-auf-schienen-schneller-ans-ziel-3ed7786e-0011-4d07-a42b-acb0e5fcaa9b",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Mobile",
        "Cordova",
        "Capacitor",
        "Web Technologies",
        "Web Components",
        "Webinar",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 144
    },
    {
      "id": 218,
      "type": "Talk",
      "title": "Implementing Productivity Apps With Angular And Fugu APIs",
      "date": "2021-04-20 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have worked since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included! This allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web. Thinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis-869dec24-e8f7-4821-b15b-c063cba32760",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-2021-ldn-angular-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 143
    },
    {
      "id": 225,
      "type": "Talk",
      "title": "Infrastructure as Code for Azure with Terraform",
      "date": "2021-04-16 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Modern and distributed application architectures often require a large set of services and systems with a rather complex configuration to work as expected. You and your team can create and manage such infrastructures professionally by adopting Infrastructure as Code (IaC) and relying on Terraform. In this talk, Azure MVP Thorsten Hans demonstrates how to create reliable and predictable Azure infrastructures with Terraform. You will learn how to structure your project, create and mutate your services and manage multiple environments in no time.",
      "media": [
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=6e3aI5WAg5M",
          "label": "Recording"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/globalazure-2021-terraform",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform",
        "Azure"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 149
    },
    {
      "id": 216,
      "type": "Webinar",
      "title": "Blazor WebAssembly - Forms in Action",
      "date": "2021-04-14 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ein Großteil an Softwarelösungen hantiert mit Daten. Formulare sind hier kaum wegzudenken und ein zentraler Bestandteil. Sei es das Anmelden über eine Login-Maske oder das Buchen von Konzertkarten, überall sind Sie zu finden.\n\nIn dieser Session zeigt Patrick Jahr anhand eines Beispiels wie Formulare mit Blazor WebAssembly in .NET 5 implementiert werden können. Jedoch ist der Aufbau eines Formulars nicht alles: wird ein Nutzer nicht richtig über fehlerhafte Eingaben informiert, oder muss zu lange warten, bis das Formular neue Daten geladen hat, verliert er direkt die Lust oder das Vertauen in die Anwendung. Daher wird in dieser Session auch ein großes Augenmerk auf die Validierung von Formularen gelegt. Schlussendlich ist noch die Diskussion von Performance-beeinträchtigenden Fakten in komplexeren Szenarien ein wichtiges Thema in diesem Webinar.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/blazor-webassembly-forms-in-action",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-blazor-forms",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        ".NET",
        "Blazor",
        "WebAssembly",
        "Blazor WebAssembly"
      ],
      "primaryTag": "Blazor WebAssembly",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 142
    },
    {
      "id": 213,
      "type": "Webinar",
      "title": "Sichere und robuste Docker Images für .NET",
      "date": "2021-03-30 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Anwendungen in Containern zu betreiben gehört nicht nur zum guten Ton. Bereits seit Jahren befinden sich Technologien wie Kubernetes und Docker auf einem Siegeszug der seines gleichen sucht. Doch bereits beim Erstellen von Docker Images gilt es auf viele kleine Dinge zu achten um Anwendungen auf lange Sicht professionell in Containern zu betreiben.\n\nIn diesem Webinar zeigt Azure MVP Thorsten Hans, wie auch Sie sichere und robuste Docker Images erstellen. Sämtliche Demos und Beispiele werden in diesem Webinar anhand einer .NET-WebAPI erläutert.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-docker-march-2021",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/sichere-und-robuste-docker-images-fur-net",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Docker"
      ],
      "primaryTag": "Docker",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 141
    },
    {
      "id": 211,
      "type": "Half Day Workshop",
      "title": "Angular meets Project Fugu: Produktivitäts-PWAs auf Desktopniveau (Hands-on)",
      "date": "2021-03-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Contributors Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. Damit können Entwickler endlich auch Produktivitäts-Apps wie Büro- und Bearbeitungsprogramme oder IDEs sinnvoll ins Web bringen. In diesem Workshop zeigt Ihnen Christian Liebel von Thinktecture, wie Sie mit Angular Produktivitätsapps auf Desktopniveau entwickeln können – Zugriff auf das Dateisystem und die Zwischenablage sowie Dateizuordnungen inklusive. Und Sie können mitentwickeln: Bitte bringen Sie dazu Ihr Notebook (ohne Corporate-Proxys/Unternehmensrichtlinien) mit installiertem Google Chrome Canary, Node.js und Microsoft Visual Studio Code mit.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-meets-project-fugu-produktivitats-pwas-auf-desktopniveau-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-spring-2021-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 214,
      "type": "Workshop",
      "title": "Rock Solid, yet flexible Single Page Applications professionell mit Kubernetes betreiben",
      "date": "2021-03-23 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Kubernetes – das Cloud-Betriebssystem dieser Dekade – bietet auch für den Betrieb von Single Page Applications (SPAs) eine hohe Flexibilität und Individualisierbarkeit. In diesem Halbtages-Workshop zeigt Thorsten Hans, wie Sie Ihre SPA in Docker Images verpacken, und in Kubernetes betreiben können. Lernen Sie essenzielle Konzepte und Techniken für das Hosting von SPAs anhand einer exemplarischen Angular-Anwendung kennen. Hierbei werden wir iterativ vom Standardbetrieb, bis hin zur Abbildung einer professionellen Multi-Tenant-Umgebung mit Canary-Deployments vorgehen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/rock-solid-yet-flexible-single-page-applications-professionell-mit-kubernetes-betreiben",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-2021-kubernetes",
          "label": "Sample Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Docker",
        "Kubernetes"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 210,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Platform Realtime Push - 3",
      "date": "2021-03-23 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-core-signalr-cross-platform-realtime-push-3",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        "SignalR",
        "ASP.NET Core",
        ".NET Core",
        "JavaScript",
        "Angular",
        "Capacitor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 137
    },
    {
      "id": 212,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps – Hands on!",
      "date": "2021-03-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und im Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mit Hilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigt Ihnen Christian Liebel die Grundlagen der PWA-Entwicklung. Und Sie können aktiv mitentwickeln!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-spring-2021-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 209,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Stream-basierte Denkweise - am konkreten Beispiel",
      "date": "2021-03-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "RxJS unterstützt bei der Bewältigung asynchroner Probleme verschiedener Art, nicht nur bei AJAX-Requests. Allerdings erfordert das Stream-basierte Paradigma ein Umdenken für den Entwickler.\n\nNachdem wir uns im ersten Teil intensiv mit den Grundbausteinen von RxJS beschäftigt haben und dann im zweiten Teil sehr intensiv auf Operatoren und Operatorenketten eingegangen sind, nehmen wir uns in diesem Webinar einen Anwendungsfall aus der Realität vor. An einem konkreten Beispiel leiten wir eine Lösung ohne den Einsatz von RxJS her und stellen dieser eine elegante Lösung gegenüber, die sich den passenden Operatoren bedient.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-stream-basierte-denkweise-am-konkreten",
          "label": "Slides (Speakerdeck)"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-03-rxjs-scrolling",
          "label": "Source (GitHub)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular",
        "RxJS",
        "Angular, RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 136
    },
    {
      "id": 208,
      "type": "Webinar",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2021-03-11 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "What doesn't load in two seconds will never be accessed again: User expectations for web application performance are steadily increasing. After a web application loads, it needs to feel fast and fluid in order for the user to achieve their goal. In our Thinktecture webinar, Christian Liebel will show you Angular’s most important optimization options (Zone.js, Change Detection and Service Workers), so that you can ignite the turbo for your Angular app!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-2e112a94-b9dc-42dc-b166-e46dcb641ac7",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 135
    },
    {
      "id": 207,
      "type": "Webinar",
      "title": "Always up to date: API-Versionierung in .NET 5",
      "date": "2021-03-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit, und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, so haben wir bei APIs das Problem, dass ältere Clientanwendungen mit dem neuen Verhalten nicht mehr zurecht kommen und dann auch nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unserer API.\n\nIn diesem Webinar zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen wann überhaupt eine neue Version benötigt wird, welche Methoden es gibt eine ASP.NET-Core-Web-API zu versionieren und welche verschiedenen Herangehensweisen im Code möglich sind, unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-versioning-webinar-march-2021",
          "label": "Code-Beispiele auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/thinktecture-webinar-api-versionierung-in-net-5",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Versioning",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 134
    },
    {
      "id": 206,
      "type": "Webinar",
      "title": "Storybook: Best Practices mit Angular",
      "date": "2021-03-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Storybook ist ein hervorragendes Tool zur Erstellung von UI-Komponentenkatalogen. Steuerelemente können hier isoliert betrachtet, ausprobiert und dokumentiert werden – eine perfekte Schnittstelle zwischen Designern, Entwicklern und weiteren Projektbeteiligten. Christian Liebel stellt Ihnen in diesem Webinar ein Vorgehensmodell vor, das auf unseren Erfahrungen aus vielen Kundenprojekten mit Angular basiert. Auf einen Streich entsteht damit nicht nur eine erstklassige Komponentenbibliothek, sondern zugleich eine besonders modulare Codebasis – die zugleich Synergieeffekte für Unit Tests und Mocking mit sich bringt.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/storybook-best-practices-mit-angular",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 128
    },
    {
      "id": 205,
      "type": "Webinar",
      "title": "Keycloak fuer .NET Entwickler",
      "date": "2021-02-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Authentication oder Authorization, Multi-Tenancy oder aber für einfache Anwendungen: Keycloak ist ein Open Source Identity and Access Management System mit dem Ihre Anwendungen Authentifizierung und Autorisierung auslagern können. Obwohl es ein Java-basierendes Produkt ist, lässt es sich dank offener Standards wie OAuth, OpenID Connect (OIDC) oder natürlich HTTP auch in ASP.NET-Core-Anwendungen integrieren.\nIn diesem Webinar zeigt Ihnen Boris Wilhelms wie Sie Keycloak in Ihre ASP.NET-Core-Lösungen integrieren können und wie sich Keycloak von IdentityServer oder Azure Active Directory B2C unterscheidet.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/keycloak-fuer-net-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-keycloak",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "ASP.NET Core",
        "IAM",
        "Keycloak"
      ],
      "primaryTag": "Keycloak",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 127
    },
    {
      "id": 203,
      "type": "Workshop",
      "title": "Progressive Web Apps und Project Fugu: Das nächste Level für Cross-Platform-Apps",
      "date": "2021-02-18 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) ermöglichen es Ihnen, Businessanwendungen für den Browser zu entwickeln, die sich zugleich wie native Anwendungen anfühlen und dabei sogar offline-fähig sind. Dank Project Fugu stehen diese PWAs ihren nativen Gegenstücken in nichts nach! Erfahren Sie in diesem Workshop, wie Sie erfolgreich ihre eigenen PWAs entwickeln!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-und-project-fugu-das-nachste-level-fur-cross-platform-apps?slide=7",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-pwa-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 199,
      "type": "Talk",
      "title": "Advanced Blazor Server: Tiefen und Untiefen meistern",
      "date": "2021-02-18 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor Server ist anders. Es hat gegenüber Blazor WebAssembly ein anderes Verhalten zur Laufzeit. Dabei spielen vor allem Razor Pages eine Rolle, die Dependency Injection funktioniert leicht anders als gewohnt und auch das Zustandsmanagement ist eine Sache für sich. Trauen Sie sich in die tiefsten Tiefen des Blazor-Server-Kaninchenbaus! ASP.NET-Core- und Backend-Experte Sebastian Gingter nimmt Sie an die Hand und zeigt Ihnen diese und noch weitere Spezialitäten von Blazor Server und wie man damit erfolgreich umgeht.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-blazor-server",
          "label": "Repo auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-spring-2021-blazor-server",
          "label": "Folien bei Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "ASP.NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 200,
      "type": "Webinar",
      "title": "RxJS from the group up - Introduction to reactive JavaScript",
      "date": "2021-02-18 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "RxJS is a very powerful tool and has been established in Angular as its central way of communication between Components and Services.\n\nIf you are not quite comfortable yet to use RxJS in all of its glory, then this Webinar is for you. Yannick is going to show you the basic concepts and ideas behind all of RxJS's moving parts, to make sure you can wield this powerful tool more confidently.\n\nAgenda:\n- Why streams?\n- Asynchronicity and the observer pattern\n- Working with RxJS\n- Unsubscribing and completion\n- Resources to help yourself",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-from-the-ground-up-introduction-to-reactive-javascript",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": "Code Sample (GitHub)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 124
    },
    {
      "id": 202,
      "type": "Talk",
      "title": "Implementing Productivity Apps with Angular and Fugu APIs",
      "date": "2021-02-17 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have been working since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included!\nThis allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web.\nThinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis-cec204b8-f3b4-4dea-a468-a56a0a7b3aea",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 125
    },
    {
      "id": 215,
      "type": "Talk",
      "title": "Kubernetes für .NET Anwendungsentwickler",
      "date": "2021-02-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie möchten Ihre .NET-Core-Anwendung in Kubernetes betreiben und lernen, wie Sie das Potential des Containerorchestrators nutzen können? Dann besuchen Sie diesen Talk von Kubernetes- und Cloud-Native-Experte Thorsten Hans. Sie werden nicht nur den praktischen Umgang mit Kubernetes aus Sicht des Entwicklers lernen, sondern auch, wie Sie Patterns und Praktiken nutzen, um Ihre .NET-Core-Anwendungen optimal in Containern zu betreiben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-fur-net-anwendungsentwickler",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-kubernetes-for-net-devs",
          "label": "Sample Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 201,
      "type": "Talk",
      "title": "Superkräfte für Produktivitäts-PWAs – Project Fugu",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein hervorragendes plattformübergreifendes Anwendungsmodell. In mancherlei Hinsicht musste das Modell jedoch noch hinter seine nativen Gegenstücke zurücktreten. Das wollen Google, Microsoft und Intel mit dem Capabilities Project – Codename Fugu – jetzt ändern. Ihr Ziel: ein leistungsfähigeres Web. Dank den Fugu APIs erhalten PWAs nun Zugriff auf das lokale Dateisystem und die Zwischenablage und können sich als Bearbeitungsprogramm für bestimmte Dateierweiterungen hinterlegen. In dieser Session zeigt Christian Liebel von Thinktecture, wie Fugu APIs entstehen und wie sie einen ganzen Schwung an Produktivitäts-Apps ins Web verlagern könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/superkrafte-fur-produktivitats-pwas-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 196,
      "type": "Talk",
      "title": "Blazor in .NET 5: Single-Page-Applications mit C# & WebAssembly",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page-Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor-Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von vielen Beispielen wie Blazor in .NET 5 tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-in-net-5-single-page-applications-mit-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 197,
      "type": "Keynote",
      "title": "Technical Keynote: Auf dem Weg zu „One .NET“ – das eine Framework, sie alle zu beherrschen",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im November 2020 ist .NET 5.0 erschienen. Auch wenn die Vision \"One .NET\" erst mit Version 6.0 vollständig umgesetzt sein wird, so bietet .NET 5.0 doch viele spannende Neuerungen bei Sprachsyntax, Klassen, Anwendungsmodellen und Deployment. In dieser technischen Keynote wird DOTNET-DOKTOR Holger Schwichtenberg zusammen mit Kollegen einige Highlights der neuen Version hervorheben, Empfehlungen zur Migration alter Anwendungen geben und auch einen Ausblick auf die .NET-Zukunft liefern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/technical-keynote-auf-dem-weg-zu-one-net-das-eine-framework-sie-alle-zu-beherrschen",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 198,
      "type": "Talk",
      "title": "Schneller ans Ziel: Web-Apps mit Ionic",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen können mitunter komplex werden. Täglich gibt es neue Anforderungen und am besten soll die App auch noch Cross-Platform verfügbar sein. Und natürlich darf die Entwicklung nicht zu lange dauern. Ionic versucht als opinionated Framework dieses Problem zu adressieren. In seinem Vortrag zeigt Max Schulte, was mit Ionic als SPA-Framework möglich ist und wie es dank seiner Tools, Production-Ready-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/schneller-ans-ziel-web-apps-mit-ionic",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net/tabbed/new-offer",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Capacitor",
        "PWA",
        "Web Technologies",
        "Hybrid-App",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 195,
      "type": "Workshop",
      "title": "ASP.NET Core Blazor: Moderne Businessanwendungen mit C# & WebAssembly - Full-Stack- und Cross-Plattform",
      "date": "2021-02-15 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht-webnativen Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET webbasierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browserp﻿lattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Als Abrundung des Workshops soll auch ein Blick auf und ein Vergleich mit Server-side Blazor nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-und-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-blazor-workshop",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 194,
      "type": "Webinar",
      "title": "Blazor WebAssembly: SPAs mit C# und .NET 5",
      "date": "2021-02-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript oder TypeScript – na klar! Mit ASP.NET Core Blazor gibt es jedoch eine mögliche Alternative für .NET-Entwickler. Auf Basis des Web-Standards WebAssembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# & Razor entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor WebAssembly in .NET 5 möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Ein realistischer Blick auf die Grenzen der Technologie darf hierbei freilich nicht fehlen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-spas-mit-c-number-und-net-5",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 122
    },
    {
      "id": 193,
      "type": "Talk",
      "title": "Full Stack .NET: Single Page Applications mit Blazor, C# & WebAssembly",
      "date": "2021-02-08 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) – bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell – je nach Anwendungsfall – die Grenzen liegen.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/full-stack-net-single-page-applications-mit-blazor-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 121
    },
    {
      "id": 192,
      "type": "Webinar",
      "title": "Unit-Testing in Angular mit Jest",
      "date": "2021-02-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Unit-Tests sind ein hervorragendes Mittel, um (kritische) Funktionalität einer Anwendung automatisiert und schnell überprüfen zu lassen. Das SPA-Framework Angular liefert mit Karma von vornherein eine Testunterstützung mit. Mit Facebooks Jest gibt es jedoch ein weiteres Framework, das unter anderem mit paralleler Testausführung lockt.\n\nIn diesem Webinar zeigt Ihnen Christian Liebel, wie Sie Ihre Angular-App mithilfe von Jest testen können. Nachdem wir zu Beginn ein gemeinsames Verständnis zum Thema Unit Tests geschaffen haben, werden wir uns abschließend auch fortgeschrittenen Inhalten wie Spys und Mocks nähern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/unit-testing-in-angular-mit-jest",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/unit-testing-angular-jest-webinar-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 120
    },
    {
      "id": 190,
      "type": "Talk",
      "title": "Blazor WebAssembly & gRPC - Code-first .NET SPA developer productivity",
      "date": "2021-01-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "With Blazor WebAssembly, developers can write C# code for SPAs in the browser and share code with the server-side of their applications. Usually, you design and use JSON-based Web APIs to communicate between the client and the server logic. In this session, Christian Weyer demonstrates how to employ gRPC & gRPC-Web in a code-first manner to share .NET interface contracts in a strongly-typed way. With this approach, no code generation is needed, you get the same syntax and full IntelliSense on both sides. In fact, you gain the good parts we already had many years ago with WCF - now for the ubiquitous & open web. But: is really everything gold that glitters?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-and-grpc-code-first-net-spa-developer-productivity",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-grpc-code-first",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 118
    },
    {
      "id": 191,
      "type": "Talk",
      "title": "Azure Arc enabled Kubernetes: Hybrid und Multi-Cloud",
      "date": "2021-01-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Endlich alle unter einem Dach. Mit Azure Arc enabled Kubernetes können Kubernetes-Cluster in Azure verwaltet und überwacht werden, und dies unabhängig davon, in welcher Umgebung der Cluster betrieben wird. Azure Arc dient als zentrales und professionelles Cockpit für Ihre Kubernetes-Cluster die in Amazon AWS, Google Compute Cloud, Digital Ocean, oder in privaten Rechenzentren betrieben werden. In diesem Webinar zeigt Thorsten Hans welche Möglichkeiten und Potentiale Azure Arc enabled Kubernetes bietet.  Anhand einer Beispielumgebung werden Sie sehen, wie Inventarisierung, Monitoring und Governance – unter Verwendung von Azure Policies und Open Policy Agent - auf externe Kubernetes-Cluster angewendet werden können.\n ",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-arc-enabled-kubernetes-hybrid-und-multi-cloud",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/arc-enabled-k8s-webinar-january-2021",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Kubernetes",
        "Azure"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 119
    },
    {
      "id": 189,
      "type": "Webinar",
      "title": "RxJS von Grund auf - Teil 2: Operatoren und Operatorenketten",
      "date": "2021-01-19 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im ersten Teil haben wir uns die grundlegenden Konzepte hinter RxJS näher angesehen. Dabei kam ein Blick hinter die Kulissen von Operatoren und Operatorketten zu kurz. In diesem Teil möchten wir besonderen Fokus auf diese Aspekte legen und den Vorhang lüften. Dazu werden wir uns nicht nur bestehende Operatoren ansehen, sondern uns mit der Erstellung eigener Operatoren auseinander setzen.\n\n* Kurzes Recap des ersten Webinar\n* Operatoren selbstgemacht\n* Verhalten in Operatorketten\n* Operatoren parametrisieren\n* Existierende Operatoren wiederverwenden",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-teil-2-operatoren-und-operatorenketten",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-02-rxjs-operators",
          "label": "Github Repo"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular, RxJS",
        "RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 117
    },
    {
      "id": 187,
      "type": "Webinar",
      "title": "Blazor Server: Mögliche Architekturalternative zu SPAs?",
      "date": "2020-12-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Viele .NET-Entwickler sind Feuer und Flamme wenn es um Blazor und Webentwicklung geht. Wenn man etwas genauer hinschaut, stellt man schnell fest, dass man gleich zwei Geschmacksrichtungen vor sich hat: Blazor WebAssembly und Blazor Server.\n\nIn diesem Webinar wollen wir uns genauer mit Blazor Server beschäftigen: Was ist Blazor Server überhaupt, wo liegen die Unterschiede zum Client-seitigen Blazor und SPAs im Allgemeinen und welche Auswirkungen haben diese Unterschiede auf die Art, wie wir Web-Anwendungen schreiben? Was muss ich lernen, um mit Blazor Server arbeiten zu können und worauf muss ich eventuell besonders achten, wenn ich meine ersten Schritte mit Blazor Server gehen möchte? All diese Fragen wird unser Experte Sebastian Gingter in dieser Session klären.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/blazor-server-mogliche-architekturalternative-zu-spas",
          "label": "Slides zum Webinar"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-blazor-server-12-2020",
          "label": "GitHub Repo mit dem Beispielcode"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Architecture",
        "ASP.NET Core",
        "SignalR",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 116
    },
    {
      "id": 186,
      "type": "Webinar",
      "title": "Full Throttle: Azure Infrastructures with Terraform",
      "date": "2020-12-09 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "You want to provision and manage your cloud infrastructure professionally yet still keep things simple? Then you should join this webinar and dive into Terraform with Thorsten Hans.\nYou will learn by practical examples how to automate your mission-critical workloads by adopting Infrastructure as Code (IaC) and mastering Terraform.\nWithin an hour, you will learn everything you need to create and manage your cloud environments. Thorsten explains all necessary concepts and techniques like the Terraform workflow, how modules work, expressions, and interpolation, by live-coding an example infrastructure during the webinar.\nAfter the event, you will be able to express your infrastructures in code, even if you are using different cloud offerings such as AWS, GCP, or Digital Ocean.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-december-2020",
          "label": "GitHub Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/full-throttle-azure-infrastructures-with-terraform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 115
    },
    {
      "id": 185,
      "type": "Webinar",
      "title": "Blazor WebAssembly: Neues in .NET 5\u000b",
      "date": "2020-12-08 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ähnlich wie bei Angular und React wird auch bei Blazor ständig an der Plattform weiter gearbeitet. Vor allem bei Blazor WebAssembly als relativer Framework-Neuling sind die Verbesserungen und Neuerungen des ASP.NET-Teams bei Microsoft von Interesse. In diesem Webinar zeigt Christian Weyer auf gewohnt pragmatische Art was alles neu ist im .NET-5-Release und wie diese Features einzuordnen sind.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-neues-in-net-5",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-things-to-know/tree/net5-demos",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor",
        ".NET Core",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 114
    },
    {
      "id": 184,
      "type": "Webinar",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-12-02 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann.\n\nIn unserem Thinktecture-Webinar zeigt Ihnen Christian Liebel mit Zone.js, Change Detection und Service Workern die wichtigsten Performance-Stellschrauben des Angular-Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-c737c808-80f3-4e86-b27f-54d311007d2c",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 113
    },
    {
      "id": 182,
      "type": "Webinar",
      "title": "Pragmatische API-Versionierung in ASP.NET Core",
      "date": "2020-11-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit, und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, so haben wir bei APIs das Problem, dass ältere Clientanwendungen mit dem neuen Verhalten nicht mehr zurecht kommen und dann auch nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unserer API. In diesem Webinar zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen wann überhaupt eine neue Version benötigt wird, welche verschiedenen Methoden es gibt eine ASP.NET-Core-Web-API zu versionieren und welche verschiedenen Herangehensweisen im Code möglich sind, unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-versioning-webinar-november-2020",
          "label": "GitHub - Repo"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/thinktecture-webinar-pragmatische-api-versionierung-in-asp-dot-net-core",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Versioning",
        "ASP.NET Core"
      ],
      "primaryTag": "ASP.NET Core",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "webinar-test",
      "bigmarkerRef": "1f15d74a37a4",
      "ctaKey": "Recording ansehen",
      "additionalInfo": "",
      "conference": 112
    },
    {
      "id": 183,
      "type": "Talk",
      "title": "Real-World Blazor WebAssembly : 5(+) Dinge, die Sie kennen sollten",
      "date": "2020-11-24 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "In diesen 60 Minuten spricht Christian Weyer über fünf Erkenntnisse aus dem praktischen Einsatz von Blazor WebAssembly - mit Demos, live und in Farbe. Auch wenn für Sie vielleicht nur ein einziges \"Ding\" dabei ist, das sie neu lernen: diese Session sollte sich dennoch lohnen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/real-world-blazor-webassembly-5-plus-dinge-die-sie-kennen-sollten",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-things-to-know",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "gRPC",
        "SPA",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 68
    },
    {
      "id": 134,
      "type": "Workshop",
      "title": "Tausche .NET gegen Web: Desktop-Apps als PWA entwickeln",
      "date": "2020-11-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Für .NET-Entwickler ist völlig klar: Wenn eine Desktopanwendung entwickelt werden muss, greift man zu Windows Forms oder WPF. In dieser DevSession nehmen wir eine alternative Technologie unter die Lupe: Progressive Web Apps. Dieses Anwendungsmodell auf Basis von Webtechnologien bietet nicht nur eine erstklassige Unterstützung für Desktopanwendungen, sondern läuft auf Basis desselben Quelltextes auch noch im Browser oder auf Mobilgeräten. Microsoft ist einer der wesentlichen Treiber der Progressive Web Apps – und das nicht erst, seitdem der eigene Browser Edge auf dem Chrome-Unterbau Chromium basiert. Im Rahmen von Project Fugu kooperiert Microsoft mit Intel und Google, um mächtige Schnittstellen für Webanwendungen einzuführen: Das schließt Dateizuordnungen, Zugriff auf das native Dateisystem oder die Zwischenablage sowie Sprunglisteneinträge mit ein. In dieser Session zeigt Ihnen Christian Liebel von Thinktecture, wie Sie erstklassige Produktivitätsapps für den Desktop als PWA entwickeln können – und ganz nebenbei auch noch Apps für den Browser und Mobilgeräte herausfallen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/tausche-net-gegen-web-desktop-apps-als-pwa-entwickeln",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ddc-2020-desktop-pwas",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org/",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 68
    },
    {
      "id": 132,
      "type": "Talk",
      "title": "Real-World Blazor: 5 Dinge, die Sie kennen sollten",
      "date": "2020-11-23 21:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Blazor Server oder Blazor WebAssembly: es gibt Dinge in Microsofts Web-UI-Framework, die sich mitunter erst im Projektalltag heraus kristallisieren. In diesen 60 Minuten spricht Christian Weyer über fünf Erkenntnisse aus dem praktischen Einsatz von Blazor Server & WebAssembly - mit Demos live und in Farbe. Auch wenn für Sie vielleicht nur ein einziges Ding dabei ist, das sie neu lernen: diese Session sollte sich dennoch lohnen ;-) ",
      "media": [],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 68
    },
    {
      "id": 181,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Plattform Realtime Push - 2",
      "date": "2020-11-17 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-core-signalr-cross-plattform-realtime-push-2",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "JavaScript",
        "Blazor",
        "ASP.NET Core",
        "SignalR"
      ],
      "primaryTag": "SignalR",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 111
    },
    {
      "id": 179,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Einführung in reaktives JavaScript",
      "date": "2020-11-10 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "RxJS ist sehr mächtig. So mächtig, dass es Angular als zentrales Denk- und Programmiermodell für die interne Kommunikation unter Komponenten und Services auserkoren hat.\n\nSie fühlen sich noch nicht sicher genug, RxJS in vollem Umfang einzusetzen? Dann zeigt Ihnen Yannick wie Sie mit den notwendigen Ideen, Konzepten und Grundlagen, RxJS im Handumdrehen verstehen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-einfuhrung-in-reaktives-javascript",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 110
    },
    {
      "id": 178,
      "type": "Webinar",
      "title": "Serverless Computing in Azure Kubernetes Service mit KEDA",
      "date": "2020-11-03 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit Azure Functions stellt Microsoft ein flexibles und mächtiges Framework für Serverless Computing bereit, womit skalierbare und reaktive Anwendungen erstellt werden können. Mit Kubernetes Event-driven Applications (KEDA), können Sie Ihre Azure Functions problemlos in einem Kubernetes-Cluster betreiben. Doch KEDA kümmert sich nicht nur um den Betrieb. Durch geschickte Integration von sowohl externen als auch internen Nachrichten- und Ereignissystemen wie Azure Service Bus oder Azure Event Hub skaliert KEDA Ihre Azure Functions automatisch anhand der anfallenden Anfragen",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/serverless-computing-in-azure-kubernetes-service-mit-keda-503afff9-4772-4c26-b9d8-9c846baec4ab",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/keda-webinar-november-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Kubernetes",
        "Serverless",
        "Azure"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 109
    },
    {
      "id": 175,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2020-10-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered-5a8402f4-2ec1-470c-805f-c44598b49e64",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 176,
      "type": "Talk",
      "title": "Implementing Productivity Apps with Angular and Fugu APIs",
      "date": "2020-10-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have been working since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included! This allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web. Thinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-2020-angular-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 133,
      "type": "Webinar",
      "title": "Web Components – das Ende der SPA-Framework-Ära?",
      "date": "2020-10-27 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components – ein Begriff, den wir immer öfter lesen und lesen werden. Dahinter stehen die Technologien Custom Elements, Shadow DOM und HTML Templates. Zusammen ergeben sie ein natives Komponentenmodell für unseren Browser. Es hilft uns, wiederverwendbare UI-Komponenten zu entwickeln, die wir in jeder App benutzen können. Völlig gleich, ob diese Anwendungen mit einem SPA-Framework entwickelt wurden. \n\nBedeutet das aber auch, dass wir eigentlich gar kein SPA-Framework mehr benötigen, sondern alles mit Web Components entwickeln können? Dieser spannenden Frage geht Manuel Rauber in diesem Webinar nach anhand einer Real-World-Demo-Applikation, Live-Coding und den Vor- und Nachteilen von Web Components.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-das-ende-der-spa-framework-ara",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 106
    },
    {
      "id": 172,
      "type": "Half Day Workshop",
      "title": "PWA-Bootcamp: von 0 auf MS Paint (hands-on)",
      "date": "2020-10-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Contributors Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. In diesem Bootcamp zeigt Ihnen Christian Liebel von Thinktecture, wie Sie in nur einem halben Tag eine vereinfachte Version von Paint implementieren und auf Ihrem Gerät installieren können – inklusive Dateisystemzugriff. Bitte bringen Sie Ihr Notebook (ohne Corporate-Proxys/Unternehmensrichtlinien) mit installiertem Google Chrome Canary und Microsoft Visual Studio Code mit.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-bootcamp-von-0-auf-ms-paint-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/mobiletechcon-2020-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 105
    },
    {
      "id": 174,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Taken to The Next Level",
      "date": "2020-10-27 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to take your Progressive Web App to the next level?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-taken-to-the-next-level",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 55
    },
    {
      "id": 171,
      "type": "Workshop",
      "title": "PWA Workshop: Progressive Web Apps, Superpowered",
      "date": "2020-10-25 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen shortcuts, clipboard access, and native file system access are only a few examples of Fugu’s powerful APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-workshop-progressive-web-apps-superpowered",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-munich-2020-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 177,
      "type": "Webinar",
      "title": "3D-Visualisierung im Web mit BabylonJS ",
      "date": "2020-10-20 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne Businessanwendungen sind schon lange nicht mehr langweilig: Daten wollen visualisiert werden und zwar verständlich und ansprechend. Genau dabei helfen Web-Grafik-Engines wie BabylonJS. Sie ermöglichen, 2D-, 3D, Virtual- und Augmented-Reality-Inhalte verständlich darzustellen. Somit lassen sich unter anderem digitale Konzepte visualisieren, konfigurieren und testen – Cross-Plattform und performant.\n\nIn dieser Session zeigt Max Schulte anhand einer Angular-Anwendung, Kernaspekte und Wege sowie einen Architekturansatz, um neue Visualisierungs- und Bedienmöglichkeiten in Ihre Anwendung integrieren zu können",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-visualisierung-im-web-mit-babylonjs",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-3d-visualisierung-babylonjs-angular",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://green-sky-080a5d803.azurestaticapps.net/",
          "label": "Demo App"
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#143",
          "label": "BabylonJS Playground Start"
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#142",
          "label": "BabylonJS Playground Ende"
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "JavaScript",
        "Architecture",
        "Typescript",
        "Web Technologies",
        "Webinar",
        "BabylonJs"
      ],
      "primaryTag": "BabylonJs",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 107
    },
    {
      "id": 135,
      "type": "Talk",
      "title": "Das Frontend-Experiment: Tausche Framework gegen Web Components",
      "date": "2020-10-14 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Aktuell sind Frameworks wie Angular oder React das Mittel der Wahl für webbasierte Frontends, doch das könnte sich in Zukunft ändern. Christian Liebel von Thinktecture wagt den Blick über den Tellerrand: Mit Web Components bekommt das Web derzeit ein Komponentenmodell, das kontinuierlich weiterentwickelt wird. Die heute bekannten Frameworks könnten damit in Zukunft weniger attraktiv werden. Anhand eines Experiments wird gezeigt, ob Frontends mit Web Components schon heute komplett ohne Framework aufgezogen werden können und ob das für die heute typische App-Entwicklung reichen könnte.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies",
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 57
    },
    {
      "id": 170,
      "type": "Webinar",
      "title": "Blazor WebAssembly jenseits von REST: gRPC in Web-Apps & .NET",
      "date": "2020-10-13 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor WebAssembly ermöglicht SPAs und PWAs für Desktop und Mobile - mit C#, .NET und HTTPS-/REST-Calls. Aber da muss es nicht aufhören. Über gRPC bzw. gRPC-Web kann man zum einen optimierte binäre Daten zwischen Blazor und APIs austauschen - und zum anderen eine Contract-First-Programmierung realisieren. Blazor kann auch hier im Konzert von etablierten Cross-Plattform-Lösungen mitspielen. Sehen Sie in diesem Webinar von Christian Weyer Blazor WebAssembly in Action - jenseits von REST.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-jenseits-von-rest-grpc-in-web-apps-and-net",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "gRPC",
        "ASP.NET Core",
        "Architecture",
        "SPA",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 104
    },
    {
      "id": 169,
      "type": "Talk",
      "title": "Real-time in no time (and costs) – with Azure Functions, Cosmos DB & SignalR",
      "date": "2020-10-13 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Let’s try to sort out some of the real strengths of Serverless and see where it can be a productive tool in your Cloud arsenal: real-time architectures & communication. Join Christian Weyer while discussing Azure Functions, Cosmos DB, and SignalR Service in a holistic scenario – by illustrating an end-to-end solution for a scalable real-time application built in almost no time, with almost no runtime costs. And action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/real-time-in-no-time-and-costs-with-azure-functions-cosmos-db-and-signalr",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Azure Functions",
        ".NET Core",
        "Architecture",
        "SignalR",
        "Serverless"
      ],
      "primaryTag": "Serverless",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 103
    },
    {
      "id": 167,
      "type": "Half Day Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-10-07 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-9ae2ffa5-17a4-4c07-9528-af5899ece615",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-perf",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 166,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2020-10-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-pwa",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-83a8be36-1440-4465-9ea8-813149a0c041",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 168,
      "type": "Workshop",
      "title": "RxJS in Angular-Anwendungen: so schwimmen Sie nicht mehr gegen den Stream",
      "date": "2020-10-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie sind Angular-Entwickler und fühlen sich noch nicht sicher genug, RxJS in vollem Umfang einzusetzen? Es hat sich gezeigt, dass es in der Community noch viel Unsicherheit in der Nutzung von RxJS gibt – selbst für erfahrene Entwickler. In dieser Session mit Yannick Baron wird die Denk- und Arbeitsweise hinter streambasiertem Datenfluss mit RxJS nochmal speziell im Kontext von Angular-Anwendungen angesehen. Darüber hinaus werden häufige Stolperfallen, Antipatterns und Patterns, sowie nützliche Anwendungsbeispiele vorgestellt, um die Anwendung von RxJS einfacher und vertrauter zu machen. Lasst uns gemeinsam mit dem Stream schwimmen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-in-angular-anwendungen-so-schwimmen-sie-nicht-mehr-gegen-den-stream",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-angular-demos",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 163,
      "type": "Workshop",
      "title": "Hands-on-Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2020-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und im Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mit Hilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single Page App Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-moderne-cross-plattform-losungen-01aea073-b24a-4f4a-a53b-aed937f7361d",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 164,
      "type": "Workshop",
      "title": "Kubernetes für Entwickler und Architekten",
      "date": "2020-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\nAusfallsichere und skalierbare Anwendungen zu betreiben und dabei ohne Ausfallzeiten neue Versionen Ihrer Software bereitzustellen, klingt auch heute noch für viele Lösungsanbieter nach einem schönen Traum. Mit Kubernetes und insbesondere den verwalteten Angeboten wie Azure Kubernetes Service (AKS) ist dieser Traum für Viele in greifbare Nähe gerückt. In diesem Tagesworkshop erklärt Thorsten Hans die Eigenschaften, Bestandteile und Möglichkeiten, die Kubernetes als Anwendungsplattform bietet. Nach dem Einstieg und den ersten Schritten mit Kubernetes werden Sie lernen, wie existierende Anwendungsbestandteile im Container-Orchestrator bereitgestellt und effektiv betrieben werden können. Essenzielle Themen, wie beispielsweise automatische Skalierung, der Umgang mit sensitiven Konfigurationsdaten, oder die Verwendung von externen, persistenten Datenspeichern, werden anhand von Beispielen aus der Praxis erläutert und können von Ihnen selbst erprobt werden.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-kubernetes-workshop",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-workshop-at-basta-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Docker",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 160,
      "type": "Talk",
      "title": "Serverless Computing in Azure Kubernetes Service mit KEDA",
      "date": "2020-09-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit Azure Functions stellt Microsoft ein flexibles und mächtiges Framework für Serverless Computing bereit, womit skalierbare und reaktive Anwendungen erstellt werden können. Mit Kubernetes Event-driven Applications (KEDA), können Sie Ihre Azure Functions problemlos in einem Kubernetes-Cluster betreiben. Doch KEDA kümmert sich nicht nur um den Betrieb. Durch geschickte Integration von sowohl externen als auch internen Nachrichten- und Ereignissystemen wie Azure Service Bus oder Azure Event Hub skaliert KEDA Ihre Azure Functions automatisch anhand der anfallenden Anfragen. In diesem Vortrag zeigt Thorsten Hans, wie Sie zukunftssichere, skalierbare und reaktive cloud-native Anwendungen erstellen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/serverless-computing-in-azure-kubernetes-service-mit-keda",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-keda",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 161,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum",
      "date": "2020-09-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum-f3051ae8-e858-4be1-9c36-a8e7a094e22e",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        3
      ],
      "tags": [
        "Electron",
        "Cordova",
        "Capacitor",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 162,
      "type": "Talk",
      "title": "3D-Daten-Visualisierung in Businessanwendungen mit BabylonJS – das Web kann’s",
      "date": "2020-09-23 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne Businessanwendungen sind schon lange nicht mehr langweilig: Daten wollen visualisiert werden und zwar verständlich und ansprechend. Genau dabei helfen Web-Grafik-Engines wie BabylonJS. Sie ermöglichen, 2D-, 3D, Virtual- und Augmented-Reality-Inhalte verständlich darzustellen. Somit lassen sich unter anderem digitale Konzepte visualisieren, konfigurieren und testen – Cross-Plattform und performant. In dieser Session zeigt Max Schulte anhand einer Angular-Anwendung Kernaspekte und Wege sowie einen Architekturansatz, um neue Visualisierungs- und Bedienmöglichkeiten in Ihre Anwendung integrieren zu können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-demo-basta-2020-mainz",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-daten-visualisierung-in-businessanwendungen-mit-babylonjs-das-web-kanns",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#142",
          "label": "BabylonJS PLayground - Live Coding "
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Mobile",
        "Typescript",
        "BabylonJs"
      ],
      "primaryTag": "BabylonJs",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 158,
      "type": "Talk",
      "title": "Kubernetes für .NET Core Entwickler",
      "date": "2020-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie möchten Ihre .NET-Core-Anwendung in Kubernetes betreiben und lernen, wie Sie das Potenzial des Container-Orchestrators nutzen können? Dann besuchen Sie diesen Talk von Kubernetes- und Cloud-native-Experte Thorsten Hans. Sie werden nicht nur den praktischen Umgang mit Kubernetes aus Sicht des Entwicklers lernen, sondern auch, wie Sie Patterns und Praktiken nutzen, um Ihre .NET-Core-Anwendungen optimal in Containern zu betreiben.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-aks",
          "label": "GitHub Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-fur-net-core-etnwicker",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 156,
      "type": "Talk",
      "title": "ASP.NET Core Web-API-Versionierung direkt aus der Praxis",
      "date": "2020-09-22 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, haben wir bei APIs das Problem, dass sich ältere Clientanwendungen auf das Verhalten verlassen, das wir damals bereitgestellt hatten. Änderungen daran würden die Clients nicht verstehen und daher nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unseres API. In dieser Session zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen, wann überhaupt eine neue Version benötigt wird, welche verschiedenen Methoden es gibt, um ein ASP.NET-Core-Web-API zu versionieren, und welche verschiedenen Herangehensweisen im Code möglich sind, um unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-api-versioning",
          "label": "Beispielcode und Demos auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-hybrid-2020-asp-dot-net-core-api-versionierung-aus-der-praxis",
          "label": "Slides bei Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Versioning",
        "ASP.NET Core",
        "Integration",
        "Microservices",
        "Architecture",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 157,
      "type": "Talk",
      "title": "ASP.NET Core Blazor: Single Page Applications im Browser mit C# & WebAssembly",
      "date": "2020-09-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) – bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell – je nach Anwendungsfall – die Grenzen liegen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-single-page-applications-im-browser-mit-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "PWA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 159,
      "type": "Talk",
      "title": "Progressive Web Apps mit Angular: Tipps für Fortgeschrittene",
      "date": "2020-09-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifendes Anwendungsmodell, das auf Webtechnologien basiert. Auch Googles SPA Framework Angular enthält eine PWA-Unterstützung, die schnell angeschaltet ist. Doch damit geht die Arbeit erst richtig los: Christian Liebel zeigt Ihnen, wie Sie mit Angular-App-Updates richtig kommunizieren, Cache-Probleme debuggen und den Anwender korrekt zum Abonnement von Pushbenachrichtigungen oder zum Installieren der App auffordern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-tipps-fur-fortgeschrittene-9c0c117d-93e4-4557-8404-30e43bfcc40c",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 155,
      "type": "Workshop",
      "title": "ASP.NET Core Blazor: moderne Businessanwendungen mit C# & WebAssembly – Full-Stack & Cross-Plattform",
      "date": "2020-09-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht webnative Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor WebAssembly Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET Web-basierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browserplattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Zur Abrundung des Workshops soll auch ein Blick auf Server-side Blazor und der Vergleich damit nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-and-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "Web Components",
        "SPA",
        "Architecture",
        "PWA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 154,
      "type": "Webinar",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff [Webinar]",
      "date": "2020-09-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden.\n\nChristian Liebel zeigt Ihnen die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-25bc73fd-b138-4ac8-8eae-0ea5f9d5e5a9",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "b1af99b54d9e",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 100
    },
    {
      "id": 153,
      "type": "Talk",
      "title": "Blazor-Gwerch: Dodned im Brausa - echt etz?",
      "date": "2020-09-11 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor bereits in einer frühen Vorab-Version möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-gwerch-dodned-im-brausa-echt-etz",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "PWA",
        "Web Technologies",
        "WebAssembly",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 38
    },
    {
      "id": 152,
      "type": "Webinar",
      "title": "Infrastructure as Code - Azure with HashiCorp Terraform",
      "date": "2020-09-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar-september-2020",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-september-2020",
          "label": "Sample GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Terraform",
        "Azure",
        "Infrastructure as Code"
      ],
      "primaryTag": "Infrastructure as Code",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 99
    },
    {
      "id": 115,
      "type": "Talk",
      "title": " Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2020-09-04 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 37
    },
    {
      "id": 150,
      "type": "Workshop",
      "title": "Web-Apps schneller entwickeln mit Ionic & Angular",
      "date": "2020-09-03 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen werden schnell komplex. Neben den rapide wechselnden Anforderungen soll die App installierbar, performant und einfach zu warten sein – und die Entwicklungszeit ist kosteneffektiv knapp bestimmt. Genau diese und andere Herausforderungen versucht Ionic als opinionated Framework zu adressieren. \n\nIn diesem Workshop zeigt Max Schulte, was mit Ionic und Angluar möglich ist und wie Ionic, dank seiner Tools, \"Production Ready\"-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/web-apps-schneller-entwickeln-mit-ionic-and-angular",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-ionic",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Capacitor",
        "Web Technologies",
        "Web Components",
        "Mobile",
        "PWA",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 149,
      "type": "Half Day Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-09-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-20655223-0b14-43ab-ba43-5b8943e2dad7",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-perf",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "Performance"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 151,
      "type": "Talk",
      "title": "Web Components: An Overview",
      "date": "2020-09-02 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "A brief overview of web components in regard to the question \"can web components replace SPA frameworks?\".",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-components-an-overview",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 37
    },
    {
      "id": 148,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2020-09-02 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-e71f0872-ccce-43de-9da3-f63db1b40c24",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-pwa",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://speakerdeck.com/thorstenhans/ohne-netz-aber-mit-doppeltem-boden-offline-first-apps-mit-html5-und-sql-server-backend",
          "label": "Ohne Netz, aber mit doppeltem Boden: Offline-First-Apps mit HTML5 und SQL Server Backend"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 147,
      "type": "Webinar",
      "title": "Blazor Server: Mögliche Architekturalternative zu SPAs?",
      "date": "2020-08-12 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Viele .NET-Entwickler sind Feuer und Flamme wenn es um Blazor und Webentwicklung geht. Wenn man etwas genauer hinschaut, stellt man schnell fest, dass man gleich zwei Geschmacksrichtungen vor sich hat: Blazor WebAssembly und Blazor Server.\n \nIn diesem Webinar wollen wir uns genauer mit Blazor Server beschäftigen: Was ist Blazor Server überhaupt, wo liegen die Unterschiede zum Client-seitigen Blazor und SPAs im Allgemeinen und welche Auswirkungen haben diese Unterschiede auf die Art, wie wir Web-Anwendungen schreiben? Was muss ich lernen, um mit Blazor Server arbeiten zu können und worauf muss ich eventuell besonders achten, wenn ich meine ersten Schritte mit Blazor Server gehen möchte?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/isabelschrage/blazor-server-mogliche-architekturalternative-zu-spas",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "SPA",
        "ASP.NET Core",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": "f61bec5686c7",
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 98
    },
    {
      "id": 146,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-07-28 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number-juli-2020",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "Web Technologies",
        "SPA",
        ".NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 97
    },
    {
      "id": 145,
      "type": "Webinar",
      "title": "Electron, Cordova & PWA - was, wann, wie & warum?",
      "date": "2020-07-21 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang.\n\nPWA-Professional Christian Liebel erklärt Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-and-pwa-was-wann-wie-and-warum",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Electron",
        "Web Technologies",
        "PWA",
        "Cordova"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 96
    },
    {
      "id": 144,
      "type": "Webinar",
      "title": "Git started",
      "date": "2020-07-14 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Versionskontrolle ist ein Muss in jedem Projekt, ob groß oder klein, professionell oder privat. Git wurde 2005 ins Leben gerufen und ist eines der populärsten Systeme zur verteilten Versionsverwaltung.\nSetzen sie schon Git ein und fühlen sich unsicher in der Verwendung, oder ist Git neu für Sie?\n\nDieses Webinar erklärt das Konzept hinter Git und illustriert die Verwendung im Day-to-Day-Business, um ein fundamentales Verständnis zu vermitteln. Auch Every-Day-Benutzer könnten das eine oder andere noch dazu lernen. Let's git started - alle zusammen!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/git-started-verteilte-versionsverwaltung-mit-git",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 95
    },
    {
      "id": 143,
      "type": "Webinar",
      "title": "Docker für .NET Entwickler",
      "date": "2020-07-07 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/docker-webinar",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/docker-webinar",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Containers",
        "Docker"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 94
    },
    {
      "id": 142,
      "type": "Webinar",
      "title": "Azure Functions - Serverless für .NET Entwickler",
      "date": "2020-06-30 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Serverless-Modell ist eine von vielen verschiedenen Möglichkeiten, Anwendungen für die Cloud zu entwickeln und zu betreiben. Es verspricht einen leichten Einstieg in die Entwicklung von Anwendungen und in den Betrieb eines Backends. Dabei ist leider nicht immer klar, wann und wie das Serverless-Modell sinnvoll genutzt werden kann.\n\nIn diesem Webinar zeigt Boris Wilhelms, was das Serverless-Modell ist und wie wir als .NET-Entwickler Azure Functions nutzen können um Serverless Code zu schreiben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/azure-functions-serverless-fur-net-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-azure-functions",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "Azure",
        ".NET Core",
        "Serverless",
        "Webinar",
        "Azure Functions"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 93
    },
    {
      "id": 141,
      "type": "Talk",
      "title": "Angular für XAML-Entwickler",
      "date": "2020-06-30 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das moderne Web lockt mit mächtigen Features und sprengt Plattformgrenzen. Googles SPA-Framework Angular eröffnet einen möglichen Weg in diese schöne neue Welt. Das Framework weist zwar eine gewisse Lernkurve auf, doch XAML-Entwickler haben beim Einstieg in die Technologie glücklicherweise entscheidende Vorteile: Denn viele aus WPF, Silverlight und UWP bekannte Konzepte finden sich auch in Angular wieder. In diesem Webinar möchten wir XAML-Entwicklern anhand konkreter Fallbeispiele eine Orientierungshilfe geben und zeigen, wie der Einstieg in die Entwicklung mit Angular rasch gelingen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-fur-xaml-entwickler-20eb1f34-cf5c-4d1d-b639-b2d8522ad933",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-angular",
          "label": "Angular-Beispiel"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-wpf",
          "label": "WPF-Beispiel"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 85
    },
    {
      "id": 131,
      "type": "Talk",
      "title": "Blazor jenseits von REST: SignalR & gRPC in Web-Apps",
      "date": "2020-06-29 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor WebAssembly ermöglicht SPAs und PWAs für Desktop und Mobile - mit C#, .NET und HTTPS-/REST-Calls. Aber da muss es nicht aufhören. Über gRPC bzw. gRPC-Web kann man zum einen hoch optimierte binäre Daten zwischen Blazor und APIs austauschen - und zum anderen eine Contract-First-Programmierung realisieren. Wenn man zudem ein bisschen Leben in Form von Echtzeit-Updates in die Anwendung bringen möchte, dann ist SignalR die richtige Wahl. Blazor kann auch hier im Konzert der Cross-Plattform-Lösungen mitspielen. Sehen Sie in dieser Session von Christian Weyer Blazor in Action - jenseits von REST.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-jenseits-von-rest-signalr-and-grpc-in-web-apps",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/dwx-home-blazor-grpc-signalr",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "SignalR",
        "gRPC",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 85
    },
    {
      "id": 139,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Plattform Realtime Push",
      "date": "2020-06-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-signalr-core-cross-platform-realtime-push",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Blazor",
        "SignalR"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 91
    },
    {
      "id": 138,
      "type": "Webinar",
      "title": "Angular für XAML-Entwickler",
      "date": "2020-06-09 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das moderne Web lockt mit mächtigen Features und sprengt Plattformgrenzen. Googles SPA-Framework Angular eröffnet einen möglichen Weg in diese schöne neue Welt. Das Framework weist zwar eine gewisse Lernkurve auf, doch XAML-Entwickler haben beim Einstieg in die Technologie glücklicherweise entscheidende Vorteile: Denn viele aus WPF, Silverlight und UWP bekannte Konzepte finden sich auch in Angular wieder. In diesem Webinar möchten wir XAML-Entwicklern anhand konkreter Fallbeispiele eine Orientierungshilfe geben und zeigen, wie der Einstieg in die Entwicklung mit Angular rasch gelingen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-fur-xaml-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-angular",
          "label": "Angular-Beispiel"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-wpf",
          "label": "WPF-Beispiel"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 90
    },
    {
      "id": 137,
      "type": "Webinar",
      "title": "Azure Kubernetes Service für .NET Core Entwickler",
      "date": "2020-06-02 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-kubernetes-service-fur-net-core-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/aks-netcore-webinar",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        ".NET Core",
        "AKS",
        "Docker"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 89
    },
    {
      "id": 136,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-05-26 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Webinar anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number-1bf79f69-2ba4-413c-b0a1-04c794513a88",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "SPA",
        ".NET Core",
        "Web Technologies",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 88
    },
    {
      "id": 173,
      "type": "Webinar",
      "title": "Web Components – das Ende der SPA-Framework-Ära?",
      "date": "2020-05-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components – ein Begriff, den wir immer öfter lesen und lesen werden. Dahinter stehen die Technologien Custom Elements, Shadow DOM und HTML Templates. Zusammen ergeben sie ein natives Komponentenmodell für unseren Browser. Es hilft uns, wiederverwendbare UI-Komponenten zu entwickeln, die wir in jeder App benutzen können. Völlig gleich, ob diese Anwendungen mit einem SPA-Framework entwickelt wurden. \n\nBedeutet das aber auch, dass wir eigentlich gar kein SPA-Framework mehr benötigen, sondern alles mit Web Components entwickeln können? Dieser spannenden Frage geht Manuel Rauber in diesem Webinar nach anhand einer Real-World-Demo-Applikation, Live-Coding und den Vor- und Nachteilen von Web Components.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-das-ende-der-spa-framework-ara-c68b0388-7730-4822-abc5-c7e96e18a067",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 86
    },
    {
      "id": 127,
      "type": "Webinar",
      "title": "3D-Visualisierung in Web Apps: Angular und BabylonJS in Symbiose",
      "date": "2020-05-12 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Dieses Webinar zeigt die Vorteile einer 3D-Engine in modernen Business-Anwendungen. Es wird in Detail auf die Aspekte einer integrativen Architektur eingegangen und anhand einer Demo und Live-Code verdeutlicht wie die Kommunikation stattfinden kann. ",
      "media": [
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": "Lagerhaus Beispiel App"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-architecture",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-visualisierung-in-web-apps-angular-und-babylonjs-in-symbiose",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Architecture",
        "Performance",
        "Web Technologies",
        "BabylonJs"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 80
    },
    {
      "id": 130,
      "type": "Webinar",
      "title": "Entity Framework Core - Performance-Optimierung aus der Praxis",
      "date": "2020-05-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit der Veröffentlichung von Entity Framework Core v3 hat sich das Verhalten des Objekt-Relationalen-Mappers von Microsoft an einigen Stellen maßgeblich geändert. Einige Performanceprobleme haben sich mit der neuen Version praktisch von selbst gelöst, andere Probleme sind neu bzw. aus älteren Versionen von Entity Framework zurückgekehrt. Es ist somit sehr empfehlenswert zu wissen, welche Version für welche Problemart besonders anfällig ist, um möglichst viel Geschwindigkeit aus EF-Abfragen und den dahinterliegenden SQL-Abfragen herauszuholen.\nIm ersten Teil des Webinars werden die häufigsten Performance-Probleme in Entity Framework Core v2 und v3 aufgezeigt. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden SQL Server Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/entity-framework-core-performance-optimierung-aus-der-praxis",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Execution Plan",
        "MS SQL Server",
        "Performance",
        "Entity Framework Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 84
    },
    {
      "id": 227,
      "type": "Webinar",
      "title": "Entity Framework Core 5 - Performance-Optimierung aus der Praxis",
      "date": "2020-05-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ef-core-performance-webinar-2021",
          "label": "Demos"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/entity-framework-core-5-performance-optimierung-aus-der-praxis",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 84
    },
    {
      "id": 117,
      "type": "Webinar",
      "title": "ASP.NET Core Web-API Dokumentation mit Swagger",
      "date": "2020-04-29 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wenn wir eine .NET Core Web-API bauen, ist es nicht nur damit getan, ein neues Projekt zu erzeugen, ein paar Controller zu implementieren und sie dann zu deployen.\n\nEine API ist - wie der Name schon sagt - eine Schnittstelle, und eine Schnittstelle sollte wohl definiert und auch wohl dokumentiert sein. Vor allem, damit die Entwickler, die mit unserer API arbeiten müssen, auch wissen was sie kann und wie sie funktioniert. Allerdings soll uns die Dokumentation nicht zu viel Zeit kosten und sie sollte möglichst immer auf dem aktuellen Stand sein. Und was wäre, wenn eine solche, schnell erstellte Dokumentation uns als API-Entwickler und auch den Konsumenten unserer API auch noch Arbeit abnehmen könnte?\n\nIn diesem Webinar zeigt Ihnen Sebastian Gingter wie man diese beiden Fliegen mit einer Klappe schlagen kann: Mit Hilfe von Swagger erzeugen wir erst eine umfassende, ständig aktuelle und lebendige Dokumentation unserer API im Open API Format. Danach sehen wir uns an, wie uns diese technische Dokumentation helfen kann, zum einen Zeit zu sparen und zum anderen Fehler zu vermeiden, in dem wir diese akkurate Basis nehmen, um Client- Code und Test-Rümpfe zu generieren. Web APIs jenseits von Hello World, mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/tt-webinar-2020-openapi",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/tt-webinar-2020-openapi",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Swagger",
        "ASP.NET Core",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 77
    },
    {
      "id": 116,
      "type": "Webinar",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2020-04-21 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel zeigt Ihnen die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-5abb7495-ffd9-4b00-b8bc-589f079f79a2",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pwa-deep-dive-webinar",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://www.thinktecture.com/de/cheatsheet/pwa",
          "label": "PWA Cheat Sheet"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies",
        "Webinar",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 76
    },
    {
      "id": 114,
      "type": "Talk",
      "title": "Web Components als Frameworkersatz – das Frontend-Experiment",
      "date": "2020-04-16 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wenn ein Frontend im Web benötigt wird, ist die Wahl schnell auf die üblichen Verdächtigen eingegrenzt: Angular, React oder Blazor. Durch Web Components könnte sich das in Zukunft ändern. Christian Liebel von Thinktecture wagt einen Blick in die Glaskugel: Mit Web Components hat das Web ein Komponentenmodell erhalten, das kontinuierlich weiterentwickelt wird. Vielleicht braucht es in Zukunft nicht mehr für jeden Anwendungsfall zwingend ein schweres Framework. Anhand eines Experiments wird demonstriert, ob sich Frontends schon heute komplett mit Web Components statt Frameworks aufziehen lassen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-components-als-frameworkersatz-das-frontend-experiment",
          "label": ""
        },
        {
          "type": "Video",
          "url": "https://www.twitch.tv/videos/594354515?t=05h42m47s",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 75
    },
    {
      "id": 113,
      "type": "Talk",
      "title": "Terraform Webinar",
      "date": "2020-04-16 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/terraform-webinar-azure-meetup-ffm",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform"
      ],
      "primaryTag": "Terraform",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 74
    },
    {
      "id": 112,
      "type": "Webinar",
      "title": "Infrastructure as Code mit Terraform",
      "date": "2020-04-14 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-april-2020",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 73
    },
    {
      "id": 110,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-04-01 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Webinar anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "SPA",
        ".NET Core",
        "Web Technologies",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 71
    },
    {
      "id": 108,
      "type": "Workshop",
      "title": "Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2020-02-28 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Push-Benachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-fur-moderne-cross-plattform-losungen",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pwapraxis/angular-demo",
          "label": "Angular-Projekt"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pwapraxis/server",
          "label": "Server"
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 101,
      "type": "Talk",
      "title": "Swagger & Co. im Praxiseinsatz für Tests und Clients",
      "date": "2020-02-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Als Entwickler wollen wir uns das Leben möglichst einfach machen. Und wenn wir eine Aufgabe vor uns haben, dann wollen wir auch möglichst viel damit erreichen. Nun haben wir ein ASP.NET-Core-Web-API gebaut, und es mit Hilfe von Swagger dokumentiert. Und nun? In dieser Session zeigt Ihnen Sebastian Gingter, wie man mit möglichst wenig Aufwand möglichst viel aus einer lebendigen Swagger-Dokumentation herausholen kann. Dabei erleben Sie auch, wie man von dort aus mit wenigen Schritten zu einer umfassenden End-to-End-Testsuite kommt. Und wenn wir schon dabei sind, dann schauen wir uns auch noch an, wie wir von der Dokumentation zu komplett funktionalen Clientbibliotheken kommen, ohne uns zu sehr anzustrengen: E2E-Web-APIs – jenseits von Hello World und mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-openapi",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-spring-2020-openapi",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Swagger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 107,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum?",
      "date": "2020-02-26 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum-42fa2c1b-346d-4e77-a03a-4b03036d9048",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-electron-cordova-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Cordova",
        "Electron",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 106,
      "type": "Talk",
      "title": "Progressive Web-Apps mit Angular: Tipps für Fortgeschrittene",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifendes Anwendungsmodell, das auf Webtechnologien basiert. Auch Googles SPA Framework Angular enthält eine PWA-Unterstützung, die schnell angeschaltet ist. Doch damit geht die Arbeit erst richtig los: Christian Liebel zeigt Ihnen, wie Sie mit Angular App-Updates richtig kommunizieren, Cacheprobleme debuggen und den Anwender korrekt zum Abonnement von Push-Benachrichtigungen oder zum Installieren der App auffordern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-tipps-fur-fortgeschrittene",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-advanced-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 104,
      "type": "Talk",
      "title": "Blazor: SPAs im Browser mit C# und WebAssembly",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-spas-im-browser-mit-c-number-und-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "PWA",
        "Web Components",
        "Web Technologies",
        "SPA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 102,
      "type": "Talk",
      "title": "Web Components: native Komponenten fürs Web – das Ende der SPA Frameworks?",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Komponenten – ein Begriff der uns Entwicklern sehr geläufig ist, egal ob als Windows-, Desktop- oder Webentwickler. Durch Kapselung von UI-Definition und Code-behind erhalten wir modulare und wiederverwendbare Bausteine zum Zusammensetzen der Oberfläche unserer Anwendung. Während wir damals im Web mit jQueryUI erste Komponenten entwickeln konnten, bedienen wir uns heute moderner Frameworks wie Angular, React oder Vue.js. Doch mit den Webstandards für HTML-Templates, Shadow DOM und Custom Elements erhalten wir die Möglichkeit, ein natives Komponentenmodell im Browser zu nutzen, gänzlich ohne Frameworks: Es leben die Web Components! In dieser Session klärt Manuel Rauber, wie Web Components funktionieren, wo die Vorteile und Nachteile liegen und ob wir heutzutage schon in der Lage sind, Single Page Applications zu entwickeln, die gänzlich ohne Frameworks auskommen. Sind Sie auch schon auf die Antworten gespannt?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-native-komponenten-furs-web-das-ende-der-spa-frameworks",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-web-components/",
          "label": "Live Demo"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": "Chat Demo"
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": "Chat Online Demo"
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Web Components",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 103,
      "type": "Talk",
      "title": "Pragmatische Microservices mit .NET Core (3) – mehr als nur gRPC",
      "date": "2020-02-24 21:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Microservices: ja! Oder eher doch nicht? Um diese Frage beantworten zu können, klärt Christian Weyer in diesem Vortrag, was Microservices sind, was sie nicht sind, wann man sie nutzt – und vor allem: wie man Microservices in der .NET-Welt implementieren kann. Sehen Sie Architekturansätze und Patterns in Aktion und erleben Sie Technologien wie Web-APIs, gRPC, Push Messaging, Background Workers und Co. im praktischen Einsatz mit .NET Core 3. Versuchen wir gemeinsam, langweilige Architekturthemen spannend zu machen – durch eine pragmatische Sichtweise.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pragmatic-microservices-dotnetcore",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-mit-net-core-3-mehr-als-nur-grpc",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Architecture",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 105,
      "type": "Workshop",
      "title": "Workshop - Blazor: Moderne Businessanwendungen mit C# & WebAssembly – Full-Stack- und Cross-Plattform",
      "date": "2020-02-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht-webnativen Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET webbasierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browser-P﻿lattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Als Abrundung des Workshops soll auch ein Blick auf und ein Vergleich mit Server-side Blazor nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/workshop-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-und-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "SPA",
        "PWA",
        "Web Components",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 100,
      "type": "Talk",
      "title": "Hot Topic: Dependency Injection",
      "date": "2020-02-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Dependency Injection (DI). By now, everyone should have heard about it.\nBut what actually is \"Dependency Injection\" and \"Inversion of Control\"?\nWe can find 'it' implemented in a lot of frameworks nowadays and for\nsomeone not familiar with the concept it might seem like magic.\nIn this session we are going to take a closer look behind the curtains\nof this software design principle and show what DI can do for us and how\na very simplistic version could be implemented in Javascript.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/hot-topic-dependency-injection-lets-talk-about-it",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/dependency-injection-poc",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular",
        "Architecture",
        "Typescript"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 69
    },
    {
      "id": 99,
      "type": "Talk",
      "title": "Angular - BabylonJS Integration Deep Dive",
      "date": "2020-02-06 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "\"Angular - BabylonJS Integration Deep Dive\" - This talk demonstrates how Angular and BabylonJS can be integrated in detail, what key aspects are there, and gives an idea of what can be created with the demonstrated approach.\nYou will learn about the similarities and differences between Angular and BabylonJS, as well as an approach to create a future proof architecture that utilizes the best of both frameworks.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/angular-babylonjs-integration-deep-dive",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-architecture",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Architecture",
        "BabylonJs",
        "Integration",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 67
    },
    {
      "id": 80,
      "type": "Talk",
      "title": "Web Components, ganz ohne Framework! Live & in Action ",
      "date": "2020-01-21 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Jeder kennt es: Kapselung und Wiederverwendung von UI-Komponenten im Web sind sehr mühsam. Meist ist es ein Zusammenkopieren von HTML, CSS und JavaScript, oftmals über eine oder mehrere Dateien verteilt. Vergisst man einen Teil, sieht es nicht wie gewünscht aus oder die Interaktion funktioniert nicht.\nDoch damit ist jetzt Schluss! Mit Web Components eröffnen sich neue Wege im Web, um UI-Komponenten standardisiert und ganz ohne Framework implementieren und verwenden zu können. In dieser Session zeigt Patrick Jahr die wichtigsten Punkte für die erste eigene Web Component mit den Standards HTML Templates, Custom Elements und Shadow DOM. Alles Live mit VSCode, Chrome und den DevTools – in Action!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/web-component-ganz-ohne-framework-live-and-in-action-81b71392-fd8e-4d7f-b0d3-0a828673f7f1",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/rnjs-native-web-components",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        "JavaScript",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 51
    },
    {
      "id": 81,
      "type": "Workshop",
      "title": "Serverless-Architekturen für Java, .NET und node.js – mit Azure Functions & Co.",
      "date": "2019-12-10 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Egal ob Sie Java, .NET oder node.js als Haupttechnologie nutzen: mit Serverless-Ansätzen können Sie schnell \"Gummi auf die Straße\" bringen, um ihre Microservices oder Ihren \"Glue Code\" mir-nichts-dir-nichts entwickeln und bereitstellen zu können. In diesem Workshop sehen Sie Azure Serverless-Dienste ohne großes Marketing-Tamtam im Einsatz. Neben den Grundlagen werden vor allem typische Anwendungsszenarien für Azure Functions, Azure Service Bus, Azure Storage und Co. illustriert. Lehnen Sie sich also zurück und sehen Sie Serverless in Action, mit Java, .NET und JavaScript.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-fur-java-net-und-node-dot-js-mit-azure-functions-and-co",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure Functions",
        "Serverless",
        "Microservices",
        ".NET Core",
        "Azure",
        "Java",
        "JavaScript"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 41
    },
    {
      "id": 76,
      "type": "Workshop",
      "title": "Offline-First: Architektur-Patterns & Implementierung für APIs & Backends",
      "date": "2019-12-10 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\"Keine Internetverbindung\" – ein Satz, den wir alle aus vielen Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form eines HTTP APIs. Wie man sein Backend um eine offline-fähige Architektur erweitert, um es bspw. von einer SPA/PWA nutzen zu können, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Workshop. Denn bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Allgemein werden Themen im API Design, u.a. Synchronisationsstrategien von Anwendungs- und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur – sowohl für neue als auch bestehende Anwendungen – diskutiert. Am Beispiel einer PWA mit einem Backend in Java als auch in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns gezeigt.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/offline-first-architektur-patterns-and-implementierung-fur-apis-and-backends",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-boardist-offline.azurewebsites.net/",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-boardist.azurewebsites.net/games",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 41
    },
    {
      "id": 50,
      "type": "Talk",
      "title": "Entity Framework Core - Performanzoptimierung",
      "date": "2019-12-09 10:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Entity Framework hat Microsoft vor Jahren einen Objekt-Relationalen-Mapper geschaffen, welcher sich in der .NET-Welt mittlerweile einer großen Beliebtheit erfreut. Der O/R-Mapper ermöglicht es, ohne SQL-Kenntnisse auf eine Datenbank sowohl lesend als auch schreibend zuzugreifen. Doch hier verbergen sich Risiken, denn ein O/R-Mapper erweckt den Eindruck, dass der Anwendungsentwickler sich nie wieder mit SQL zu befassen braucht - was für 80% der Abfragen in einer Anwendung auch stimmen mag. Die restlichen 20% können allerdings die gesamte Applikation durch sehr schlechte Antwortzeiten beinah unbenutzbar machen. Die unperformanten SQL-Abfragen sind jedoch nicht die einzige Quelle welche die Benutzbarkeit in Mitleidenschaft ziehen. Es spielt auch eine Rolle wie genau Entity Framework im Code verwendet wird. Nicht selten wird die Tatsache vergessen, dass die LINQ-Abfragen am Ende nicht im Arbeitsspeicher, sondern durch die Datenbank ausgeführt werden – mehr oder weniger „transparent“. In ersten Teil des Vortrags wird gezeigt auf was geachtet werden sollte, um die häufigsten Stolperfallen bei der Verwendung von Entity Framework Core zu vermeiden. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden die Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/it-tage-2019-entity-framework-core-performanzoptimierung",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Execution Plan",
        "MS SQL Server",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 52
    },
    {
      "id": 64,
      "type": "Talk",
      "title": "Progressive Web Apps: Cross-Plattform-Apps über iOS und macOS hinaus",
      "date": "2019-12-04 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\nStellen Sie sich vor, Sie schreiben Ihre App einmal – und sie läuft nicht nur auf macOS und iOS, sondern auch noch auf Windows, Android, Linux, Chrome, Safari, Firefox und Edge! Der alte Java-Traum \"Write once, run anywhere\" wird mit den Progressive Web Apps endlich Wirklichkeit. Christian Liebel stellt Ihnen das neue Anwendungsmodell abseits des App Store einschließlich seiner technologischen Grundlagen vor, und zeigt, was es leisten kann und wo die Grenzen der PWA liegen.",
      "media": [
        {
          "type": "Related Link",
          "url": "https://heise-macdev.de/lecture.php?id=9471&source=0",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-cross-plattform-apps-uber-ios-und-macos-hinaus",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 29
    },
    {
      "id": 74,
      "type": "Talk",
      "title": "“Alles C#, oder was?\" Cross-Plattform Web-Anwendungen mit ASP.NET Core Blazor",
      "date": "2019-11-26 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor bereits in einer frühen Vorab-Version möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/alles-c-number-oder-was-cross-plattform-web-anwendungen-mit-asp-dot-net-core-blazor",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "PWA",
        "Web Technologies",
        "WebAssembly"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 51,
      "type": "Talk",
      "title": "Entity Framework Core - Performanzoptimierung",
      "date": "2019-11-26 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Entity Framework hat Microsoft vor Jahren einen Objekt-Relationalen-Mapper geschaffen, welcher sich in der .NET-Welt mittlerweile einer großen Beliebtheit erfreut. Der O/R-Mapper ermöglicht es, ohne SQL-Kenntnisse auf eine Datenbank sowohl lesend als auch schreibend zuzugreifen. Doch hier verbergen sich Risiken, denn ein O/R-Mapper erweckt den Eindruck, dass der Anwendungsentwickler sich nie wieder mit SQL zu befassen braucht - was für 80% der Abfragen in einer Anwendung auch stimmen mag. Die restlichen 20% können allerdings die gesamte Applikation durch sehr schlechte Antwortzeiten beinah unbenutzbar machen. Die unperformanten SQL-Abfragen sind jedoch nicht die einzige Quelle welche die Benutzbarkeit in Mitleidenschaft ziehen. Es spielt auch eine Rolle wie genau Entity Framework im Code verwendet wird. Nicht selten wird die Tatsache vergessen, dass die LINQ-Abfragen am Ende nicht im Arbeitsspeicher, sondern durch die Datenbank ausgeführt werden – mehr oder weniger „transparent“. In ersten Teil des Vortrags wird gezeigt auf was geachtet werden sollte, um die häufigsten Stolperfallen bei der Verwendung von Entity Framework Core zu vermeiden. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden die Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/ddc-2019-entity-framework-core-performance-optimization",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Performance",
        "MS SQL Server",
        "Execution Plan"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 63,
      "type": "Workshop",
      "title": "Progressive Web Apps für .NET-Entwickler: Frontend der Zukunft",
      "date": "2019-11-25 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET Core eignet sich hervorragend zur Implementierung plattformübergreifender Konsolenanwendungen und Backends. Zuletzt haben nun auch wieder Frontendtechnologien in .NET Core Einzug erhalten. Doch Windows Forms und WPF sind nicht plattformübergreifend einsetzbar. Progressive Web Apps (PWA) hingegen laufen auf allen nennenswerten Mobil- und Desktopplattformen sowie in jedem Browser und bieten sich somit als zukunftssichere Frontendplattform an. Frameworks wie Angular bringen Architekturkonzepte ins Web, die Sie von WPF/XAML schon kennen. Insgesamt eignen sich PWA hervorragend als Frontend für Ihre in .NET Core geschriebene Webschnittstelle. Christian Liebel stellt Ihnen die PWA-Basics vor und zeigt, wie Sie mit einem in .NET Core geschriebenen Backend kommunizieren können.",
      "media": [
        {
          "type": "Related Link",
          "url": "https://www.dotnet-developer-conference.de/programm/#/talk/progressive-web-apps-fur-net-entwickler-frontend-der-zukunft",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-fur-net-entwickler-frontend-der-zukunft",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 61,
      "type": "Talk",
      "title": "Blockchain als Architektur-Komponente – Fluch oder Segen? ",
      "date": "2019-11-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Start der Bitcoin Blockchain im Jahr 2009 wurde der Welt eine verteilte Datenbank zugänglich, bei der nur im Konsens der Teilnehmer über den aktuellen Zustand bestimmt werden kann. Während der Use-Case einer unabhängigen Währung leicht zu greifen ist, fällt es uns bisweilen schwer, die Charakteristiken von Blockchains sinnvoll auf andere Anwendungen zu übertragen. In diesem Talk werden Sie lernen, welche Features die Blockchain einzigartig machen und unter welchen Umständen Sie davon profitieren können - aber auch wann Sie davon absehen sollten. Dieses Wissen wird Patrick Stürmlinger mit Ihnen anhand eines real existierenden Projekts zur Sicherung von Dokumentenarchiven anwenden und vertiefen.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        9
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 23
    },
    {
      "id": 72,
      "type": "Talk",
      "title": "WebComponents: Native Komponenten fürs Web – mal ohne Framework?",
      "date": "2019-11-18 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Begriffe UI-Komponenten oder Controls kennen wir Entwickler seit \"Ewigkeiten\". Durch Kapselung erhalten wir modulare und wiederverwendbare Baukastenelemente, aus denen unsere UI-Anwendungen zusammengesetzt werden. Bisher mussten wir uns im Web eines SPA Frameworks bedienen. Ob Angular, React, Vue.js oder Polymer. Doch keines dieser Frameworks wollte oder konnte so recht mit dem anderen zusammenarbeiten. Dies könnte sich in Zukunft ändern mit WebComponents. Diese beschreiben anhand von Standards wie CustomElements ein Komponentenmodell für das Web und bietet damit erstmal die Möglichkeit, native Komponenten im Browser gänzlich ohne ein Framework oder aber über Framework-Grenzen hinweg einzusetzen. In dieser Session klärt Manuel Rauber wie WebComponents funktionieren, wo die Vorteile und Nachteile liegen – und, vermutlich am spannendsten: er geht der Frage in gewohnt praktischer Manier nach, ob WebComponents mit aktuellen Single-Page Application (SPA) Frameworks wie Angular oder React genutzt und erstellt werden können. Abgerundet wird das Ganze mit einem Ausblick, wie wir künftig Web-Anwendungen mit Web Components entwickeln könnten. Auf zum nächsten Schritt!",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": "https://github.com/thinktecture-labs/web-components-chat"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-mal-ohne-framework?slide=2",
          "label": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-mal-ohne-framework?slide=2"
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net",
          "label": "https://tt-web-components-chat-ng.azurewebsites.net"
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 23
    },
    {
      "id": 62,
      "type": "Talk",
      "title": "Too many challenges, so little time – How can blockchain integration succeed without an army of engineers?",
      "date": "2019-11-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "For a long time, neither politics nor business took the issue of Blockchain seriously. Today, every larger company develops at least proof of concepts, while Blockchain initiatives are proclaimed. However, feasibility quickly reaches its limits when it comes to transforming a PoC into a product. The rapid development of the space, even by IT standards, and a simultaneous lack of Blockchain experts slows down many projects. In this talk, Patrick Stürmlinger points out the difficulties of integration and introduces you to the concept of a Blockchain gateway (including an exemplary implementation), which solves the biggest integration problems such as the different functionality of the different Blockchains, the predictability of costs and the handling of mini-forks. ",
      "media": [],
      "previewSrc": "",
      "speaker": [
        9
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 4
    },
    {
      "id": 67,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-11-09 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, you’ll get to know common performance pitfalls in Angular applications and learn how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Related Link",
          "url": "http://www.devfestka.de/programm",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-9422e7d0-1204-4577-bd57-e6d318cd6c57",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 30
    },
    {
      "id": 65,
      "type": "Talk",
      "title": " PWA Update 2019: Modern Web APIs for even better Progressive Web Apps",
      "date": "2019-11-08 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "PWA is a great application model: These cross-platform, web-based apps work offline, can show push notifications and run in an own window (desktop) or standalone (mobile). Google’s Project Fugu will bring even more native functionality to the web, such as notification badges, wake locks and native file system access. Thinktecture’s Christian Liebel, GDE for Web Technologies, shows you how those APIs will pave the way for an even brighter future for Progressive Web Apps.",
      "media": [
        {
          "type": "Related Link",
          "url": "http://www.devfestka.de/programm",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-2019-modern-web-apis-for-even-better-progressive-web-apps",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 30
    },
    {
      "id": 66,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-getriebene Microservices mit Azure Functions & Co. – auch für Java-Entwickler",
      "date": "2019-11-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Warum muss es \"Serverless oder Microservices\" sein? Es sollte vielmehr \"Microservices mit Serverless\" heißen! Basierend auf einigen der allgemein anerkannten Prinzipien von Microservices können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen - nennen wir sie mal Nanoservices. Christian Weyer zeigt Ihnen einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Diensten & Tools. Erleben Sie Serverless Azure mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier in Aktion - jenseits der typischen Functions-as-a-Service-Beispiele.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-getriebene-microservices-mit-azure-functions-and-co-auch-fur-java-entwickler-1231a20a-87da-4e62-af77-74ee9f8279da",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 32
    },
    {
      "id": 60,
      "type": "Talk",
      "title": "Advanced Progressive Web Apps: Push notifications under control",
      "date": "2019-10-21 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, Progressive Web Apps (PWA) are one of the hottest topics on the web today. A PWA should feel like a real app, including the ability to show push notifications. In this talk, Thinktecture’s Christian Liebel (@christianliebel) will show you how to implement push messaging in your PWA or website using the Push API, including a look at helpful libraries and third-party services. As a part of Google’s Project Fugu, push notifications will get even better thanks to the advent of the Badging API and Notification Triggers.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/advanced-progressive-web-apps-push-notifications-under-control-81c57f71-2200-4494-b14c-8a03c45697e6",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://javascript-conference.com/web-development-architecture/advanced-progressive-web-apps-push-notifications-under-control/",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-munich-2019-push",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=fKDdulqFGSU",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 6
    },
    {
      "id": 59,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-10-19 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, we’ll have a look at common performance pitfalls in Angular applications and how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone, lazy loading, server-side rendering and Service Worker support. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Related Link",
          "url": "https://codecamp.ro/timisoara#agenda",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-f862942b-25a1-4a41-a82c-7df93c77c505",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 28
    },
    {
      "id": 58,
      "type": "Keynote",
      "title": "The Web in 2020: wohin sich das Web bewegt",
      "date": "2019-10-15 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Einmal im Jahr trifft sich das World Wide Web Consortium (W3C) zur Meetingwoche. Christian Liebel von Thinktecture war beim diesjährigen Treffen der Arbeitsgruppen in Japan dabei und hat die neuesten Informationen im Gepäck: Welche Spezifikationen gerade im Gespräch sind – welche neuen Schnittstellen das Web bekommen soll – und was das für Webanwendungen im Jahr 2020 heißen könnte.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/the-web-in-2020-wohin-sich-das-web-bewegt",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://www.web-developer-conference.de/programm/#/talk/keynote-tba",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 27
    },
    {
      "id": 57,
      "type": "Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2019-10-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-2dfd9043-3590-4810-9621-64e02eadb77c",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://liebel.io/ngp19h",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 71,
      "type": "Workshop",
      "title": "Immer & überall: Offlinefähige Progressive Web Apps – am Beispiel Angular",
      "date": "2019-10-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "“Keine Internetverbindung” – ein Satz, den wir alle aus genutzten Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form einer Web API. Bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Gerade in der heutigen Zeit, in der Menschen immer mobiler werden, in Autos, Zügen und Flugzeugen unterwegs sind und arbeiten, benötigt man oftmals offline Zugriff auf die Anwendungsdaten. Wie man diese echt offline-fähigen Single-Page Applications/Progressive Web Apps realisiert, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Ganztagesworkshop. Allgemein werden Themen wie Synchronisationsstrategien von Anwendungsdaten und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur sowohl für neue als auch bestehende Anwendungen diskutiert. Am Beispiel einer Angular-basierten App mit einem exemplarischen Backend in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns implementiert.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/immer-and-uberall-offlinefahige-progressive-web-apps-am-beispiel-angular",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 70,
      "type": "Workshop",
      "title": "WebComponents: Native Komponenten fürs Web - ohne und mit Frameworks",
      "date": "2019-10-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Der aktuelle Single-Page Application und der frühere Windows-Entwickler kennt sie seit „Ewigkeiten”: UI-Komponenten, oder Controls. Durch Kapselung erhalten wir modulare und wiederverwendbare Baukastenelemente, aus denen unsere UI-Anwendungen zusammengesetzt werden. Bisher mussten wir uns im Web eines SPA Frameworks bedienen – ob Angular, ReactJS, Vue.js oder Polymer. Doch keines dieser Frameworks wollte oder konnte so recht mit dem anderen zusammenarbeiten. Dies könnte sich in Zukunft ändern mit WebComponents. Diese beschreiben anhand von Standards wie CustomElements ein Komponentenmodell für das Web und bietet damit erstmal die Möglichkeit, native Komponenten im Browser gänzlich ohne ein Framework oder aber über Framework-Grenzen hinweg einzusetzen. \nIn dieser Session klären Manuel Rauber und Patrick Jahr wie WebComponents funktionieren, wo die Vorteile und Nachteile liegen – und, vermutlich am spannendsten: sie gehen der Frage in gewohnt praktischer Manier nach, ob WebComponents mit aktuellen Single-Page Application (SPA) Frameworks wie Angular genutzt und erstellt werden können und welche Rolle Ivy dabei spielt. Abgerundet wird das Ganze mit einem Ausblick, wie wir künftig Web-Anwendungen mit Web Components entwickeln könnten. Auf zum nächsten Schritt!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-ohne-und-mit-frameworks",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-2019-fall-web-components",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": null
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        11,
        1
      ],
      "tags": [
        "Angular",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 56,
      "type": "Workshop",
      "title": "Robuste Design Systems mit Storybook und Angular: vom Konzept zur lebendigen Anwendung",
      "date": "2019-10-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit den stetig wachsenden Möglichkeiten, die Cross-Platform-Anwendungen bieten, wachsen auch die Anforderungen an deren Design. Skalierbarkeit, Flexibilität und Wandelbarkeit gehören zu den Grundprinzipien eines modernen User-Interfaces. Andreas Wissel und Christian Liebel erarbeiten mit Ihnen in diesem Workshop anhand von Praxisbeispielen einen robusten Workflow. Mit Storybook und Angular lassen sich so isolierte, test- und wartbare Komponenten im Handumdrehen umsetzen. Ihre Designer und Entwickler werden es lieben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/robuste-design-systems-mit-storybook-und-angular-vom-konzept-zur-lebendigen-anwendung?slide=34",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://bit.ly/ng-ds",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 55,
      "type": "Workshop",
      "title": "Hands-on Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2019-09-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-moderne-cross-plattform-losungen",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/html5-javascript/cross-plattform-workshop/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 54,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum",
      "date": "2019-09-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2019-electron-cordova-pwa",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/web-development/electron-cordova-pwa-was-wann-wie-und-warum/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 49,
      "type": "Talk",
      "title": "Advanced ASP.NET Core Web APIs: testen und dokumentieren – aber richtig!",
      "date": "2019-09-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Jeder baut Web-APIs, oder? Leider ist es nicht damit getan, ein neues Projekt zu erzeugen, ein paar Controller zu implementieren und dann sein Web-API zu deployen. Zum einen sollte es vernünftig dokumentiert werden, damit die Entwickler, die mit unserem API arbeiten müssen, auch wissen, was es kann und wie es funktioniert. Zum anderen sollten wir selber auch sicherstellen, dass unser API das tut, was es soll. In dieser Session zeigt Ihnen Sebastian Gingter, wie man diese beiden Fliegen mit einer Klappe schlagen kann. Mit Hilfe von Open API/Swagger erzeugen wir erst eine umfassende, ständig aktuelle und lebendige Dokumentation unseres APIs. Im zweiten Schritt generieren wir aus dieser Dokumentation auch gleich Tests für das API-Test-Tool Postman, die wir dann mit etwas JavaScript Testcode anreichern und diese sogar als automatisierte Integrationstests laufen lassen können. Web-APIs jenseits von Hello World, mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-fall-2019-openapi",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=8bU6O_fMr5U",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-fall-2019-openapi",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 73,
      "type": "Talk",
      "title": "Blockchain für Architekten und Entwickler – was steckt wirklich dahinter?",
      "date": "2019-09-23 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "In wenigen Jahren werden wir Blockchains so selbstverständlich nutzen wie heute Datenbanken – und das nicht wegen seltsamer Kryptowährungen, die bereits heute schon mehr an Tulpenkrise als an seriöses Software-Engineering denken lassen. In dieser Session präsentiert Ingo Rammer die konkreten technischen Motivationen, Hintergründe und Zusammenhänge, die den Hype überstehen werden. Sie lernen die fundamentalen Elemente, Arten und Betriebsmodi von öffentlichen und privaten Blockchains kennen und werden wissen, warum Smart Contracts weder „smart“ noch „Verträge“, sondern einfach Regeln zur Prüfung von replizierten Transaktionen sind. Nach diesem Vortrag haben Sie eine solide Basis, um zu beurteilen, ob – und wenn ja, in welchen Bereichen – Ihre Anwendungsfälle von der Nutzung von Blockchain-Technologien profitieren könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/blockchain-fur-architekten-und-entwickler-was-steckt-wirklich-dahinter-8ed00546-c53f-431a-ac74-dc26fe2956d6",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=brw9SHxPcYM",
          "label": null
        },
        {
          "type": "Slides-Originalformat",
          "url": "https://thinktecture2com.sharepoint.com/:p:/s/prj-conferences/ERwa_ZzYxC5KgC6tvvbWtFIB3vgmaUigt9mlfaATtbMllQ?e=c1LPgw",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 53,
      "type": "Talk",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2019-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen am Beispiel einer in Angular geschriebenen Anwendung die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.\n\nDieser Talk richtet sich an Entwickler, die grob wissen, um was es bei Progressive Web Apps geht. In diesem Track gibt es auch den passenden Grundlagenvortrag („Progressive Enhancement im Web: PWA-Grundlagen“), der Ihnen dieses Verständnis vermittelt. Bitte nehmen Sie ein Smartphone mit, um ggf. die Demoanwendung auf dem eigenen Gerät ausprobieren zu können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-82e2dd43-1bc2-49cc-bdbc-30c1e618ba22",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/web-development/pwa-deep-dive-offline-anwendungen-im-griff/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 125,
      "type": "Workshop",
      "title": "Moderne Businessanwendungen mit Angular, .NET Core und Azure – Weitblick für Backend- und Frontend-Entwickler",
      "date": "2019-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Alle reden darüber: Mobile-Apps, Webtechnologien und Cloud. Die Welt besteht nicht mehr nur aus Windows allein und Ihr Job als Entwickler ändert sich. In diesem Workshop zeigen Thorsten Hans und Boris Wilhelms interessierten .NET-Entwicklern, welche architekturellen Ideen und Konzepte hinter modernen Businessanwendungen auf Basis von .NET Core, Azure Functions, Angular und TypeScript stecken.\n\nLernen Sie praktische Lösungen für eine Reihe diverser Problem- und Fragestellungen kennen. Wie kann man geräte- und plattformübergreifend Businessanwendungen mit Angular bauen? Wie kann man dies für Windows, iOS, Android und fürs Web gleichermaßen realisieren? Wie können diese Anwendungen Daten und Anwendungslogik mit Hilfe Service-basierter Architekturen nutzen? Dieser Workshop liefert Antworten auf all diese interessanten Fragen. Moderne Businessanwendungen mit Angular, Cordova, Electron, .NET Core und Azure – in Action!",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4,
        14
      ],
      "tags": [
        "Angular",
        ".NET Core",
        "Azure Functions",
        "Azure",
        "Electron",
        "Serverless",
        "SPA",
        "Cordova",
        "Architecture"
      ],
      "primaryTag": "Architecture",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 52,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-08-29 18:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, you’ll get to know common performance pitfalls in Angular applications and learn how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ngde2019-perf",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-e85cc65c-9ba7-4300-b10f-526ad3ba2ecd",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=moUCZoJfhwY",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 24
    },
    {
      "id": 46,
      "type": "Workshop",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-07-03 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, we’ll have a look at common performance pitfalls in Angular applications and how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone, lazy loading, server-side rendering and Service Worker support. Let’s make your Angular app blazing fast!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://youtu.be/SY7-8JJAtGM",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 30,
      "type": "Talk",
      "title": "Mehr als nur HTTP-APIs: Pragmatische Serverless Backends mit JavaScript / TypeScript und Azure Functions",
      "date": "2019-06-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Serverless ist in aller Munde und so gut wie jede JavaScript-basierte Anwendung braucht irgendeine Art von Backend. Warum also nicht die beiden Ideen vereinen? In dieser Session zeigt Christian anhand von Azure Functions, wie man mit TypeScript effizient eigene HTTP APIs baut, ohne großes Infrastruktur-Tamtam. \nAber damit nicht genug: Basierend auf allgemein anerkannten Prinzipien können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen. Sieh dafür einen pragmatischen Ansatz mit Functions, Service Bus und weiteren Azure-Cloud-Diensten sowie Tools. Eben mehr als nur HTTP-APIs.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/typescript-und-azure-functions",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Serverless",
        "Azure Functions",
        "Typescript",
        "JavaScript",
        "Azure"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 15
    },
    {
      "id": 44,
      "type": "Talk",
      "title": "PWA-Update: Neue Webschnittstellen für noch bessere Progressive Web Apps",
      "date": "2019-06-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps funktionieren offline, können Pushbenachrichtigungen darstellen und laufen auf jeder Plattform von Android über Firefox bis Windows. Außerdem können Entwickler auf alle Funktionen zugreifen, für die es eine Webschnittstelle gibt. In der Vergangenheit waren dies etwa Gamepads oder der Standort des Anwenders. Mit neuen Webschnittstellen will das World Wide Web Consortium (W3C) die Lücke zwischen nativen Apps und PWA weiter schließen: Mithilfe der Writable Files API sollen PWA auf einen Teilbereich des nativen Dateisystems zugreifen können, die Badging API erlaubt das Setzen von Notification-Badges und die Shape Detection API erlaubt das Erkennen von Barcodes, Gesichtern oder Text in Bildern. Christian Liebel zeigt Ihnen brandheiße Web-APIs, die Progressive Web Apps noch mächtiger machen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-neue-webschnittstellen-fur-noch-bessere-progressive-web-apps-6e9b8f36-27c0-4835-afd0-a4f135364c48",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 21
    },
    {
      "id": 45,
      "type": "Talk",
      "title": "Web-Payments neu gedacht: Abrechnen mit der Payment Request API",
      "date": "2019-06-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Anbieter von Onlineshops, Abodiensten oder Progressive Web Apps kennen das Problem: Sobald Zahlungen vom Nutzer angefordert werden sollen, wird die Sache komplex. Anwender müssen die immerselben Daten in vor allem mobil schwer zu bedienende Formulare eintragen und eventuell wird der Bedienfluss durch eine Weiterleitung zu einem externen Zahlungsdienstleister unterbrochen. Wäre es nicht schön, wenn der Webbrowser die Anwenderdaten vorausfüllen und der Nutzer auf komfortable Methoden wie Apple Pay oder Google Pay zurückgreifen könnte? Die Payment Request API bringt genau diese Features in Web. Christian Liebel von Thinktecture zeigt Ihnen, wofür sich diese plattformübergreifend einsetzbare Webschnittstelle eignet und wo ihre Grenzen liegen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-payments-neu-gedacht-abrechnen-mit-der-payment-request-api",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 21
    },
    {
      "id": 29,
      "type": "Workshop",
      "title": "Azure in Action: Pragmatische Cloud-Lösungen mit Containern & Serverless",
      "date": "2019-06-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "IDE öffnen, „File – New Project – Cloud“, OK klicken und fertig. Oder? Nun, nicht ganz. Denn egal ob AWS, GCP oder eben Azure: am Ende des Tages werden Sie sich fragen, warum, wann und wie gehe ich in die Cloud? Genau diese Fragestellungen wollen Thorsten Hans und Christian Weyer für Java-, node.js- und .NET-Entwickler in diesem Workshop beantworten. Anhand diverser Use Cases werden mögliche Wege mit, über und in Azure diskutiert. Was bedeuten Architekturansätze wie Cloud-Native Microservices und Serverless Microservices? Wie gehe ich bei Brownfield-Projekten vor und wie kann ich Greenfield-Lösungen effizient in Azure realisieren? Wo liegen Unterschiede und Benefits von datengetriebenen und von ereignisgetriebenen Ansätzen? Wie kann ich mit dem Sammelsurium an Patterns, Technologien und Tools in Azure kosteneffektiv hantieren und dennoch flexibel sein? All dies werden wir anhand praktischer Beispiele und pragmatischer Lösungen in interaktiver Art und Weise adressieren. Sehen Sie PaaS, Web Apps, Containers, Orchestrators, Serverless, Functions & Co. mit der Azure-Cloud anhand von .NET-Demos in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/azure-in-action-pragmatische-cloud-losungen-mit-containern-and-serverless-1e2ffa1a-2a42-4355-8c53-3676a71176ff",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/azure-functions-extensibility",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/aks-demo-app",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices",
        "Serverless",
        "Containers",
        "Kubernetes",
        "AKS",
        "Azure Functions"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 14
    },
    {
      "id": 48,
      "type": "Workshop",
      "title": "Einmal API mit allem, bitte: ASP.NET Core MVC und SignalR in Action!",
      "date": "2019-06-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne APIs können so viel mehr als nur gängige HTTPS-Endpunkte bereitzustellen: Zum einen die Möglichkeit zur (optionalen) Echtzeitkommunikation auf Basis von WebSockets. Mit Hilfe von Microsofts Open-Source-Plattform ASP.NET Core MVC und SignalR lassen sich im Handumdrehen Web-APIs und Push Services entwickeln. Doch damit nicht genug: Weitere Themen wie Security, Rate Limiting, eine sinnvolle Dokumentation und ein vernünftiges, zentralisiertes Logging sind mit von der Partie. Und jeder dieser einzelnen Bereiche bietet uns eine neue Herausforderung.\n\nSebastian Gingter und Manuel Rauber zeigen Ihnen in diesem Workshop, wie man mit .NET Core moderne APIs auf und für verschiedene Plattformen entwickeln kann. Zusätzlich wird durch den Einsatz von Entity Framework Core die Anbindung an unterschiedliche Datenbanken ermöglicht. Durch den Einsatz weiterer Open-Source-Bibliotheken für Logging oder zur automatischen Generierung einer Swagger/OpenAPI-Dokumentation ergänzen wir das API um weitere Funktionalitäten. Eine Clientanwendung, das Deployment auf unterschiedliche Plattformen und das Deployment in die Cloud runden den Workshop ab – vollständig End-to-end und einmal mit allem eben!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/einmal-api-mit-allem-bitte-asp-dot-net-core-mvc-und-signalr-in-action-164d1e3e-189b-4b6a-95a3-33003e3f3f05",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-ms-summit-spring-2019-services-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        1
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 14
    },
    {
      "id": 43,
      "type": "Workshop",
      "title": "Progressive Web Apps for PHP Developers in action!",
      "date": "2019-06-05 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps work anywhere from iOS to Windows, run offline and can make use of native functionality such as camera access or geolocation. Thinktecture’s Christian Liebel shows you the technological foundations of this very promising application model—in action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-for-php-developers-in-action",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 20
    },
    {
      "id": 42,
      "type": "Talk",
      "title": "Progressive Web Apps for .NET Developers: An Overview",
      "date": "2019-05-28 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps work anywhere from iOS to Windows, run offline and can make use of native functionality such as camera access or geolocation. Thinktecture’s Christian Liebel shows you the technological foundations of this very promising application model, demonstrates how your PWAs can integrate with the Windows Runtime and what the new Chromium-based Edge means for Progressive Web Apps.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-for-net-developers-an-overview",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 19
    },
    {
      "id": 82,
      "type": "Talk",
      "title": "Advanced Azure Functions – beyond HTTP GET /helloworld",
      "date": "2019-05-27 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Azure Functions enable to swiftly create serverless applications & services. But in practice, we soon face situations where the simple Hello-World-ish approaches do no longer suffice. In this talk, Christian Weyer shows you how to use Microsoft's Functions-as-a-Service (FaaS) platform to realize scenarios beyond the usual static triggers & bindings, like HTTP. He illustrates how you can secure your functions, create your own custom extensions, use dynamic bindings to implement tricky use cases. Hosting Azure Functions is also discussed because it is not always possible to use the public Cloud as-is. Come and see Azure Functions with C # in action - beyond Hello World.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/helloworld",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Azure Functions",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 19
    },
    {
      "id": 27,
      "type": "Talk",
      "title": "Angewandte Serverless Microservices mit Azure Functions & Co.",
      "date": "2019-05-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Warum muss es \"Serverless oder Microservices\" sein? Es sollte vielmehr \"Microservices mit Serverless\" heißen! Basierend auf einigen der allgemein anerkannten Prinzipien von Microservices können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen - nennen wir sie mal Nanoservices. Christian Weyer zeigt Ihnen einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Diensten & Tools. Erleben Sie Serverless Azure mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier in Aktion - jenseits der typischen Functions-as-a-Service-Beispiele.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/angewandte-serverless-microservices-mit-azure-functions-and-co",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 12
    },
    {
      "id": 41,
      "type": "Talk",
      "title": "Advanced Progressive Web Apps: Push notifications under control",
      "date": "2019-05-13 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, Progressive Web Apps (PWA) are one of the hottest topics on the web today. A PWA should feel like a real app, including the ability to show push notifications. In this talk, Thinktecture’s Christian Liebel (@christianliebel) will show you how to implement push messaging in your PWA or website using the Push API, including a look at helpful libraries and third-party services. As a part of Google’s Project Fugu, push notifications will get even better thanks to the advent of the Badging API and Notification Triggers.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/advanced-progressive-web-apps-push-notifications-under-control-61ddbb4e-026d-4beb-a251-eaeea2ab1730",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 18
    },
    {
      "id": 40,
      "type": "Talk",
      "title": "PWA-Update: Neue Webschnittstellen für noch bessere Progressive Web Apps",
      "date": "2019-05-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps funktionieren offline, können Pushbenachrichtigungen darstellen und laufen auf jeder Plattform von Android über Firefox bis Windows. Außerdem können Entwickler auf alle Funktionen zugreifen, für die es eine Webschnittstelle gibt. In der Vergangenheit waren dies etwa Gamepads oder der Standort des Anwenders. \nMit neuen Webschnittstellen will das World Wide Web Consortium (W3C) die Lücke zwischen nativen Apps und PWA weiter schließen: Mithilfe der Writable Files API sollen PWA auf einen Teilbereich des nativen Dateisystems zugreifen können, die Badging API erlaubt das Setzen von Notification-Badges und die Shape Detection API erlaubt das Erkennen von Barcodes, Gesichtern oder Text in Bildern. Christian Liebel zeigt Ihnen brandheiße Web-APIs, die Progressive Web Apps noch mächtiger machen.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-neue-webschnittstellen-fur-noch-bessere-progressive-web-apps",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 17
    },
    {
      "id": 26,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-getriebene Microservices mit Azure Functions & Co. – auch für Java-Entwickler",
      "date": "2019-05-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Microsofts Azure Cloud auf der JAX? Ja, in der Tat. Denn nicht immer muss oder soll es AWS (Amazon Web Services) oder GCP (Google Cloud Platform) sein. Azure bietet mittlerweile eine holistische Plattform für so gut wie jede Cloud-Anforderung an. Auch und vor allem in den Bereichen Cloud Native und Serverless investiert Microsoft sehr viel. In dieser Session zeigt Christian Weyer von Thinktecture – ohne großes Marketing-Tamtam – neben den Grundlagen vor allem typische Anwendungsszenarien für Azure Functions, Azure Service Bus und Co. Fokus soll dabei auf Event-getriebene Microservices-Architekturen liegen. Lehnen Sie sich also zurück und sehen Sie \"die andere Cloud\" – auch mit Java – in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-getriebene-microservices-mit-azure-functions-and-co-auch-fur-java-entwickler",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core",
        "Node.js",
        "Java"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 11
    },
    {
      "id": 25,
      "type": "Talk",
      "title": "Blockchain in 2019: Wichtigste Fakten & sinnvolle Use Cases – jenseits des Hypes",
      "date": "2019-05-07 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blockchain in 2019: Wichtigste Fakten & sinnvolle Use Cases – jenseits des Hypes",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blockchain-in-2019-wichtigste-fakten-and-sinnvolle-use-cases-jenseits-des-hypes",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 10
    },
    {
      "id": 123,
      "type": "Talk",
      "title": "Advanced Azure Functions",
      "date": "2019-04-27 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Azure Functions makes it easy to quickly create simple Serverless applications & services. However in the rarest cases \"Hello World\"-like implementations are sufficient in practice. So, can we implement complex requirements with that technology? Yes we can. In this talk Boris Wilhelms shows you how you can use Microsofts FaaS-platform to implement scenarios beyond the common triggers and bindings and how you can secure your Functions. The topic of hosting is also covered since it is not always possible to use the public cloud, but you can use and benefit from the Serverless concept in a on-premises environment.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/advanced-azure-functions-at-global-azure-bootcamp-2019-frankfurt",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/gab-ffm-2019",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Azure Functions"
      ],
      "primaryTag": "Azure Functions",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 78
    },
    {
      "id": 16,
      "type": "Talk",
      "title": "Code your Azure Environments with Terraform",
      "date": "2019-04-26 22:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 5
    },
    {
      "id": 24,
      "type": "Talk",
      "title": "Pragmatic Serverless Microservices with Azure Functions & Co. - more than FaaS",
      "date": "2019-04-10 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Why does it have to be Serverless versus Microservices? Couldn’t it be rather Microservices with Serverless? Based on some of the well-accepted principles of Microservices, we can use Serverless architectures and technologies to build highly focused Microservices – which we might call Nanoservices. Christian Weyer will show you a pragmatic approach on how to build Nanoservices with Azure Functions, Azure Service Bus, Azure Storage and friends. Join him to see Serverless Azure in action, with .NET Core, JavaScript and Java – beyond the typical Functions-as-a-Service examples.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatic-serverless-microservices-with-azure-functions-and-co-more-than-faas-60687a12-ba7f-487a-a8e2-922a14b162ed",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 9
    },
    {
      "id": 23,
      "type": "Talk",
      "title": "Advanced Serverless Azure: Extending Azure Functions to meet your Runtime Infrastructure Needs",
      "date": "2019-04-09 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Bindings and runtime extensions are the engines of Azure Functions that fuel Azure-based Serverless architectures. In this short talk, Christian Weyer will show you in a live coding session how you can build and use your own custom bindings and extensions. Based on a real project’s requirements, he will walk you through the internals of Azure Functions and create a fully functional custom binding that implements patterns for reusing custom infrastructure needs.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/advanced-serverless-azure-extending-azure-functions-to-meet-your-runtime-infrastructure-needs",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/azure-functions-extensibility",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 9
    },
    {
      "id": 22,
      "type": "Talk",
      "title": "Pragmatische Serverless Microservices mit Azure Functions & Co. (Kaa Sörwa unn Söavis-Gschmarri – so Cloud-Gwerch hald)",
      "date": "2019-04-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das ist eine Hip, das andere ist Hype. Aber muss es Serverless *oder* Microservices sein? Vielmehr sollte es Microservices *mit* Serverless heißen. Basierend auf allgemein anerkannten Prinzipien können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices ohne viel Infrastruktur-Tamtam zu erstellen - nennen wir sie der Einfachheit halber Nanoservices. Der Unterfranke und DDF-Pionier Christian Weyer zeigt euch einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Cloud-Diensten & Tools. Erleben Sie Serverless Azure in Aktion mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier - auf dem Server, äh.... #KaaSörwa",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-serverless-microservices-mit-azure-functions-and-co-kaa-sorwa-unn-soavis-gschmarri-so-cloud-gwerch-hald",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Angular",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 39,
      "type": "Talk",
      "title": "PWA Deep-Dive: Offline-Anwendungen im Griff",
      "date": "2019-04-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps bieten sich als plattformübergreifendes Anwendungsmodell als idealer Partner für in .NET geschriebene Backends an. Zentrale Eigenschaft einer jeden Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: Im Tunnel, im Park oder im Dschungel. Zur Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen die Mechanik hinter der dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit ihren nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offline-anwendungen-im-griff",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 38,
      "type": "Workshop",
      "title": "Frontend der Zukunft: Progressive Web Apps für .NET-Entwickler",
      "date": "2019-04-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET Core eignet sich hervorragend zur Implementierung plattformübergreifender Konsolenanwendungen und Backends. Zuletzt haben nun auch wieder Frontendtechnologien in .NET Core Einzug erhalten. Doch Windows Forms und WPF sind nicht plattformübergreifend einsetzbar. Progressive Web Apps (PWA) hingegen laufen auf allen nennenswerten Mobil- und Desktopplattformen sowie in jedem Browser und bieten sich somit als zukunftssichere Frontendplattform an. Frameworks wie Angular bringen Architekturkonzepte ins Web, die Sie von WPF/XAML schon kennen. Insgesamt eignen sich PWA hervorragend als Frontend für Ihre in .NET Core geschriebene Webschnittstelle. Christian Liebel stellt Ihnen die PWA-Basics vor und zeigt, wie Sie mit einem in .NET Core geschriebenen Backend kommunizieren können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/frontend-der-zukunft-progressive-web-apps-fur-net-entwickler-52418789-d092-4bf2-9e4d-c001b320f31b",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 68,
      "type": "Workshop",
      "title": "Immer und überall: offlinefähige Progressive Web Apps – am Beispiel Angular",
      "date": "2019-03-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\"Keine Internetverbindung\" – ein Satz, den wir alle aus genutzten Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form eines Web API. Bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Gerade in der heutigen Zeit, in der Menschen immer mobiler werden, in Autos, Zügen und Flugzeugen unterwegs sind und arbeiten, benötigt man oftmals offline Zugriff auf die Anwendungsdaten. Wie man diese echt offline-fähigen Single-Page Applications/Progressive Web Apps realisiert, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Ganztagesworkshop. Allgemein werden Themen wie Synchronisationsstrategien von Anwendungsdaten und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur sowohl für neue als auch bestehende Anwendungen diskutiert. Am Beispiel einer Angular-basierten App mit einem exemplarischen Backend in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns implementiert.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/immer-und-uberall-offlinefahige-progressive-web-apps-am-beispiel-angular",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 16
    },
    {
      "id": 37,
      "type": "Workshop",
      "title": "Progressive Web-Apps mit Angular: hands-on",
      "date": "2019-03-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind das App-Modell der Zukunft. Das sagt zumindest Google und hat damit nichts Geringeres vor, als App-Stores von Mobilgeräten zu verbannen. Stattdessen lautet der Gedanke: Offlinefähigkeit, Push Notifications und schnelles Startverhalten sollen ins Web kommen. Ein Fingertipp reicht und eine mobile Website wird zur installierten App auf dem Gerät einschließlich Homescreen-Icon: Android, iOS, Windows, macOS und Linux auf einen Streich.\nChristian Liebel von Thinktecture zeigt Ihnen, wie Sie mit Angular, Angular Material und der Angular CLI PWAs entwickeln und somit sanft und sacht die Schlucht zwischen reinen Web-Sites, Web-Apps und hybriden/nativen Apps schließen können. Und Sie können mitmachen: Dazu benötigen Sie mindestens einen Laptop und optional ein aktuelles Smartphone mit iOS oder Android.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-hands-on",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 16
    },
    {
      "id": 36,
      "type": "Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2019-03-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen an nur einem Tag anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-3ee1e5ae-aa20-466b-b362-a101daf26e77",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 15,
      "type": "Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2019-03-20 23:00:00.0000000",
      "language": "DE",
      "billed": true,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen an nur einem Tag anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Speakerdeck",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-3ee1e5ae-aa20-466b-b362-a101daf26e77",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 35,
      "type": "Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2019-03-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 34,
      "type": "Talk",
      "title": "Progressive Web Apps update 2019: Web Goes Native (RheinNeckarJS)",
      "date": "2019-03-12 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, PWA is one of the hottest topics in Web space today. Progressive Web Apps are cross-platform, support browsers, desktop and mobile platforms—a perfect match for your business application. A PWA should feel like a real app we are used to since years: users want an icon on the home screen as well was native-like performance and feature richness. Christian Liebel, author of “Progressive Web Apps: Das Praxisbuch” and consultant at Thinktecture, shows you how to develop your first PWA, implement offline availability using service workers and send push notifications even when your app is closed. In addition, Christian brings you up to date on modern web APIs and service worker enhancements that will further enhance PWA functionality. Come and bring your PWA questions with you!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-update-2019-web-goes-native-e93aacbc-e56e-46e4-9306-4632dd21b39d",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 33,
      "type": "Workshop",
      "title": "Hands-on Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2019-03-01 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-echte-cross-plattform-losungen-5b162ec3-4953-40f7-aff4-1e49fd3ffc0b",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2019-pwa-workshop",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 5,
      "type": "Workshop",
      "title": "Workshop: Von null auf hundert – Blockchain-Anwendungen mit Hyperledger Fabric",
      "date": "2019-02-28 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "In diesem Ganztagesworkshop erfahren Sie, wie Sie – ganz ohne CPU-intensives Mining und ohne Kryptowährungen – auf der Basis der Open-Source-Plattform \"Hyperledger Fabric\" eine private (\"permissioned\") Blockchain zwischen Geschäftspartnern aufbauen und wie Sie mit Node.js dafür Smart Contracts und HTTP-Endpunkte entwickeln können. Nach einer kurzen Zusammenfassung der technischen Blockchain-Grundlagen sehen Sie, wie eine private Blockchain auf Basis von Hyperledger Fabric konfiguriert und betrieben wird. Danach lernen Sie die Besonderheiten dieser Umgebung zur Entwicklung von Smart Contracts kennen und wie Sie Tools und Vorgehensweisen zum Deployen, Debuggen und Verwalten Ihrer Anwendungen nutzen können. Neben den typischen Sicherheitsaspekten von Blockchain-Anwendungen im Geschäftsumfeld lernen Sie auch verschiedene Versionierungs- und Governance-Strategien zum langfristigen Betrieb Ihrer Smart Contracts kennen. Zu guter Letzt sehen Sie, wie Sie mit zwischengeschalteten Node.js APIs zwischen .NET-Anwendungen und den entstandenen Smart Contracts bidirektional kommunizieren können, um den Datenaustausch zwischen Ihren existierenden Systemen und der Blockchain-Umgebung zu erlauben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/workshop-von-null-auf-hundert-blockchain-anwendungen-mit-hyperledger-fabric",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Hyperledger",
        "Node.js"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 2,
      "type": "Talk",
      "title": "Hyperledger Fabric: Die Open-Source Basis für Ihre Blockchain",
      "date": "2019-02-27 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "In dieser Session stellt Ihnen Ingo Rammer die von der Linux Foundation betreute open-source Blockchain-Basistechnologie Hyperledger Fabric vor. Sie lernen die Grundlagen von Fabric für den Betrieb von privaten bzw. berechtigungsgestützten Blockchains kennen und erfahren die dafür geeigneten Einsatzgebiete, Architekturentscheidungen sowie Sicherheitsaspekte. Diese Session ist eine optimale Grundlage, um Sie für die Folgesession \"Coding Hyperledger Fabric – Smart Contracts und Clients mit Node.js\" vorzubereiten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/hyperledger-fabric-die-open-source-basis-fur-ihre-blockchain-f198d4d3-90fc-497d-bdde-fdd35fcf4731",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Hyperledger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 4,
      "type": "Talk",
      "title": "Coding Hyperledger Fabric – Smart Contracts und Clients mit Node.js",
      "date": "2019-02-27 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "Aufbauend auf den Inhalten der Session \"Hyperledger Fabric: die Open-Source Basis für Ihre Blockchain\" zeigt Ihnen Ingo Rammer in dieser Session, wie Sie die SDKs für Fabric in Ihrem Code nutzen können. Sie lernen, wie Sie von ihrem Client aus Transaktionen initiieren und wie Sie Chaincode (Smart Contracts in Fabric) erstellen können, um diese zu verarbeiten. Sie sehen, wie Sie eventgesteuert auf Ereignisse der Blockchain reagieren können und wie Sie mit den unterschiedlichen Arten von Daten Ihrer Blockchain interagieren. Zu guter Letzt erfahren Sie, wie Sie mit Fabric einen typischen Code>Test>Debug>Deploy-Zyklus umsetzen können.\n\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/coding-hyperledger-fabric-smart-contracts-und-clients-mit-node-dot-js",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Node.js",
        "Hyperledger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 20,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-basierte Microservices mit Azure Functions & Co.",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm… Ja, in der Tat. Der Serverless-Ansatz verspricht eine niedrige Hürde, um den Einstieg in Microservices zu finden. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand praktischer Anwendungsfälle. Auf Basis erprobter Designpatterns können Sie mit Azure Functions, Azure Service Bus und Co. in kurzer Zeit sowohl einfache als auch komplexe Services-Anwendungen designen und implementieren – lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Kommen Sie vorbei – eventuell lernen Sie die Basis für Ihr neues Businesssoftware-Backend kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-basierte-microservices-mit-azure-functions-and-co-c4053d0c-b7d8-433f-a60c-6f4a249cb2db",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 31,
      "type": "Talk",
      "title": "Real-World Angular: Erfahrungen aus (fast) vier Jahren Projektgeschäft",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Frankfurt, im Februar 2015: In einer Hotellobby probiert die Thinktecture-Crew eine der frühen, blutigen Alphaversionen von Angular 2 aus. Seither sind vier Jahre vergangen. Zurück in Frankfurt zeigt Christian Liebel von Thinktecture, welche Lehren das Thinktecture-Team aus beinahe vier Jahren Projektgeschäft gezogen hat. Wir besprechen bspw. erweiterte TypeScript-Sprachfeatures, die Unterteilung von Angular-Projekten in isolierte Module sowie verschiedene Maßnahmen zur Verbesserung der Performance. Dieser Talk richtet sich an Angular-Entwickler, welche die Grundlagen des Frameworks verstehen und schon erste Projekte damit umgesetzt haben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/real-world-angular-erfahrungen-aus-fast-vier-jahren-projektgeschaft",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 32,
      "type": "Talk",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen am Beispiel einer in Angular geschriebenen Anwendung die Mechanik hinter  dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.\nDieser Talk richtet sich an Entwickler, die grob wissen, um was es bei Progressive Web Apps geht. In diesem Track gibt es auch den passenden Grundlagenvortrag („Progressive Enhancement im Web: PWA-Grundlagen“), der Ihnen dieses Verständnis vermittelt. Bitte nehmen Sie ein Smartphone mit, um ggf. die Demoanwendung auf dem eigenen Gerät ausprobieren zu können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 21,
      "type": "Talk",
      "title": "Pragmatische Microservices-Architekturen mit .NET Core – Patterns & Code",
      "date": "2019-02-25 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Angetrieben durch mögliche Nachteile einer monolithischen Architektur wollen Microservices und damit verbundene Designpatterns und -ideen das scheinbare Allheilmittel sein. In diesem Vortrag klärt Christian Weyer die folgenden Fragen: Was sind Microservices und was sind sie nicht? Wann setzt man sie ein? Und vor allem: Wie baut und betreibt man Microservices in der .NET-Core-Welt? Sehen Sie Architekturansätze und Patterns in Aktion und erleben Sie Technologien wie Service Discovery, Web APIs, SignalR, Message Queuing und Co. im praktischen Einsatz. Versuchen wir also gemeinsam, langweilige Architekturthemen spannend zu machen: auf pragmatische Weise. Dieser Talk richtet sich an .NET-Entwickler- und -Architekten, die Microservices verstehen und ohne jegliche Frameworks und Clouds in Aktion sehen wollen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-architekturen-mit-net-core-patterns-and-code",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pragmatic-microservices-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 126,
      "type": "Workshop",
      "title": "Moderne Businessanwendungen mit Angular, .NET Core und Azure – Weitblick für Backend- und Frontend-Entwickler",
      "date": "2019-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Alle reden darüber: Mobile-Apps, Webtechnologien und Cloud. Die Welt besteht nicht mehr nur aus Windows allein und Ihr Job als Entwickler ändert sich. In diesem Workshop zeigen Thorsten Hans und Boris Wilhelms interessierten .NET-Entwicklern, welche architekturellen Ideen und Konzepte hinter modernen Businessanwendungen auf Basis von .NET Core, Azure Functions, Angular und TypeScript stecken.\n\nLernen Sie praktische Lösungen für eine Reihe diverser Problem- und Fragestellungen kennen. Wie kann man geräte- und plattformübergreifend Businessanwendungen mit Angular bauen? Wie kann man dies für Windows, iOS, Android und fürs Web gleichermaßen realisieren? Wie können diese Anwendungen Daten und Anwendungslogik mit Hilfe Service-basierter Architekturen nutzen? Dieser Workshop liefert Antworten auf all diese interessanten Fragen. Moderne Businessanwendungen mit Angular, Cordova, Electron, .NET Core und Azure – in Action!",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4,
        14
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Azure",
        "Azure Functions",
        "Cordova",
        "Electron",
        "Serverless",
        "SPA",
        "Architecture"
      ],
      "primaryTag": "Architecture",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 28,
      "type": "Talk",
      "title": "Serverless Microservices - by example of Azure Functions (and a bit of deep dive into the platform)",
      "date": "2019-02-22 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Why does it have to be Serverless versus Microservices? Couldn’t it be rather Microservices with Serverless? Based on some of the well-accepted principles of Microservices, we can use Serverless architectures and technologies to build highly focused Microservices – which we might call Nanoservices. \nChristian Weyer will show you a pragmatic approach on how to build Nanoservices with Azure Functions, Azure Service Bus, Azure Storage and friends. Join him to see Serverless Azure in action, with .NET Core, JavaScript and Java – beyond the typical Functions-as-a-Service examples.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-microservices-by-example-of-azure-functions-and-a-bit-of-deep-dive-into-the-platform",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Microservices",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 13
    },
    {
      "id": 47,
      "type": "Talk",
      "title": "Code your Azure Deployments using Terraform",
      "date": "2019-02-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Using HashiCorp’s Terraform you can code almost every Azure Deployment. Having your entire infrastructure as source code makes it easy to spin up new environments in a couple of minutes. Terraform takes this approach a step further, having a single language and a single CLI allows you to describe deployments for almost every cloud vendor. With Terraform Execution Plans you can also inspect what will be deployed, changed or deleted in Azure without harming existing deployments. Join this talk by Thorsten Hans and learn how to write your deployments and quickly create different, independent environments such as Testing, Staging, and Production in Azure.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 19,
      "type": "Talk",
      "title": "Serverless in Action: Event-gesteuerte Microservices - am Beispiel Azure",
      "date": "2019-01-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm... Ja, in der Tat. Der Serverless-Ansatz für Microservices verspricht eine niedrige Hürde, um den Einstieg zu finden und auch um ans Ziel zu kommen. Dabei ist Serverless jedoch nicht für jeden und alles geeignet. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand eines realistischen Anwendungsbeispiels. Auf Basis erprobter Design Patterns können Sie mit Azure Functions, Azure Event Grid, Azure Cosmos DB, Azure Storage & Co. in kurzer Zeit einfache & komplexe Anwendungen designen und implementieren - lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Wohnen Sie dieser Session bei und bilden Sie sich Ihre Meinung - eventuell lernen Sie die Basis Ihrer neuen Business-Software hier kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-in-action-event-gesteuerte-microservices-am-beispiel-azure",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 7
    },
    {
      "id": 78,
      "type": "Talk",
      "title": "WebAssembly & ASP.NET Blazor: .NET auf dem Weg, den Browser zu erobern?",
      "date": "2018-12-12 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/it-tage-2018-webassembly-and-blazor-2018-12-13",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 43
    },
    {
      "id": 83,
      "type": "Workshop",
      "title": "Azure in Action: Pragmatische Cloud-Lösungen mit Containern & Serverless",
      "date": "2018-12-04 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "IDE öffnen, „File – New Project – Cloud“, OK klicken und fertig. Oder? Nun, nicht ganz. Denn egal ob AWS, GCP oder eben Azure: am Ende des Tages werden Sie sich fragen, warum, wann und wie gehe ich in die Cloud? Genau diese Fragestellungen wollen Thorsten Hans und Christian Weyer für Java-, node.js- und .NET-Entwickler in diesem Workshop beantworten. Anhand diverser Use Cases werden mögliche Wege mit, über und in Azure diskutiert. Was bedeuten Architekturansätze wie Cloud-Native Microservices und Serverless Microservices? Wie gehe ich bei Brownfield-Projekten vor und wie kann ich Greenfield-Lösungen effizient in Azure realisieren? Wo liegen Unterschiede und Benefits von datengetriebenen und von ereignisgetriebenen Ansätzen? Wie kann ich mit dem Sammelsurium an Patterns, Technologien und Tools in Azure kosteneffektiv hantieren und dennoch flexibel sein? All dies werden wir anhand praktischer Beispiele und pragmatischer Lösungen in interaktiver Art und Weise adressieren. Sehen Sie PaaS, Web Apps, Containers, Orchestrators, Serverless, Functions & Co. mit der Azure-Cloud anhand von .NET-Demos in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/azure-in-action-pragmatische-cloud-losungen-mit-containern-and-serverless",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/aks-demo-app",
          "label": "Containers"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": "Serverless"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "AKS",
        "Azure",
        "Azure Functions",
        "Containers",
        "Kubernetes",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 59
    },
    {
      "id": 84,
      "type": "Talk",
      "title": "Auf ins Blaue: Azure Cloud Services für Java-Entwickler – ein persönlicher Überblick",
      "date": "2018-11-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ein Blick über den Tellerrand kann ja nicht schaden: was hat Microsofts Azure Cloud für Java-Entwickler und -Architekten zu bieten? Freilich ist die blaue Wolke ähnlich mächtig, breit an Services und tief an Features wie die Marktbegleiter AWS oder GPC. In dieser Session möchte daher Christian Weyer – der seit 2008 mit Azure arbeitet – einen nicht ganz unvoreingenommenen Überblick über die zentralen Services geben, die für Java-, .NET- aber auch andere Entwickler zur Verfügung stehen. Angefangen bei Container-as-a-Services mit Docker- und Kubernetes als Basis, über klassische Platform-as-a-Service-Angebote für Web Applications, Datenbanken oder Messaging, bis hin zu ultracoolen Serverless-Architekturen – illustriert mit praktischen Beispielen. Und dies von jemandem, der so gut wie keine Ahnung von Java hat.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/auf-ins-blaue-azure-cloud-services-fur-java-entwickler-ein-personlicher-uberblick",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure Functions",
        "Serverless",
        "Azure",
        "Java"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 60
    },
    {
      "id": 85,
      "type": "Talk",
      "title": "eXtreme Serverless Azure: Data, Compute, Realtime - in Action!",
      "date": "2018-10-12 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Whaaat? No servers? Well, yes. Serverless is all the hype these days. Let's try to sort out some of the real strengths of Serverless and see where Serverless & PaaS build a set of highly productive weapons in your Cloud arsenal. Join Christian Weyer from Thinktecture while he discusses Azure Functions, Storage, CosmosDB and SignalR Service in a holistic scenario - all by building an end-to-end solution that should 'just work' by the end of this session: creating a scalable real-time application in almost no time - really? Aaand action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/extreme-serverless-azure-data-compute-realtime-in-action-c24f4632-02c5-4183-9871-8fb829839d41",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/extreme-serverless-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Azure Functions",
        "Java",
        "JavaScript",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 61
    },
    {
      "id": 86,
      "type": "Talk",
      "title": "WebAssembly & PWA: Single Page Applications (SPAs) ohne JavaScript?",
      "date": "2018-10-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ohoh: JavaScript auf einer JavaScript-Konferenz in Frage zu stellen! Lassen Sie uns über das Web als Plattform reden und darüber wie wir JavaScript-basierte Browser-Anwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browser-Plattformen haben die Art und Weise verändert, wie wir Anwendungen, bspw. Line-of-Business Applications, erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung - eine großartige Basis für moderne Anwendungen gemäß der Idee von Progressive Web Apps (PWA). Mit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard haben wir so allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Session wird Christian Weyer über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C ++ - oder gar Java bzw. C # / .NET-Code im Browser ohne Plug-in nutzen können - und so die optimale Performance aus ihrer \"App\" holen können. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche neuen Möglichkeiten WebAssembly unserer geliebten Plattform verleihen kann. Spüren Sie das mögliche Potenzial Ihrer nächsten (Geschäfts-)Anwendung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-pwa-single-page-applications-spas-ohne-javascript",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angulardays-2018-herbst-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 62
    },
    {
      "id": 87,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps: Rethinking modern application development",
      "date": "2018-10-03 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Choose your programming language of choice for building fast, ubiquitously cross-platform, future-proof modern applications: dang - your dream will finally come true! Really...? Let's see. Undoubtedly, everybody needs to build business applications, somehow. The web and the browser platforms have changed the way we can build LOB applications and these platforms have evolved considerably in the past 5 years. More and more native features are available to SPAs (single page applications) running in the browser - a great base for modern applications as so-called Progressive Web Apps (PWA). Now, with the rise of WebAssembly (WASM) as a standard and the improving maturity of PWAs we have powerful tools in our hand to build the next generation of web-based applications. In this session Christian Weyer will talk about the features & possibilities of Progressive Web Apps as app-like appearance, installability or offline operations, paired with the power of WebAssembly as a bytecode for all major modern browsers. See how to use PWAs to build native-like applications on the browser platforms and experience the strength of WASM to run C, C++ or C#/.NET code in the browser, without any plugin. This can be a disruptive approach for both greenfield and brownfield projects. Lean back and watch how the web is evolving into a new stage of capabilities and feel the potential of your next (business) application. Let’s do it!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-rethinking-modern-application-development-7686e386-c777-43f0-8cdd-f41019e8525b",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-nl-2018-wasm-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "PWA",
        "Blazor",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 63
    },
    {
      "id": 75,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-basierte Microservices mit Azure Functions & Co",
      "date": "2018-09-25 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm… Ja, in der Tat. Der Serverless-Ansatz verspricht eine niedrige Hürde, um den Einstieg in Microservices zu finden. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand praktischer Anwendungsfälle. Auf Basis erprobter Designpatterns können Sie mit Azure Functions, Azure Service Bus und Co. in kurzer Zeit sowohl einfache als auch komplexe Services-Anwendungen designen und implementieren – lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Kommen Sie vorbei – eventuell lernen Sie die Basis für Ihr neues Businesssoftware-Backend kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-basierte-microservices-mit-azure-functions-and-co",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=5VIDcSbTgYI",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Azure Functions",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 88,
      "type": "Talk",
      "title": "Pragmatische Microservices-Architekturen mit ASP.NET Core & Co.",
      "date": "2018-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Schlagwort Microservices ist in aller Munde. Angetrieben durch die zahlreichen Nachteile einer monolithischen Architektur wollen Microservices und damit verbundene Design-Patterns und -Ideen das scheinbare Allheilmittel sein. In diesem Vortrag klärt Christian Weyer über den Mythos Microservices auf. Was sind sie, was sind sie nicht, wann setzt man sie ein – und vor allem: Wie baut und betreibt man Microservices in der .NET/.NET-Core-Welt? Sehen Sie Architekturansätze in Aktion und erleben Sie Technologien wie Service Discovery, Web API, SignalR, Message Queuing und Azure im praktischen Einsatz. Versuchen wir also gemeinsam, langweilige Architekturthemen spannend zu machen: auf pragmatische Weise!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-architekturen-mit-asp-dot-net-core-and-co",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 79,
      "type": "Talk",
      "title": "WebAssembly und Blazor - Wie .NET jetzt auch den Browser erobert?",
      "date": "2018-09-24 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET hat höchstens noch auf dem Server eine Zukunft? Diese Aussage stimmt im modernen Web mittlerweile nicht mehr ganz: Seit der Verfügbarkeit von WebAssembly, einem Bytecode fürs Web, können nun auch etwa in C# geschriebene Programme im Browser ausgeführt werden. Das ist mitunter eine interessante Migrationsstrategie, um .NET-Berechnungskerne ins Web zu portieren und mit Single-Page Applications (SPA), zum Beispiel auf Basis von Angular, zu paaren. Mit dem Projekt Blazor vom ASP.NET-Team experimentiert Microsoft zudem mit einem eigenen SPA-Framework mitsamt Tooling, das jedoch nicht auf HTML und JavaScript, sondern auf der Templating-Sprache Razor sowie C# und .NET Core basiert. Sebastian Gingter und Christian Liebel zeigen Ihnen beide Ansätze und geben eine Einschätzung, wo Blazor eine valide Option für die Erstellung von webbasierten UIs sein kann. Klar ist: Was im Web läuft, das kann auf nahezu allen Plattformen ausgeführt werden. Und auch der Verteilung Ihrer Anwendung als Progressive Web App mit vielen nativen Features steht nichts im Wege.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/webassembly-und-blazor-wie-net-jetzt-auch-den-browser-erobert",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=z3x1u-cuED8",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        3
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 92,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps - Next Generation Apps",
      "date": "2018-09-09 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Gesetzt den Fall, Sie halten Cross-Plattform SPAs (Single Page Applications) für eine gute Idee, könnte diese Night Session in der Tat interessant für Sie werden. Lassen Sie uns über das Web als Plattform reden und darüber, wie wir JavaScript-basierte Browseranwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browserplattformen haben die Art und Weise verändert, wie wir Anwendungen erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung – eine großartige Basis für moderne Applikationen gemäß der Idee von Progressive Web Apps (PWA). Zudem haben wir mit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Night Session wird Christian Weyer sowohl über PWAs als auch über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C++, Java oder C#/.NET-Code im Browser ohne Plug-in nutzen können – sei es aus Performance- oder Wiederverwendungsgründen. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche Möglichkeiten PWAs und WebAssembly dem Web verleihen könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-next-generation-apps",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/software-architecture-summit-2018-pwa-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "PWA",
        "Web Technologies",
        "WebAssembly"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 66
    },
    {
      "id": 129,
      "type": "Talk",
      "title": "Legacy-Anwendungen ver-Service-fizieren mit ASP.NET Core",
      "date": "2018-09-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wer kennt sie nicht: Zehn bis 20-Jährige native Anwendungen weisen nicht selten bekannte Schwierigkeiten auf. Sie sind groß, monolitisch, komplex, launenhaft, laufen nur auf einem bestimmten Betriebssystem mit einem ganz bestimmten Patch Level, es gibt genau einen Entwickler, der diese versteht und jede einzelne von denen ist eine State Machine.\nAus den genannten Gründen und um die Marktanteile zu erweitern ist es kein Wunder, dass die Hersteller ihre Anwendung am liebsten hinter einer Web-API verstecken möchten, welche über eine stabile, performante und vergleichsweise einfache API konsumiert werden kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/legacy-anwendungen-ver-service-fizieren-mit-asp-dot-net-core",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pawelgerr/Talks-LegacyApplications",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        "Architecture",
        "ASP.NET Core",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 83
    },
    {
      "id": 89,
      "type": "Talk",
      "title": "WebAssembly: Dem JavaScript sein Tod!?",
      "date": "2018-06-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blasphemie: JavaScript auf einer JavaScript-Konferenz in Frage zu stellen!\nLassen Sie uns über das Web als Plattform reden und darüber, wie wir JavaScript-basierte Browseranwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browserplattformen haben die Art und Weise verändert, wie wir Anwendungen, beispielsweise Line-of-Business Applications, erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung - eine großartige Basis für moderne Anwendungen gemäß der Idee von Progressive Web Apps (PWA).\nMit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard haben wir so allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Session werden Christian Weyer und Sebastian Gingter über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C++, oder gar Java beziehungsweise C#/.NET-Code im Browser ohne Plug-in nutzen können – und so die optimale Performance aus ihrer \"App\" holen können. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche neuen Möglichkeiten WebAssembly unserer geliebten Plattform verleihen kann. Spüren Sie das Potenzial Ihrer nächsten (Geschäfts-)Anwendung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-dem-javascript-sein-tod",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/enterjs-2018-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Technologies",
        "JavaScript",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 64
    },
    {
      "id": 77,
      "type": "Workshop",
      "title": "Moderne APIs mit ASP.NET Core MVC und SignalR – End-to-End",
      "date": "2018-06-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne APIs bieten neben der gängigen HTTPS-Interaktion auch die Möglichkeit zur Echtzeitkommunikation auf Basis von WebSockets. Mit Hilfe von Microsofts Open-Source-Plattform ASP.NET Core MVC und SignalR lassen sich im Handumdrehen Web-APIs und Push-Services entwickeln. Doch damit nicht genug: Weitere Themen wie Security, Rate-Limiting, eine sinnvolle Dokumentation und ein vernünftiges zentralisiertes Logging sind mit von der Partie. Und jeder dieser einzelnen Bereiche bietet uns eine neue Herausforderung. Sebastian Gingter und Manuel Rauber zeigen Ihnen in diesem Workshop, wie man mit .NET Core moderne APIs auf und für verschiedene Plattformen entwickeln kann. Zusätzlich wird durch den Einsatz von Entity Framework Core die Anbindung an verschiedene Datenbanken ermöglicht. Durch den Einsatz weiterer Open-Source-Bibliotheken fürs Logging oder zur automatischen Generierung einer Swagger/OpenAPI-Dokumentation ergänzen wir die API um weitere Funktionalitäten. Eine Client-Anwendung, das Deployment auf unterschiedliche Plattformen und das Deployment in die Cloud runden den Workshop ab – vollständig End-to-End eben!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/einmal-api-mit-allem-bitte-asp-dot-net-core-mvc-und-signalr-in-action-164d1e3e-189b-4b6a-95a3-33003e3f3f05",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-ms-summit-spring-2018-services-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        1
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 42
    },
    {
      "id": 91,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps: Rethinking modern application development",
      "date": "2018-05-23 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Choose your programming language of choice for building fast, ubiquitously cross-platform, future-proof modern applications: dang - your dream will finally come true! Really...? Let's see. Undoubtedly, everybody needs to build business applications, somehow. The web and the browser platforms have changed the way we can build LOB applications and these platforms have evolved considerably in the past 5 years. More and more native features are available to SPAs (single page applications) running in the browser - a great base for modern applications as so called Progressive Web Apps (PWA). Now, with the rise of WebAssembly (WASM) as a standard and the improving maturity of PWAs we have powerful tools in our hand to build the next generation of web-based applications. In this session Christian Weyer will talk about the features & possibilities of Progressive Web Apps as app-like appearance, installability or offline operations, paired with the power of WebAssembly as a bytecode for all major modern browsers. See how to use PWAs to build native-like applications on the browser platforms and experience the strength of WASM to run C, C++ or C#/.NET code in the browser, without any plugin. This can be a disruptive approach for both greenfield and brownfield projects. Lean back and watch how the web is evolving into a new stage of capabilities and feel the potential of your next (business) application. Let’s do it!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-rethinking-modern-application-development",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-2018-wasm-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "PWA",
        "Web Technologies",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 65
    },
    {
      "id": 90,
      "type": "Workshop",
      "title": "Modern Cross-Platform Business Applications with Angular, Cordova, Electron, PWA & Serverless Backends",
      "date": "2018-05-21 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Modern business applications are facing entirely different challenges today. End-users are used to just leverage their mobile phone, tablets, laptops and (maybe) desktop computers. Applications, data and processes just need to work, just need to “be there” – regardless of the application hosting and provisioning model. Developers should realize these ever-changing challenges and should address possible approaches for ubiquitous solutions. In this full-day workshop, Thorsten and Christian from Thinktecture show you a way how to design, architect, implement and run modern business applications – end-to-end. Come and see how to provide lightweight APIs into your business processes via Serverless technolgoies and architectures in Azure. Feel the power of real-cross platform HTML5 SPAs – e.g. based on Angular – to offer a use-case-optimized user experience across all platforms on any devices and runtimes. Let’s start with Angular web applications for the browser and augment them to have native functionalities on the mobile platforms with Apache Cordova and on desktop operating systems with GitHub Electron. Last but not least, join us for a sneak preview into a hopefully not too disitant future: Progressive Web Apps (PWA) could be the ever-lasting ultimate app model for everybody. Apps without the need to install, just running inside the browser engines with power to interact natively. Sounds too good? Let’s see – all this in action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/modern-cross-platform-business-applications-with-angular-cordova-electron-pwa-and-serverless-backends",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-2018-mba-ws",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Azure Functions",
        "Cordova",
        "Electron",
        "PWA",
        "Serverless",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 65
    },
    {
      "id": 128,
      "type": "Talk",
      "title": "Legacy-Anwendungen ver-Service-fizieren mit ASP.NET Core",
      "date": "2018-04-27 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wer kennt sie nicht: Zehn bis 20-Jährige native Anwendungen weisen nicht selten bekannte Schwierigkeiten auf. Sie sind groß, monolitisch, komplex, launenhaft, laufen nur auf einem bestimmten Betriebssystem mit einem ganz bestimmten Patch Level, es gibt genau einen Entwickler, der diese versteht und jede einzelne von denen ist eine State Machine.\nAus den genannten Gründen und um die Marktanteile zu erweitern ist es kein Wunder, dass die Hersteller ihre Anwendung am liebsten hinter einer Web-API verstecken möchten, welche über eine stabile, performante und vergleichsweise einfache API konsumiert werden kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/legacy-anwendungen-ver-service-fizieren-mit-asp-dot-net-core",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pawelgerr/Talks-LegacyApplications",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        "Architecture",
        "ASP.NET Core",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 81
    },
    {
      "id": 124,
      "type": "Talk",
      "title": "Event-based Microservices with Azure Functions, EventGrid & Co.",
      "date": "2018-04-21 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Whaaat? No servers? Well, yes. The Serverless approach for building microservices promises to offer a low entry barrier - for both getting starting and for fulfilling a target. In this session Christian & Boris will show you end-to-end Serverless with Azure & .NET Core by means of a realistic application scenario from customer projects.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architectures-event-based-microservices-with-azure-functions-eventgrid-and-co",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/globalazurebootcamp-2018-serverless",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6,
        14
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Azure Functions"
      ],
      "primaryTag": "Azure Functions",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 79
    },
    {
      "id": 231,
      "type": "Webinar",
      "title": "RxJS von Grund auf - Teil 2: Operatoren und Operatorenketten",
      "date": "2021-06-15 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im ersten Teil haben wir uns die grundlegenden Konzepte hinter RxJS näher angesehen. Dabei kam ein Blick hinter die Kulissen von Operatoren und Operatorketten zu kurz. In diesem Teil möchten wir besonderen Fokus auf diese Aspekte legen und den Vorhang lüften. Dazu werden wir uns nicht nur bestehende Operatoren ansehen, sondern uns mit der Erstellung eigener Operatoren auseinander setzen.\n\n* Kurzes Recap des ersten Webinar\n* Operatoren selbstgemacht\n* Verhalten in Operatorketten\n* Operatoren parametrisieren\n* Existierende Operatoren wiederverwenden",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-teil-2-operatoren-und-operatorenketten",
          "label": "Speakerdeck (Slides)"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-02-rxjs-operators",
          "label": "GitHub (Code)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 153
    },
    {
      "id": 204,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2021-06-07 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered-862e424d-643b-4b18-8673-631c9375ed7e",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 126
    },
    {
      "id": 230,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Einführung in reaktives JavaScript",
      "date": "2021-06-01 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": "GitHub (Code Sample)"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-einfuhrung-in-reaktives-javascript",
          "label": "SpeakerDeck (Slides)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 153
    },
    {
      "id": 229,
      "type": "Webinar",
      "title": "Keycloak fuer .NET Entwickler",
      "date": "2021-05-25 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Authentication oder Authorization, Multi-Tenancy oder aber für einfache Anwendungen: Keycloak ist ein Open Source Identity and Access Management System mit dem Ihre Anwendungen Authentifizierung und Autorisierung auslagern können. Obwohl es ein Java-basierendes Produkt ist, lässt es sich dank offener Standards wie OAuth, OpenID Connect (OIDC) oder natürlich HTTP auch in ASP.NET-Core-Anwendungen integrieren.\n\nIn diesem Webinar zeigte Boris Wilhelms , wie Sie Keycloak in Ihre ASP.NET-Core-Lösungen integrieren können und wie sich Keycloak von IdentityServer oder Azure Active Directory B2C unterscheidet.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/keycloak-fuer-net-entwickler-9bbba251-7cc3-4e25-8561-b1a7f63ba979",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-keycloak",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        "Keycloak"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 152
    },
    {
      "id": 228,
      "type": "Webinar",
      "title": "Web-API mit Turbo: Deep-dive in async/await für Backend-APIs",
      "date": "2021-05-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Asynchrone Programmierung wird immer häufiger als der Heilsbringer in Sachen Performance angepriesen. Doch stimmt das auch? Die Antwort ist ein ganz klares Jaein. Was bedeutet asynchrone Programmierung überhaupt, wie unterscheidet sie sich von Multithreading und was muss ich wirklich wissen, damit die Verwendung von async/await einen spürbaren Einfluss auf die Geschwindigkeit meiner ASP.NET Core Web API zeigt? Diese Fragen und einige mehr wird Ihnen der .NET- und Backend-Experte Sebastian Gingter in diesem Webinar beantworten und darüber hinaus auf Best Practices sowie einige Tipps & Tricks eingehen. Nach diesem Talk haben Sie das notwendige Handwerkszeug beisammen, um ihre Web APIs an den richtigen Stellen durch asynchrone Operationen zu optimieren.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-2021-05-async",
          "label": "Demos auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/await-in-net",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "async",
        ".NET"
      ],
      "primaryTag": ".NET",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 151
    },
    {
      "id": 226,
      "type": "Webinar",
      "title": "Electron, Capacitor, PWA - was, wann, wie & warum?",
      "date": "2021-05-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org",
          "label": "Paint-PWA"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-capacitor-pwa-was-wann-wie-and-warum",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Capacitor",
        "Cordova",
        "Electron",
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 150
    },
    {
      "id": 224,
      "type": "Webinar",
      "title": "Azure Arc enabled Kubernetes: Hybrid and Multi-Cloud",
      "date": "2021-04-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Finally, one to rule them all: Azure Arc enabled Kubernetes allows you to manage and monitor Kubernetes clusters from different sources. Let Azure Arc act as a cockpit for all your Kubernetes clusters, no matter if they are running in AWS, Google Compute Cloud, Digital Ocean, or even a private data center.\nJoin this webinar with Thorsten Hans to understand the capabilities and see what can be achieved with Azure Arc enabled Kubernetes. With an example, you will dive into the topic and see how to use key features such as onboarding, inventory, monitoring, and Azure Policy powered governance to tame all your clusters.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-arc-enabled-kubernetes-hybrid-and-multi-cloud",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/arc-enabled-k8s-webinar-april-2021",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Kubernetes"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 148
    },
    {
      "id": 223,
      "type": "Webinar",
      "title": "Web Components: Bessere (SPA-)Architektur mit Smart- und Presentational-Components-Pattern",
      "date": "2021-04-27 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components: ein Begriff, gar (ehemaliger?) Hype, den wir in der Webentwicklung seit einiger Zeit lesen und immer wieder darüber stolpern. Custom Elements, Shadow DOM und HTML Templates ergeben ein natives Komponentenmodell für unseren Browser. Komponenten, wiederverwendbare SPA-Framework-unabhängige UI-Bausteine, die wir in jeder und für jede App nutzen könnten.\n\nDoch noch immer werden Komponenten frameworkabhängig bspw. in Angular, React oder Vue.js entwickelt. Liegt das daran, dass unserer Anwendungsarchitektur noch ein wichtiges Pattern fehlt, um SPA-Components mit Web Components sinnvoll zu kombinieren? Mit dem Pattern der Smart und Presentational Components erreichen wir eine klare Trennung zwischen State Management (Smart) und reinem User Interface und seiner Interaktion (Presentational). Was genau es damit auf sich hat und wie dies mit Web Components realisiert werden kann, zeigt Manuel Rauber im Live-Coding mit Vor- und Nachteilen anhand einer Real-World-Demo-Applikation.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-bessere-spa-architektur-mit-smart-und-presentational-components-pattern",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-smart-and-presentation-components",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 147
    },
    {
      "id": 222,
      "type": "Talk",
      "title": "Produktivitäts-PWAs auf Desktop-Niveau mit Project Fugu",
      "date": "2021-04-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Beitragenden Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. Damit können Entwickler endlich auch Produktivitäts-Apps wie Büro- und Bearbeitungsprogramme oder IDEs sinnvoll ins Web bringen. In diesem Vortrag zeigt Ihnen Christian Liebel, wie Sie Produktivitäts-PWAs auf Desktopniveau entwickeln können – Zugriff auf das Dateisystem, die Zwischenablage sowie Dateizuordnungen inklusive.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/produktivitats-pwas-auf-desktop-niveau-mit-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 146
    },
    {
      "id": 219,
      "type": "Workshop",
      "title": "JavaScript Fullstack Day: Project Fugu",
      "date": "2021-04-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Presented as a part of the full-stack day of International JavaScript Conference 2021 London, Online Edition.\n\nProgressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/javascript-fullstack-day-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": true,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 143
    },
    {
      "id": 140,
      "type": "Webinar",
      "title": "Web-Apps mit Ionic: Auf Schienen schneller ans Ziel?",
      "date": "2021-04-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen können mitunter komplex werden. Täglich gibt es neue Anforderungen und am besten soll die App noch Cross-Plattform verfügbar sein. Und natürlich darf die Entwicklung nicht zu lange dauern. Ionic versucht als Opinionated-Framework dieses Problem zu adressieren.\nIn diesem Webinar zeigt Max Schulte, was mit Ionic als SPA-Framework möglich ist und wie es dank seiner Tools, \"Production Ready\"-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-ionic-leitplanken-demo",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net",
          "label": "Live Demo (Azure)"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/web-apps-mit-ionic-auf-schienen-schneller-ans-ziel-3ed7786e-0011-4d07-a42b-acb0e5fcaa9b",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Mobile",
        "Cordova",
        "Capacitor",
        "Web Technologies",
        "Web Components",
        "Webinar",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 144
    },
    {
      "id": 218,
      "type": "Talk",
      "title": "Implementing Productivity Apps With Angular And Fugu APIs",
      "date": "2021-04-20 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have worked since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included! This allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web. Thinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis-869dec24-e8f7-4821-b15b-c063cba32760",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-2021-ldn-angular-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 143
    },
    {
      "id": 225,
      "type": "Talk",
      "title": "Infrastructure as Code for Azure with Terraform",
      "date": "2021-04-16 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Modern and distributed application architectures often require a large set of services and systems with a rather complex configuration to work as expected. You and your team can create and manage such infrastructures professionally by adopting Infrastructure as Code (IaC) and relying on Terraform. In this talk, Azure MVP Thorsten Hans demonstrates how to create reliable and predictable Azure infrastructures with Terraform. You will learn how to structure your project, create and mutate your services and manage multiple environments in no time.",
      "media": [
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=6e3aI5WAg5M",
          "label": "Recording"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/globalazure-2021-terraform",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform",
        "Azure"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 149
    },
    {
      "id": 216,
      "type": "Webinar",
      "title": "Blazor WebAssembly - Forms in Action",
      "date": "2021-04-14 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ein Großteil an Softwarelösungen hantiert mit Daten. Formulare sind hier kaum wegzudenken und ein zentraler Bestandteil. Sei es das Anmelden über eine Login-Maske oder das Buchen von Konzertkarten, überall sind Sie zu finden.\n\nIn dieser Session zeigt Patrick Jahr anhand eines Beispiels wie Formulare mit Blazor WebAssembly in .NET 5 implementiert werden können. Jedoch ist der Aufbau eines Formulars nicht alles: wird ein Nutzer nicht richtig über fehlerhafte Eingaben informiert, oder muss zu lange warten, bis das Formular neue Daten geladen hat, verliert er direkt die Lust oder das Vertauen in die Anwendung. Daher wird in dieser Session auch ein großes Augenmerk auf die Validierung von Formularen gelegt. Schlussendlich ist noch die Diskussion von Performance-beeinträchtigenden Fakten in komplexeren Szenarien ein wichtiges Thema in diesem Webinar.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/blazor-webassembly-forms-in-action",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-blazor-forms",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        ".NET",
        "Blazor",
        "WebAssembly",
        "Blazor WebAssembly"
      ],
      "primaryTag": "Blazor WebAssembly",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 142
    },
    {
      "id": 213,
      "type": "Webinar",
      "title": "Sichere und robuste Docker Images für .NET",
      "date": "2021-03-30 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Anwendungen in Containern zu betreiben gehört nicht nur zum guten Ton. Bereits seit Jahren befinden sich Technologien wie Kubernetes und Docker auf einem Siegeszug der seines gleichen sucht. Doch bereits beim Erstellen von Docker Images gilt es auf viele kleine Dinge zu achten um Anwendungen auf lange Sicht professionell in Containern zu betreiben.\n\nIn diesem Webinar zeigt Azure MVP Thorsten Hans, wie auch Sie sichere und robuste Docker Images erstellen. Sämtliche Demos und Beispiele werden in diesem Webinar anhand einer .NET-WebAPI erläutert.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-docker-march-2021",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/sichere-und-robuste-docker-images-fur-net",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Docker"
      ],
      "primaryTag": "Docker",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 141
    },
    {
      "id": 211,
      "type": "Half Day Workshop",
      "title": "Angular meets Project Fugu: Produktivitäts-PWAs auf Desktopniveau (Hands-on)",
      "date": "2021-03-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Contributors Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. Damit können Entwickler endlich auch Produktivitäts-Apps wie Büro- und Bearbeitungsprogramme oder IDEs sinnvoll ins Web bringen. In diesem Workshop zeigt Ihnen Christian Liebel von Thinktecture, wie Sie mit Angular Produktivitätsapps auf Desktopniveau entwickeln können – Zugriff auf das Dateisystem und die Zwischenablage sowie Dateizuordnungen inklusive. Und Sie können mitentwickeln: Bitte bringen Sie dazu Ihr Notebook (ohne Corporate-Proxys/Unternehmensrichtlinien) mit installiertem Google Chrome Canary, Node.js und Microsoft Visual Studio Code mit.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-meets-project-fugu-produktivitats-pwas-auf-desktopniveau-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-spring-2021-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 214,
      "type": "Workshop",
      "title": "Rock Solid, yet flexible Single Page Applications professionell mit Kubernetes betreiben",
      "date": "2021-03-23 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Kubernetes – das Cloud-Betriebssystem dieser Dekade – bietet auch für den Betrieb von Single Page Applications (SPAs) eine hohe Flexibilität und Individualisierbarkeit. In diesem Halbtages-Workshop zeigt Thorsten Hans, wie Sie Ihre SPA in Docker Images verpacken, und in Kubernetes betreiben können. Lernen Sie essenzielle Konzepte und Techniken für das Hosting von SPAs anhand einer exemplarischen Angular-Anwendung kennen. Hierbei werden wir iterativ vom Standardbetrieb, bis hin zur Abbildung einer professionellen Multi-Tenant-Umgebung mit Canary-Deployments vorgehen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/rock-solid-yet-flexible-single-page-applications-professionell-mit-kubernetes-betreiben",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-2021-kubernetes",
          "label": "Sample Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Docker",
        "Kubernetes"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 210,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Platform Realtime Push - 3",
      "date": "2021-03-23 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-core-signalr-cross-platform-realtime-push-3",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        "SignalR",
        "ASP.NET Core",
        ".NET Core",
        "JavaScript",
        "Angular",
        "Capacitor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 137
    },
    {
      "id": 212,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps – Hands on!",
      "date": "2021-03-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und im Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mit Hilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigt Ihnen Christian Liebel die Grundlagen der PWA-Entwicklung. Und Sie können aktiv mitentwickeln!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-spring-2021-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 209,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Stream-basierte Denkweise - am konkreten Beispiel",
      "date": "2021-03-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "RxJS unterstützt bei der Bewältigung asynchroner Probleme verschiedener Art, nicht nur bei AJAX-Requests. Allerdings erfordert das Stream-basierte Paradigma ein Umdenken für den Entwickler.\n\nNachdem wir uns im ersten Teil intensiv mit den Grundbausteinen von RxJS beschäftigt haben und dann im zweiten Teil sehr intensiv auf Operatoren und Operatorenketten eingegangen sind, nehmen wir uns in diesem Webinar einen Anwendungsfall aus der Realität vor. An einem konkreten Beispiel leiten wir eine Lösung ohne den Einsatz von RxJS her und stellen dieser eine elegante Lösung gegenüber, die sich den passenden Operatoren bedient.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-stream-basierte-denkweise-am-konkreten",
          "label": "Slides (Speakerdeck)"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-03-rxjs-scrolling",
          "label": "Source (GitHub)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular",
        "RxJS",
        "Angular, RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 136
    },
    {
      "id": 208,
      "type": "Webinar",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2021-03-11 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "What doesn't load in two seconds will never be accessed again: User expectations for web application performance are steadily increasing. After a web application loads, it needs to feel fast and fluid in order for the user to achieve their goal. In our Thinktecture webinar, Christian Liebel will show you Angular’s most important optimization options (Zone.js, Change Detection and Service Workers), so that you can ignite the turbo for your Angular app!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-2e112a94-b9dc-42dc-b166-e46dcb641ac7",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 135
    },
    {
      "id": 207,
      "type": "Webinar",
      "title": "Always up to date: API-Versionierung in .NET 5",
      "date": "2021-03-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit, und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, so haben wir bei APIs das Problem, dass ältere Clientanwendungen mit dem neuen Verhalten nicht mehr zurecht kommen und dann auch nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unserer API.\n\nIn diesem Webinar zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen wann überhaupt eine neue Version benötigt wird, welche Methoden es gibt eine ASP.NET-Core-Web-API zu versionieren und welche verschiedenen Herangehensweisen im Code möglich sind, unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-versioning-webinar-march-2021",
          "label": "Code-Beispiele auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/thinktecture-webinar-api-versionierung-in-net-5",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Versioning",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 134
    },
    {
      "id": 206,
      "type": "Webinar",
      "title": "Storybook: Best Practices mit Angular",
      "date": "2021-03-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Storybook ist ein hervorragendes Tool zur Erstellung von UI-Komponentenkatalogen. Steuerelemente können hier isoliert betrachtet, ausprobiert und dokumentiert werden – eine perfekte Schnittstelle zwischen Designern, Entwicklern und weiteren Projektbeteiligten. Christian Liebel stellt Ihnen in diesem Webinar ein Vorgehensmodell vor, das auf unseren Erfahrungen aus vielen Kundenprojekten mit Angular basiert. Auf einen Streich entsteht damit nicht nur eine erstklassige Komponentenbibliothek, sondern zugleich eine besonders modulare Codebasis – die zugleich Synergieeffekte für Unit Tests und Mocking mit sich bringt.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/storybook-best-practices-mit-angular",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 128
    },
    {
      "id": 205,
      "type": "Webinar",
      "title": "Keycloak fuer .NET Entwickler",
      "date": "2021-02-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Authentication oder Authorization, Multi-Tenancy oder aber für einfache Anwendungen: Keycloak ist ein Open Source Identity and Access Management System mit dem Ihre Anwendungen Authentifizierung und Autorisierung auslagern können. Obwohl es ein Java-basierendes Produkt ist, lässt es sich dank offener Standards wie OAuth, OpenID Connect (OIDC) oder natürlich HTTP auch in ASP.NET-Core-Anwendungen integrieren.\nIn diesem Webinar zeigt Ihnen Boris Wilhelms wie Sie Keycloak in Ihre ASP.NET-Core-Lösungen integrieren können und wie sich Keycloak von IdentityServer oder Azure Active Directory B2C unterscheidet.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/keycloak-fuer-net-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-keycloak",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "ASP.NET Core",
        "IAM",
        "Keycloak"
      ],
      "primaryTag": "Keycloak",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 127
    },
    {
      "id": 203,
      "type": "Workshop",
      "title": "Progressive Web Apps und Project Fugu: Das nächste Level für Cross-Platform-Apps",
      "date": "2021-02-18 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) ermöglichen es Ihnen, Businessanwendungen für den Browser zu entwickeln, die sich zugleich wie native Anwendungen anfühlen und dabei sogar offline-fähig sind. Dank Project Fugu stehen diese PWAs ihren nativen Gegenstücken in nichts nach! Erfahren Sie in diesem Workshop, wie Sie erfolgreich ihre eigenen PWAs entwickeln!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-und-project-fugu-das-nachste-level-fur-cross-platform-apps?slide=7",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-pwa-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 199,
      "type": "Talk",
      "title": "Advanced Blazor Server: Tiefen und Untiefen meistern",
      "date": "2021-02-18 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor Server ist anders. Es hat gegenüber Blazor WebAssembly ein anderes Verhalten zur Laufzeit. Dabei spielen vor allem Razor Pages eine Rolle, die Dependency Injection funktioniert leicht anders als gewohnt und auch das Zustandsmanagement ist eine Sache für sich. Trauen Sie sich in die tiefsten Tiefen des Blazor-Server-Kaninchenbaus! ASP.NET-Core- und Backend-Experte Sebastian Gingter nimmt Sie an die Hand und zeigt Ihnen diese und noch weitere Spezialitäten von Blazor Server und wie man damit erfolgreich umgeht.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-blazor-server",
          "label": "Repo auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-spring-2021-blazor-server",
          "label": "Folien bei Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "ASP.NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 200,
      "type": "Webinar",
      "title": "RxJS from the group up - Introduction to reactive JavaScript",
      "date": "2021-02-18 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "RxJS is a very powerful tool and has been established in Angular as its central way of communication between Components and Services.\n\nIf you are not quite comfortable yet to use RxJS in all of its glory, then this Webinar is for you. Yannick is going to show you the basic concepts and ideas behind all of RxJS's moving parts, to make sure you can wield this powerful tool more confidently.\n\nAgenda:\n- Why streams?\n- Asynchronicity and the observer pattern\n- Working with RxJS\n- Unsubscribing and completion\n- Resources to help yourself",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-from-the-ground-up-introduction-to-reactive-javascript",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": "Code Sample (GitHub)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 124
    },
    {
      "id": 202,
      "type": "Talk",
      "title": "Implementing Productivity Apps with Angular and Fugu APIs",
      "date": "2021-02-17 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have been working since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included!\nThis allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web.\nThinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis-cec204b8-f3b4-4dea-a468-a56a0a7b3aea",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 125
    },
    {
      "id": 215,
      "type": "Talk",
      "title": "Kubernetes für .NET Anwendungsentwickler",
      "date": "2021-02-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie möchten Ihre .NET-Core-Anwendung in Kubernetes betreiben und lernen, wie Sie das Potential des Containerorchestrators nutzen können? Dann besuchen Sie diesen Talk von Kubernetes- und Cloud-Native-Experte Thorsten Hans. Sie werden nicht nur den praktischen Umgang mit Kubernetes aus Sicht des Entwicklers lernen, sondern auch, wie Sie Patterns und Praktiken nutzen, um Ihre .NET-Core-Anwendungen optimal in Containern zu betreiben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-fur-net-anwendungsentwickler",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-kubernetes-for-net-devs",
          "label": "Sample Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 201,
      "type": "Talk",
      "title": "Superkräfte für Produktivitäts-PWAs – Project Fugu",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein hervorragendes plattformübergreifendes Anwendungsmodell. In mancherlei Hinsicht musste das Modell jedoch noch hinter seine nativen Gegenstücke zurücktreten. Das wollen Google, Microsoft und Intel mit dem Capabilities Project – Codename Fugu – jetzt ändern. Ihr Ziel: ein leistungsfähigeres Web. Dank den Fugu APIs erhalten PWAs nun Zugriff auf das lokale Dateisystem und die Zwischenablage und können sich als Bearbeitungsprogramm für bestimmte Dateierweiterungen hinterlegen. In dieser Session zeigt Christian Liebel von Thinktecture, wie Fugu APIs entstehen und wie sie einen ganzen Schwung an Produktivitäts-Apps ins Web verlagern könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/superkrafte-fur-produktivitats-pwas-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 196,
      "type": "Talk",
      "title": "Blazor in .NET 5: Single-Page-Applications mit C# & WebAssembly",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page-Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor-Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von vielen Beispielen wie Blazor in .NET 5 tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-in-net-5-single-page-applications-mit-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 197,
      "type": "Keynote",
      "title": "Technical Keynote: Auf dem Weg zu „One .NET“ – das eine Framework, sie alle zu beherrschen",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im November 2020 ist .NET 5.0 erschienen. Auch wenn die Vision \"One .NET\" erst mit Version 6.0 vollständig umgesetzt sein wird, so bietet .NET 5.0 doch viele spannende Neuerungen bei Sprachsyntax, Klassen, Anwendungsmodellen und Deployment. In dieser technischen Keynote wird DOTNET-DOKTOR Holger Schwichtenberg zusammen mit Kollegen einige Highlights der neuen Version hervorheben, Empfehlungen zur Migration alter Anwendungen geben und auch einen Ausblick auf die .NET-Zukunft liefern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/technical-keynote-auf-dem-weg-zu-one-net-das-eine-framework-sie-alle-zu-beherrschen",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 198,
      "type": "Talk",
      "title": "Schneller ans Ziel: Web-Apps mit Ionic",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen können mitunter komplex werden. Täglich gibt es neue Anforderungen und am besten soll die App auch noch Cross-Platform verfügbar sein. Und natürlich darf die Entwicklung nicht zu lange dauern. Ionic versucht als opinionated Framework dieses Problem zu adressieren. In seinem Vortrag zeigt Max Schulte, was mit Ionic als SPA-Framework möglich ist und wie es dank seiner Tools, Production-Ready-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/schneller-ans-ziel-web-apps-mit-ionic",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net/tabbed/new-offer",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Capacitor",
        "PWA",
        "Web Technologies",
        "Hybrid-App",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 195,
      "type": "Workshop",
      "title": "ASP.NET Core Blazor: Moderne Businessanwendungen mit C# & WebAssembly - Full-Stack- und Cross-Plattform",
      "date": "2021-02-15 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht-webnativen Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET webbasierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browserp﻿lattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Als Abrundung des Workshops soll auch ein Blick auf und ein Vergleich mit Server-side Blazor nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-und-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-blazor-workshop",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 194,
      "type": "Webinar",
      "title": "Blazor WebAssembly: SPAs mit C# und .NET 5",
      "date": "2021-02-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript oder TypeScript – na klar! Mit ASP.NET Core Blazor gibt es jedoch eine mögliche Alternative für .NET-Entwickler. Auf Basis des Web-Standards WebAssembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# & Razor entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor WebAssembly in .NET 5 möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Ein realistischer Blick auf die Grenzen der Technologie darf hierbei freilich nicht fehlen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-spas-mit-c-number-und-net-5",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 122
    },
    {
      "id": 193,
      "type": "Talk",
      "title": "Full Stack .NET: Single Page Applications mit Blazor, C# & WebAssembly",
      "date": "2021-02-08 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) – bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell – je nach Anwendungsfall – die Grenzen liegen.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/full-stack-net-single-page-applications-mit-blazor-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 121
    },
    {
      "id": 192,
      "type": "Webinar",
      "title": "Unit-Testing in Angular mit Jest",
      "date": "2021-02-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Unit-Tests sind ein hervorragendes Mittel, um (kritische) Funktionalität einer Anwendung automatisiert und schnell überprüfen zu lassen. Das SPA-Framework Angular liefert mit Karma von vornherein eine Testunterstützung mit. Mit Facebooks Jest gibt es jedoch ein weiteres Framework, das unter anderem mit paralleler Testausführung lockt.\n\nIn diesem Webinar zeigt Ihnen Christian Liebel, wie Sie Ihre Angular-App mithilfe von Jest testen können. Nachdem wir zu Beginn ein gemeinsames Verständnis zum Thema Unit Tests geschaffen haben, werden wir uns abschließend auch fortgeschrittenen Inhalten wie Spys und Mocks nähern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/unit-testing-in-angular-mit-jest",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/unit-testing-angular-jest-webinar-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 120
    },
    {
      "id": 190,
      "type": "Talk",
      "title": "Blazor WebAssembly & gRPC - Code-first .NET SPA developer productivity",
      "date": "2021-01-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "With Blazor WebAssembly, developers can write C# code for SPAs in the browser and share code with the server-side of their applications. Usually, you design and use JSON-based Web APIs to communicate between the client and the server logic. In this session, Christian Weyer demonstrates how to employ gRPC & gRPC-Web in a code-first manner to share .NET interface contracts in a strongly-typed way. With this approach, no code generation is needed, you get the same syntax and full IntelliSense on both sides. In fact, you gain the good parts we already had many years ago with WCF - now for the ubiquitous & open web. But: is really everything gold that glitters?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-and-grpc-code-first-net-spa-developer-productivity",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-grpc-code-first",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 118
    },
    {
      "id": 191,
      "type": "Talk",
      "title": "Azure Arc enabled Kubernetes: Hybrid und Multi-Cloud",
      "date": "2021-01-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Endlich alle unter einem Dach. Mit Azure Arc enabled Kubernetes können Kubernetes-Cluster in Azure verwaltet und überwacht werden, und dies unabhängig davon, in welcher Umgebung der Cluster betrieben wird. Azure Arc dient als zentrales und professionelles Cockpit für Ihre Kubernetes-Cluster die in Amazon AWS, Google Compute Cloud, Digital Ocean, oder in privaten Rechenzentren betrieben werden. In diesem Webinar zeigt Thorsten Hans welche Möglichkeiten und Potentiale Azure Arc enabled Kubernetes bietet.  Anhand einer Beispielumgebung werden Sie sehen, wie Inventarisierung, Monitoring und Governance – unter Verwendung von Azure Policies und Open Policy Agent - auf externe Kubernetes-Cluster angewendet werden können.\n ",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-arc-enabled-kubernetes-hybrid-und-multi-cloud",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/arc-enabled-k8s-webinar-january-2021",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Kubernetes",
        "Azure"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 119
    },
    {
      "id": 189,
      "type": "Webinar",
      "title": "RxJS von Grund auf - Teil 2: Operatoren und Operatorenketten",
      "date": "2021-01-19 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im ersten Teil haben wir uns die grundlegenden Konzepte hinter RxJS näher angesehen. Dabei kam ein Blick hinter die Kulissen von Operatoren und Operatorketten zu kurz. In diesem Teil möchten wir besonderen Fokus auf diese Aspekte legen und den Vorhang lüften. Dazu werden wir uns nicht nur bestehende Operatoren ansehen, sondern uns mit der Erstellung eigener Operatoren auseinander setzen.\n\n* Kurzes Recap des ersten Webinar\n* Operatoren selbstgemacht\n* Verhalten in Operatorketten\n* Operatoren parametrisieren\n* Existierende Operatoren wiederverwenden",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-teil-2-operatoren-und-operatorenketten",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-02-rxjs-operators",
          "label": "Github Repo"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular, RxJS",
        "RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 117
    },
    {
      "id": 187,
      "type": "Webinar",
      "title": "Blazor Server: Mögliche Architekturalternative zu SPAs?",
      "date": "2020-12-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Viele .NET-Entwickler sind Feuer und Flamme wenn es um Blazor und Webentwicklung geht. Wenn man etwas genauer hinschaut, stellt man schnell fest, dass man gleich zwei Geschmacksrichtungen vor sich hat: Blazor WebAssembly und Blazor Server.\n\nIn diesem Webinar wollen wir uns genauer mit Blazor Server beschäftigen: Was ist Blazor Server überhaupt, wo liegen die Unterschiede zum Client-seitigen Blazor und SPAs im Allgemeinen und welche Auswirkungen haben diese Unterschiede auf die Art, wie wir Web-Anwendungen schreiben? Was muss ich lernen, um mit Blazor Server arbeiten zu können und worauf muss ich eventuell besonders achten, wenn ich meine ersten Schritte mit Blazor Server gehen möchte? All diese Fragen wird unser Experte Sebastian Gingter in dieser Session klären.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/blazor-server-mogliche-architekturalternative-zu-spas",
          "label": "Slides zum Webinar"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-blazor-server-12-2020",
          "label": "GitHub Repo mit dem Beispielcode"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Architecture",
        "ASP.NET Core",
        "SignalR",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 116
    },
    {
      "id": 186,
      "type": "Webinar",
      "title": "Full Throttle: Azure Infrastructures with Terraform",
      "date": "2020-12-09 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "You want to provision and manage your cloud infrastructure professionally yet still keep things simple? Then you should join this webinar and dive into Terraform with Thorsten Hans.\nYou will learn by practical examples how to automate your mission-critical workloads by adopting Infrastructure as Code (IaC) and mastering Terraform.\nWithin an hour, you will learn everything you need to create and manage your cloud environments. Thorsten explains all necessary concepts and techniques like the Terraform workflow, how modules work, expressions, and interpolation, by live-coding an example infrastructure during the webinar.\nAfter the event, you will be able to express your infrastructures in code, even if you are using different cloud offerings such as AWS, GCP, or Digital Ocean.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-december-2020",
          "label": "GitHub Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/full-throttle-azure-infrastructures-with-terraform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 115
    },
    {
      "id": 185,
      "type": "Webinar",
      "title": "Blazor WebAssembly: Neues in .NET 5\u000b",
      "date": "2020-12-08 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ähnlich wie bei Angular und React wird auch bei Blazor ständig an der Plattform weiter gearbeitet. Vor allem bei Blazor WebAssembly als relativer Framework-Neuling sind die Verbesserungen und Neuerungen des ASP.NET-Teams bei Microsoft von Interesse. In diesem Webinar zeigt Christian Weyer auf gewohnt pragmatische Art was alles neu ist im .NET-5-Release und wie diese Features einzuordnen sind.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-neues-in-net-5",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-things-to-know/tree/net5-demos",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor",
        ".NET Core",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 114
    },
    {
      "id": 184,
      "type": "Webinar",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-12-02 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann.\n\nIn unserem Thinktecture-Webinar zeigt Ihnen Christian Liebel mit Zone.js, Change Detection und Service Workern die wichtigsten Performance-Stellschrauben des Angular-Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-c737c808-80f3-4e86-b27f-54d311007d2c",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 113
    },
    {
      "id": 182,
      "type": "Webinar",
      "title": "Pragmatische API-Versionierung in ASP.NET Core",
      "date": "2020-11-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit, und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, so haben wir bei APIs das Problem, dass ältere Clientanwendungen mit dem neuen Verhalten nicht mehr zurecht kommen und dann auch nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unserer API. In diesem Webinar zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen wann überhaupt eine neue Version benötigt wird, welche verschiedenen Methoden es gibt eine ASP.NET-Core-Web-API zu versionieren und welche verschiedenen Herangehensweisen im Code möglich sind, unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-versioning-webinar-november-2020",
          "label": "GitHub - Repo"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/thinktecture-webinar-pragmatische-api-versionierung-in-asp-dot-net-core",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Versioning",
        "ASP.NET Core"
      ],
      "primaryTag": "ASP.NET Core",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "webinar-test",
      "bigmarkerRef": "1f15d74a37a4",
      "ctaKey": "Recording ansehen",
      "additionalInfo": "",
      "conference": 112
    },
    {
      "id": 183,
      "type": "Talk",
      "title": "Real-World Blazor WebAssembly : 5(+) Dinge, die Sie kennen sollten",
      "date": "2020-11-24 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "In diesen 60 Minuten spricht Christian Weyer über fünf Erkenntnisse aus dem praktischen Einsatz von Blazor WebAssembly - mit Demos, live und in Farbe. Auch wenn für Sie vielleicht nur ein einziges \"Ding\" dabei ist, das sie neu lernen: diese Session sollte sich dennoch lohnen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/real-world-blazor-webassembly-5-plus-dinge-die-sie-kennen-sollten",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-things-to-know",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "gRPC",
        "SPA",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 68
    },
    {
      "id": 134,
      "type": "Workshop",
      "title": "Tausche .NET gegen Web: Desktop-Apps als PWA entwickeln",
      "date": "2020-11-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Für .NET-Entwickler ist völlig klar: Wenn eine Desktopanwendung entwickelt werden muss, greift man zu Windows Forms oder WPF. In dieser DevSession nehmen wir eine alternative Technologie unter die Lupe: Progressive Web Apps. Dieses Anwendungsmodell auf Basis von Webtechnologien bietet nicht nur eine erstklassige Unterstützung für Desktopanwendungen, sondern läuft auf Basis desselben Quelltextes auch noch im Browser oder auf Mobilgeräten. Microsoft ist einer der wesentlichen Treiber der Progressive Web Apps – und das nicht erst, seitdem der eigene Browser Edge auf dem Chrome-Unterbau Chromium basiert. Im Rahmen von Project Fugu kooperiert Microsoft mit Intel und Google, um mächtige Schnittstellen für Webanwendungen einzuführen: Das schließt Dateizuordnungen, Zugriff auf das native Dateisystem oder die Zwischenablage sowie Sprunglisteneinträge mit ein. In dieser Session zeigt Ihnen Christian Liebel von Thinktecture, wie Sie erstklassige Produktivitätsapps für den Desktop als PWA entwickeln können – und ganz nebenbei auch noch Apps für den Browser und Mobilgeräte herausfallen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/tausche-net-gegen-web-desktop-apps-als-pwa-entwickeln",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ddc-2020-desktop-pwas",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org/",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 68
    },
    {
      "id": 132,
      "type": "Talk",
      "title": "Real-World Blazor: 5 Dinge, die Sie kennen sollten",
      "date": "2020-11-23 21:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Blazor Server oder Blazor WebAssembly: es gibt Dinge in Microsofts Web-UI-Framework, die sich mitunter erst im Projektalltag heraus kristallisieren. In diesen 60 Minuten spricht Christian Weyer über fünf Erkenntnisse aus dem praktischen Einsatz von Blazor Server & WebAssembly - mit Demos live und in Farbe. Auch wenn für Sie vielleicht nur ein einziges Ding dabei ist, das sie neu lernen: diese Session sollte sich dennoch lohnen ;-) ",
      "media": [],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 68
    },
    {
      "id": 181,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Plattform Realtime Push - 2",
      "date": "2020-11-17 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-core-signalr-cross-plattform-realtime-push-2",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "JavaScript",
        "Blazor",
        "ASP.NET Core",
        "SignalR"
      ],
      "primaryTag": "SignalR",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 111
    },
    {
      "id": 179,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Einführung in reaktives JavaScript",
      "date": "2020-11-10 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "RxJS ist sehr mächtig. So mächtig, dass es Angular als zentrales Denk- und Programmiermodell für die interne Kommunikation unter Komponenten und Services auserkoren hat.\n\nSie fühlen sich noch nicht sicher genug, RxJS in vollem Umfang einzusetzen? Dann zeigt Ihnen Yannick wie Sie mit den notwendigen Ideen, Konzepten und Grundlagen, RxJS im Handumdrehen verstehen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-einfuhrung-in-reaktives-javascript",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 110
    },
    {
      "id": 178,
      "type": "Webinar",
      "title": "Serverless Computing in Azure Kubernetes Service mit KEDA",
      "date": "2020-11-03 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit Azure Functions stellt Microsoft ein flexibles und mächtiges Framework für Serverless Computing bereit, womit skalierbare und reaktive Anwendungen erstellt werden können. Mit Kubernetes Event-driven Applications (KEDA), können Sie Ihre Azure Functions problemlos in einem Kubernetes-Cluster betreiben. Doch KEDA kümmert sich nicht nur um den Betrieb. Durch geschickte Integration von sowohl externen als auch internen Nachrichten- und Ereignissystemen wie Azure Service Bus oder Azure Event Hub skaliert KEDA Ihre Azure Functions automatisch anhand der anfallenden Anfragen",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/serverless-computing-in-azure-kubernetes-service-mit-keda-503afff9-4772-4c26-b9d8-9c846baec4ab",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/keda-webinar-november-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Kubernetes",
        "Serverless",
        "Azure"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 109
    },
    {
      "id": 175,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2020-10-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered-5a8402f4-2ec1-470c-805f-c44598b49e64",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 176,
      "type": "Talk",
      "title": "Implementing Productivity Apps with Angular and Fugu APIs",
      "date": "2020-10-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have been working since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included! This allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web. Thinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-2020-angular-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 133,
      "type": "Webinar",
      "title": "Web Components – das Ende der SPA-Framework-Ära?",
      "date": "2020-10-27 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components – ein Begriff, den wir immer öfter lesen und lesen werden. Dahinter stehen die Technologien Custom Elements, Shadow DOM und HTML Templates. Zusammen ergeben sie ein natives Komponentenmodell für unseren Browser. Es hilft uns, wiederverwendbare UI-Komponenten zu entwickeln, die wir in jeder App benutzen können. Völlig gleich, ob diese Anwendungen mit einem SPA-Framework entwickelt wurden. \n\nBedeutet das aber auch, dass wir eigentlich gar kein SPA-Framework mehr benötigen, sondern alles mit Web Components entwickeln können? Dieser spannenden Frage geht Manuel Rauber in diesem Webinar nach anhand einer Real-World-Demo-Applikation, Live-Coding und den Vor- und Nachteilen von Web Components.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-das-ende-der-spa-framework-ara",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 106
    },
    {
      "id": 172,
      "type": "Half Day Workshop",
      "title": "PWA-Bootcamp: von 0 auf MS Paint (hands-on)",
      "date": "2020-10-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Contributors Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. In diesem Bootcamp zeigt Ihnen Christian Liebel von Thinktecture, wie Sie in nur einem halben Tag eine vereinfachte Version von Paint implementieren und auf Ihrem Gerät installieren können – inklusive Dateisystemzugriff. Bitte bringen Sie Ihr Notebook (ohne Corporate-Proxys/Unternehmensrichtlinien) mit installiertem Google Chrome Canary und Microsoft Visual Studio Code mit.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-bootcamp-von-0-auf-ms-paint-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/mobiletechcon-2020-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 105
    },
    {
      "id": 174,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Taken to The Next Level",
      "date": "2020-10-27 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to take your Progressive Web App to the next level?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-taken-to-the-next-level",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 55
    },
    {
      "id": 171,
      "type": "Workshop",
      "title": "PWA Workshop: Progressive Web Apps, Superpowered",
      "date": "2020-10-25 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen shortcuts, clipboard access, and native file system access are only a few examples of Fugu’s powerful APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-workshop-progressive-web-apps-superpowered",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-munich-2020-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 177,
      "type": "Webinar",
      "title": "3D-Visualisierung im Web mit BabylonJS ",
      "date": "2020-10-20 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne Businessanwendungen sind schon lange nicht mehr langweilig: Daten wollen visualisiert werden und zwar verständlich und ansprechend. Genau dabei helfen Web-Grafik-Engines wie BabylonJS. Sie ermöglichen, 2D-, 3D, Virtual- und Augmented-Reality-Inhalte verständlich darzustellen. Somit lassen sich unter anderem digitale Konzepte visualisieren, konfigurieren und testen – Cross-Plattform und performant.\n\nIn dieser Session zeigt Max Schulte anhand einer Angular-Anwendung, Kernaspekte und Wege sowie einen Architekturansatz, um neue Visualisierungs- und Bedienmöglichkeiten in Ihre Anwendung integrieren zu können",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-visualisierung-im-web-mit-babylonjs",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-3d-visualisierung-babylonjs-angular",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://green-sky-080a5d803.azurestaticapps.net/",
          "label": "Demo App"
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#143",
          "label": "BabylonJS Playground Start"
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#142",
          "label": "BabylonJS Playground Ende"
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "JavaScript",
        "Architecture",
        "Typescript",
        "Web Technologies",
        "Webinar",
        "BabylonJs"
      ],
      "primaryTag": "BabylonJs",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 107
    },
    {
      "id": 135,
      "type": "Talk",
      "title": "Das Frontend-Experiment: Tausche Framework gegen Web Components",
      "date": "2020-10-14 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Aktuell sind Frameworks wie Angular oder React das Mittel der Wahl für webbasierte Frontends, doch das könnte sich in Zukunft ändern. Christian Liebel von Thinktecture wagt den Blick über den Tellerrand: Mit Web Components bekommt das Web derzeit ein Komponentenmodell, das kontinuierlich weiterentwickelt wird. Die heute bekannten Frameworks könnten damit in Zukunft weniger attraktiv werden. Anhand eines Experiments wird gezeigt, ob Frontends mit Web Components schon heute komplett ohne Framework aufgezogen werden können und ob das für die heute typische App-Entwicklung reichen könnte.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies",
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 57
    },
    {
      "id": 170,
      "type": "Webinar",
      "title": "Blazor WebAssembly jenseits von REST: gRPC in Web-Apps & .NET",
      "date": "2020-10-13 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor WebAssembly ermöglicht SPAs und PWAs für Desktop und Mobile - mit C#, .NET und HTTPS-/REST-Calls. Aber da muss es nicht aufhören. Über gRPC bzw. gRPC-Web kann man zum einen optimierte binäre Daten zwischen Blazor und APIs austauschen - und zum anderen eine Contract-First-Programmierung realisieren. Blazor kann auch hier im Konzert von etablierten Cross-Plattform-Lösungen mitspielen. Sehen Sie in diesem Webinar von Christian Weyer Blazor WebAssembly in Action - jenseits von REST.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-jenseits-von-rest-grpc-in-web-apps-and-net",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "gRPC",
        "ASP.NET Core",
        "Architecture",
        "SPA",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 104
    },
    {
      "id": 169,
      "type": "Talk",
      "title": "Real-time in no time (and costs) – with Azure Functions, Cosmos DB & SignalR",
      "date": "2020-10-13 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Let’s try to sort out some of the real strengths of Serverless and see where it can be a productive tool in your Cloud arsenal: real-time architectures & communication. Join Christian Weyer while discussing Azure Functions, Cosmos DB, and SignalR Service in a holistic scenario – by illustrating an end-to-end solution for a scalable real-time application built in almost no time, with almost no runtime costs. And action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/real-time-in-no-time-and-costs-with-azure-functions-cosmos-db-and-signalr",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Azure Functions",
        ".NET Core",
        "Architecture",
        "SignalR",
        "Serverless"
      ],
      "primaryTag": "Serverless",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 103
    },
    {
      "id": 167,
      "type": "Half Day Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-10-07 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-9ae2ffa5-17a4-4c07-9528-af5899ece615",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-perf",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 166,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2020-10-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-pwa",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-83a8be36-1440-4465-9ea8-813149a0c041",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 168,
      "type": "Workshop",
      "title": "RxJS in Angular-Anwendungen: so schwimmen Sie nicht mehr gegen den Stream",
      "date": "2020-10-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie sind Angular-Entwickler und fühlen sich noch nicht sicher genug, RxJS in vollem Umfang einzusetzen? Es hat sich gezeigt, dass es in der Community noch viel Unsicherheit in der Nutzung von RxJS gibt – selbst für erfahrene Entwickler. In dieser Session mit Yannick Baron wird die Denk- und Arbeitsweise hinter streambasiertem Datenfluss mit RxJS nochmal speziell im Kontext von Angular-Anwendungen angesehen. Darüber hinaus werden häufige Stolperfallen, Antipatterns und Patterns, sowie nützliche Anwendungsbeispiele vorgestellt, um die Anwendung von RxJS einfacher und vertrauter zu machen. Lasst uns gemeinsam mit dem Stream schwimmen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-in-angular-anwendungen-so-schwimmen-sie-nicht-mehr-gegen-den-stream",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-angular-demos",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 163,
      "type": "Workshop",
      "title": "Hands-on-Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2020-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und im Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mit Hilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single Page App Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-moderne-cross-plattform-losungen-01aea073-b24a-4f4a-a53b-aed937f7361d",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 164,
      "type": "Workshop",
      "title": "Kubernetes für Entwickler und Architekten",
      "date": "2020-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\nAusfallsichere und skalierbare Anwendungen zu betreiben und dabei ohne Ausfallzeiten neue Versionen Ihrer Software bereitzustellen, klingt auch heute noch für viele Lösungsanbieter nach einem schönen Traum. Mit Kubernetes und insbesondere den verwalteten Angeboten wie Azure Kubernetes Service (AKS) ist dieser Traum für Viele in greifbare Nähe gerückt. In diesem Tagesworkshop erklärt Thorsten Hans die Eigenschaften, Bestandteile und Möglichkeiten, die Kubernetes als Anwendungsplattform bietet. Nach dem Einstieg und den ersten Schritten mit Kubernetes werden Sie lernen, wie existierende Anwendungsbestandteile im Container-Orchestrator bereitgestellt und effektiv betrieben werden können. Essenzielle Themen, wie beispielsweise automatische Skalierung, der Umgang mit sensitiven Konfigurationsdaten, oder die Verwendung von externen, persistenten Datenspeichern, werden anhand von Beispielen aus der Praxis erläutert und können von Ihnen selbst erprobt werden.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-kubernetes-workshop",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-workshop-at-basta-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Docker",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 160,
      "type": "Talk",
      "title": "Serverless Computing in Azure Kubernetes Service mit KEDA",
      "date": "2020-09-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit Azure Functions stellt Microsoft ein flexibles und mächtiges Framework für Serverless Computing bereit, womit skalierbare und reaktive Anwendungen erstellt werden können. Mit Kubernetes Event-driven Applications (KEDA), können Sie Ihre Azure Functions problemlos in einem Kubernetes-Cluster betreiben. Doch KEDA kümmert sich nicht nur um den Betrieb. Durch geschickte Integration von sowohl externen als auch internen Nachrichten- und Ereignissystemen wie Azure Service Bus oder Azure Event Hub skaliert KEDA Ihre Azure Functions automatisch anhand der anfallenden Anfragen. In diesem Vortrag zeigt Thorsten Hans, wie Sie zukunftssichere, skalierbare und reaktive cloud-native Anwendungen erstellen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/serverless-computing-in-azure-kubernetes-service-mit-keda",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-keda",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 161,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum",
      "date": "2020-09-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum-f3051ae8-e858-4be1-9c36-a8e7a094e22e",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        3
      ],
      "tags": [
        "Electron",
        "Cordova",
        "Capacitor",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 162,
      "type": "Talk",
      "title": "3D-Daten-Visualisierung in Businessanwendungen mit BabylonJS – das Web kann’s",
      "date": "2020-09-23 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne Businessanwendungen sind schon lange nicht mehr langweilig: Daten wollen visualisiert werden und zwar verständlich und ansprechend. Genau dabei helfen Web-Grafik-Engines wie BabylonJS. Sie ermöglichen, 2D-, 3D, Virtual- und Augmented-Reality-Inhalte verständlich darzustellen. Somit lassen sich unter anderem digitale Konzepte visualisieren, konfigurieren und testen – Cross-Plattform und performant. In dieser Session zeigt Max Schulte anhand einer Angular-Anwendung Kernaspekte und Wege sowie einen Architekturansatz, um neue Visualisierungs- und Bedienmöglichkeiten in Ihre Anwendung integrieren zu können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-demo-basta-2020-mainz",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-daten-visualisierung-in-businessanwendungen-mit-babylonjs-das-web-kanns",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#142",
          "label": "BabylonJS PLayground - Live Coding "
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Mobile",
        "Typescript",
        "BabylonJs"
      ],
      "primaryTag": "BabylonJs",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 158,
      "type": "Talk",
      "title": "Kubernetes für .NET Core Entwickler",
      "date": "2020-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie möchten Ihre .NET-Core-Anwendung in Kubernetes betreiben und lernen, wie Sie das Potenzial des Container-Orchestrators nutzen können? Dann besuchen Sie diesen Talk von Kubernetes- und Cloud-native-Experte Thorsten Hans. Sie werden nicht nur den praktischen Umgang mit Kubernetes aus Sicht des Entwicklers lernen, sondern auch, wie Sie Patterns und Praktiken nutzen, um Ihre .NET-Core-Anwendungen optimal in Containern zu betreiben.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-aks",
          "label": "GitHub Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-fur-net-core-etnwicker",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 156,
      "type": "Talk",
      "title": "ASP.NET Core Web-API-Versionierung direkt aus der Praxis",
      "date": "2020-09-22 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, haben wir bei APIs das Problem, dass sich ältere Clientanwendungen auf das Verhalten verlassen, das wir damals bereitgestellt hatten. Änderungen daran würden die Clients nicht verstehen und daher nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unseres API. In dieser Session zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen, wann überhaupt eine neue Version benötigt wird, welche verschiedenen Methoden es gibt, um ein ASP.NET-Core-Web-API zu versionieren, und welche verschiedenen Herangehensweisen im Code möglich sind, um unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-api-versioning",
          "label": "Beispielcode und Demos auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-hybrid-2020-asp-dot-net-core-api-versionierung-aus-der-praxis",
          "label": "Slides bei Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Versioning",
        "ASP.NET Core",
        "Integration",
        "Microservices",
        "Architecture",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 157,
      "type": "Talk",
      "title": "ASP.NET Core Blazor: Single Page Applications im Browser mit C# & WebAssembly",
      "date": "2020-09-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) – bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell – je nach Anwendungsfall – die Grenzen liegen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-single-page-applications-im-browser-mit-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "PWA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 159,
      "type": "Talk",
      "title": "Progressive Web Apps mit Angular: Tipps für Fortgeschrittene",
      "date": "2020-09-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifendes Anwendungsmodell, das auf Webtechnologien basiert. Auch Googles SPA Framework Angular enthält eine PWA-Unterstützung, die schnell angeschaltet ist. Doch damit geht die Arbeit erst richtig los: Christian Liebel zeigt Ihnen, wie Sie mit Angular-App-Updates richtig kommunizieren, Cache-Probleme debuggen und den Anwender korrekt zum Abonnement von Pushbenachrichtigungen oder zum Installieren der App auffordern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-tipps-fur-fortgeschrittene-9c0c117d-93e4-4557-8404-30e43bfcc40c",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 155,
      "type": "Workshop",
      "title": "ASP.NET Core Blazor: moderne Businessanwendungen mit C# & WebAssembly – Full-Stack & Cross-Plattform",
      "date": "2020-09-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht webnative Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor WebAssembly Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET Web-basierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browserplattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Zur Abrundung des Workshops soll auch ein Blick auf Server-side Blazor und der Vergleich damit nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-and-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "Web Components",
        "SPA",
        "Architecture",
        "PWA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 154,
      "type": "Webinar",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff [Webinar]",
      "date": "2020-09-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden.\n\nChristian Liebel zeigt Ihnen die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-25bc73fd-b138-4ac8-8eae-0ea5f9d5e5a9",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "b1af99b54d9e",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 100
    },
    {
      "id": 153,
      "type": "Talk",
      "title": "Blazor-Gwerch: Dodned im Brausa - echt etz?",
      "date": "2020-09-11 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor bereits in einer frühen Vorab-Version möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-gwerch-dodned-im-brausa-echt-etz",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "PWA",
        "Web Technologies",
        "WebAssembly",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 38
    },
    {
      "id": 152,
      "type": "Webinar",
      "title": "Infrastructure as Code - Azure with HashiCorp Terraform",
      "date": "2020-09-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar-september-2020",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-september-2020",
          "label": "Sample GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Terraform",
        "Azure",
        "Infrastructure as Code"
      ],
      "primaryTag": "Infrastructure as Code",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 99
    },
    {
      "id": 115,
      "type": "Talk",
      "title": " Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2020-09-04 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 37
    },
    {
      "id": 150,
      "type": "Workshop",
      "title": "Web-Apps schneller entwickeln mit Ionic & Angular",
      "date": "2020-09-03 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen werden schnell komplex. Neben den rapide wechselnden Anforderungen soll die App installierbar, performant und einfach zu warten sein – und die Entwicklungszeit ist kosteneffektiv knapp bestimmt. Genau diese und andere Herausforderungen versucht Ionic als opinionated Framework zu adressieren. \n\nIn diesem Workshop zeigt Max Schulte, was mit Ionic und Angluar möglich ist und wie Ionic, dank seiner Tools, \"Production Ready\"-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/web-apps-schneller-entwickeln-mit-ionic-and-angular",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-ionic",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Capacitor",
        "Web Technologies",
        "Web Components",
        "Mobile",
        "PWA",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 149,
      "type": "Half Day Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-09-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-20655223-0b14-43ab-ba43-5b8943e2dad7",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-perf",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "Performance"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 151,
      "type": "Talk",
      "title": "Web Components: An Overview",
      "date": "2020-09-02 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "A brief overview of web components in regard to the question \"can web components replace SPA frameworks?\".",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-components-an-overview",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 37
    },
    {
      "id": 148,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2020-09-02 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-e71f0872-ccce-43de-9da3-f63db1b40c24",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-pwa",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://speakerdeck.com/thorstenhans/ohne-netz-aber-mit-doppeltem-boden-offline-first-apps-mit-html5-und-sql-server-backend",
          "label": "Ohne Netz, aber mit doppeltem Boden: Offline-First-Apps mit HTML5 und SQL Server Backend"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 147,
      "type": "Webinar",
      "title": "Blazor Server: Mögliche Architekturalternative zu SPAs?",
      "date": "2020-08-12 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Viele .NET-Entwickler sind Feuer und Flamme wenn es um Blazor und Webentwicklung geht. Wenn man etwas genauer hinschaut, stellt man schnell fest, dass man gleich zwei Geschmacksrichtungen vor sich hat: Blazor WebAssembly und Blazor Server.\n \nIn diesem Webinar wollen wir uns genauer mit Blazor Server beschäftigen: Was ist Blazor Server überhaupt, wo liegen die Unterschiede zum Client-seitigen Blazor und SPAs im Allgemeinen und welche Auswirkungen haben diese Unterschiede auf die Art, wie wir Web-Anwendungen schreiben? Was muss ich lernen, um mit Blazor Server arbeiten zu können und worauf muss ich eventuell besonders achten, wenn ich meine ersten Schritte mit Blazor Server gehen möchte?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/isabelschrage/blazor-server-mogliche-architekturalternative-zu-spas",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "SPA",
        "ASP.NET Core",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": "f61bec5686c7",
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 98
    },
    {
      "id": 146,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-07-28 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number-juli-2020",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "Web Technologies",
        "SPA",
        ".NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 97
    },
    {
      "id": 145,
      "type": "Webinar",
      "title": "Electron, Cordova & PWA - was, wann, wie & warum?",
      "date": "2020-07-21 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang.\n\nPWA-Professional Christian Liebel erklärt Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-and-pwa-was-wann-wie-and-warum",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Electron",
        "Web Technologies",
        "PWA",
        "Cordova"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 96
    },
    {
      "id": 144,
      "type": "Webinar",
      "title": "Git started",
      "date": "2020-07-14 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Versionskontrolle ist ein Muss in jedem Projekt, ob groß oder klein, professionell oder privat. Git wurde 2005 ins Leben gerufen und ist eines der populärsten Systeme zur verteilten Versionsverwaltung.\nSetzen sie schon Git ein und fühlen sich unsicher in der Verwendung, oder ist Git neu für Sie?\n\nDieses Webinar erklärt das Konzept hinter Git und illustriert die Verwendung im Day-to-Day-Business, um ein fundamentales Verständnis zu vermitteln. Auch Every-Day-Benutzer könnten das eine oder andere noch dazu lernen. Let's git started - alle zusammen!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/git-started-verteilte-versionsverwaltung-mit-git",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 95
    },
    {
      "id": 143,
      "type": "Webinar",
      "title": "Docker für .NET Entwickler",
      "date": "2020-07-07 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/docker-webinar",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/docker-webinar",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Containers",
        "Docker"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 94
    },
    {
      "id": 142,
      "type": "Webinar",
      "title": "Azure Functions - Serverless für .NET Entwickler",
      "date": "2020-06-30 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Serverless-Modell ist eine von vielen verschiedenen Möglichkeiten, Anwendungen für die Cloud zu entwickeln und zu betreiben. Es verspricht einen leichten Einstieg in die Entwicklung von Anwendungen und in den Betrieb eines Backends. Dabei ist leider nicht immer klar, wann und wie das Serverless-Modell sinnvoll genutzt werden kann.\n\nIn diesem Webinar zeigt Boris Wilhelms, was das Serverless-Modell ist und wie wir als .NET-Entwickler Azure Functions nutzen können um Serverless Code zu schreiben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/azure-functions-serverless-fur-net-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-azure-functions",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "Azure",
        ".NET Core",
        "Serverless",
        "Webinar",
        "Azure Functions"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 93
    },
    {
      "id": 141,
      "type": "Talk",
      "title": "Angular für XAML-Entwickler",
      "date": "2020-06-30 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das moderne Web lockt mit mächtigen Features und sprengt Plattformgrenzen. Googles SPA-Framework Angular eröffnet einen möglichen Weg in diese schöne neue Welt. Das Framework weist zwar eine gewisse Lernkurve auf, doch XAML-Entwickler haben beim Einstieg in die Technologie glücklicherweise entscheidende Vorteile: Denn viele aus WPF, Silverlight und UWP bekannte Konzepte finden sich auch in Angular wieder. In diesem Webinar möchten wir XAML-Entwicklern anhand konkreter Fallbeispiele eine Orientierungshilfe geben und zeigen, wie der Einstieg in die Entwicklung mit Angular rasch gelingen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-fur-xaml-entwickler-20eb1f34-cf5c-4d1d-b639-b2d8522ad933",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-angular",
          "label": "Angular-Beispiel"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-wpf",
          "label": "WPF-Beispiel"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 85
    },
    {
      "id": 131,
      "type": "Talk",
      "title": "Blazor jenseits von REST: SignalR & gRPC in Web-Apps",
      "date": "2020-06-29 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor WebAssembly ermöglicht SPAs und PWAs für Desktop und Mobile - mit C#, .NET und HTTPS-/REST-Calls. Aber da muss es nicht aufhören. Über gRPC bzw. gRPC-Web kann man zum einen hoch optimierte binäre Daten zwischen Blazor und APIs austauschen - und zum anderen eine Contract-First-Programmierung realisieren. Wenn man zudem ein bisschen Leben in Form von Echtzeit-Updates in die Anwendung bringen möchte, dann ist SignalR die richtige Wahl. Blazor kann auch hier im Konzert der Cross-Plattform-Lösungen mitspielen. Sehen Sie in dieser Session von Christian Weyer Blazor in Action - jenseits von REST.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-jenseits-von-rest-signalr-and-grpc-in-web-apps",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/dwx-home-blazor-grpc-signalr",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "SignalR",
        "gRPC",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 85
    },
    {
      "id": 139,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Plattform Realtime Push",
      "date": "2020-06-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-signalr-core-cross-platform-realtime-push",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Blazor",
        "SignalR"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 91
    },
    {
      "id": 138,
      "type": "Webinar",
      "title": "Angular für XAML-Entwickler",
      "date": "2020-06-09 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das moderne Web lockt mit mächtigen Features und sprengt Plattformgrenzen. Googles SPA-Framework Angular eröffnet einen möglichen Weg in diese schöne neue Welt. Das Framework weist zwar eine gewisse Lernkurve auf, doch XAML-Entwickler haben beim Einstieg in die Technologie glücklicherweise entscheidende Vorteile: Denn viele aus WPF, Silverlight und UWP bekannte Konzepte finden sich auch in Angular wieder. In diesem Webinar möchten wir XAML-Entwicklern anhand konkreter Fallbeispiele eine Orientierungshilfe geben und zeigen, wie der Einstieg in die Entwicklung mit Angular rasch gelingen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-fur-xaml-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-angular",
          "label": "Angular-Beispiel"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-wpf",
          "label": "WPF-Beispiel"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 90
    },
    {
      "id": 137,
      "type": "Webinar",
      "title": "Azure Kubernetes Service für .NET Core Entwickler",
      "date": "2020-06-02 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-kubernetes-service-fur-net-core-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/aks-netcore-webinar",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        ".NET Core",
        "AKS",
        "Docker"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 89
    },
    {
      "id": 136,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-05-26 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Webinar anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number-1bf79f69-2ba4-413c-b0a1-04c794513a88",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "SPA",
        ".NET Core",
        "Web Technologies",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 88
    },
    {
      "id": 173,
      "type": "Webinar",
      "title": "Web Components – das Ende der SPA-Framework-Ära?",
      "date": "2020-05-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components – ein Begriff, den wir immer öfter lesen und lesen werden. Dahinter stehen die Technologien Custom Elements, Shadow DOM und HTML Templates. Zusammen ergeben sie ein natives Komponentenmodell für unseren Browser. Es hilft uns, wiederverwendbare UI-Komponenten zu entwickeln, die wir in jeder App benutzen können. Völlig gleich, ob diese Anwendungen mit einem SPA-Framework entwickelt wurden. \n\nBedeutet das aber auch, dass wir eigentlich gar kein SPA-Framework mehr benötigen, sondern alles mit Web Components entwickeln können? Dieser spannenden Frage geht Manuel Rauber in diesem Webinar nach anhand einer Real-World-Demo-Applikation, Live-Coding und den Vor- und Nachteilen von Web Components.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-das-ende-der-spa-framework-ara-c68b0388-7730-4822-abc5-c7e96e18a067",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 86
    },
    {
      "id": 127,
      "type": "Webinar",
      "title": "3D-Visualisierung in Web Apps: Angular und BabylonJS in Symbiose",
      "date": "2020-05-12 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Dieses Webinar zeigt die Vorteile einer 3D-Engine in modernen Business-Anwendungen. Es wird in Detail auf die Aspekte einer integrativen Architektur eingegangen und anhand einer Demo und Live-Code verdeutlicht wie die Kommunikation stattfinden kann. ",
      "media": [
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": "Lagerhaus Beispiel App"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-architecture",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-visualisierung-in-web-apps-angular-und-babylonjs-in-symbiose",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Architecture",
        "Performance",
        "Web Technologies",
        "BabylonJs"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 80
    },
    {
      "id": 130,
      "type": "Webinar",
      "title": "Entity Framework Core - Performance-Optimierung aus der Praxis",
      "date": "2020-05-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit der Veröffentlichung von Entity Framework Core v3 hat sich das Verhalten des Objekt-Relationalen-Mappers von Microsoft an einigen Stellen maßgeblich geändert. Einige Performanceprobleme haben sich mit der neuen Version praktisch von selbst gelöst, andere Probleme sind neu bzw. aus älteren Versionen von Entity Framework zurückgekehrt. Es ist somit sehr empfehlenswert zu wissen, welche Version für welche Problemart besonders anfällig ist, um möglichst viel Geschwindigkeit aus EF-Abfragen und den dahinterliegenden SQL-Abfragen herauszuholen.\nIm ersten Teil des Webinars werden die häufigsten Performance-Probleme in Entity Framework Core v2 und v3 aufgezeigt. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden SQL Server Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/entity-framework-core-performance-optimierung-aus-der-praxis",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Execution Plan",
        "MS SQL Server",
        "Performance",
        "Entity Framework Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 84
    },
    {
      "id": 227,
      "type": "Webinar",
      "title": "Entity Framework Core 5 - Performance-Optimierung aus der Praxis",
      "date": "2020-05-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ef-core-performance-webinar-2021",
          "label": "Demos"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/entity-framework-core-5-performance-optimierung-aus-der-praxis",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 84
    },
    {
      "id": 117,
      "type": "Webinar",
      "title": "ASP.NET Core Web-API Dokumentation mit Swagger",
      "date": "2020-04-29 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wenn wir eine .NET Core Web-API bauen, ist es nicht nur damit getan, ein neues Projekt zu erzeugen, ein paar Controller zu implementieren und sie dann zu deployen.\n\nEine API ist - wie der Name schon sagt - eine Schnittstelle, und eine Schnittstelle sollte wohl definiert und auch wohl dokumentiert sein. Vor allem, damit die Entwickler, die mit unserer API arbeiten müssen, auch wissen was sie kann und wie sie funktioniert. Allerdings soll uns die Dokumentation nicht zu viel Zeit kosten und sie sollte möglichst immer auf dem aktuellen Stand sein. Und was wäre, wenn eine solche, schnell erstellte Dokumentation uns als API-Entwickler und auch den Konsumenten unserer API auch noch Arbeit abnehmen könnte?\n\nIn diesem Webinar zeigt Ihnen Sebastian Gingter wie man diese beiden Fliegen mit einer Klappe schlagen kann: Mit Hilfe von Swagger erzeugen wir erst eine umfassende, ständig aktuelle und lebendige Dokumentation unserer API im Open API Format. Danach sehen wir uns an, wie uns diese technische Dokumentation helfen kann, zum einen Zeit zu sparen und zum anderen Fehler zu vermeiden, in dem wir diese akkurate Basis nehmen, um Client- Code und Test-Rümpfe zu generieren. Web APIs jenseits von Hello World, mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/tt-webinar-2020-openapi",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/tt-webinar-2020-openapi",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Swagger",
        "ASP.NET Core",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 77
    },
    {
      "id": 116,
      "type": "Webinar",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2020-04-21 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel zeigt Ihnen die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-5abb7495-ffd9-4b00-b8bc-589f079f79a2",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pwa-deep-dive-webinar",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://www.thinktecture.com/de/cheatsheet/pwa",
          "label": "PWA Cheat Sheet"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies",
        "Webinar",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 76
    },
    {
      "id": 114,
      "type": "Talk",
      "title": "Web Components als Frameworkersatz – das Frontend-Experiment",
      "date": "2020-04-16 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wenn ein Frontend im Web benötigt wird, ist die Wahl schnell auf die üblichen Verdächtigen eingegrenzt: Angular, React oder Blazor. Durch Web Components könnte sich das in Zukunft ändern. Christian Liebel von Thinktecture wagt einen Blick in die Glaskugel: Mit Web Components hat das Web ein Komponentenmodell erhalten, das kontinuierlich weiterentwickelt wird. Vielleicht braucht es in Zukunft nicht mehr für jeden Anwendungsfall zwingend ein schweres Framework. Anhand eines Experiments wird demonstriert, ob sich Frontends schon heute komplett mit Web Components statt Frameworks aufziehen lassen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-components-als-frameworkersatz-das-frontend-experiment",
          "label": ""
        },
        {
          "type": "Video",
          "url": "https://www.twitch.tv/videos/594354515?t=05h42m47s",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 75
    },
    {
      "id": 113,
      "type": "Talk",
      "title": "Terraform Webinar",
      "date": "2020-04-16 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/terraform-webinar-azure-meetup-ffm",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform"
      ],
      "primaryTag": "Terraform",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 74
    },
    {
      "id": 112,
      "type": "Webinar",
      "title": "Infrastructure as Code mit Terraform",
      "date": "2020-04-14 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-april-2020",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 73
    },
    {
      "id": 110,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-04-01 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Webinar anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "SPA",
        ".NET Core",
        "Web Technologies",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 71
    },
    {
      "id": 108,
      "type": "Workshop",
      "title": "Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2020-02-28 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Push-Benachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-fur-moderne-cross-plattform-losungen",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pwapraxis/angular-demo",
          "label": "Angular-Projekt"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pwapraxis/server",
          "label": "Server"
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 101,
      "type": "Talk",
      "title": "Swagger & Co. im Praxiseinsatz für Tests und Clients",
      "date": "2020-02-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Als Entwickler wollen wir uns das Leben möglichst einfach machen. Und wenn wir eine Aufgabe vor uns haben, dann wollen wir auch möglichst viel damit erreichen. Nun haben wir ein ASP.NET-Core-Web-API gebaut, und es mit Hilfe von Swagger dokumentiert. Und nun? In dieser Session zeigt Ihnen Sebastian Gingter, wie man mit möglichst wenig Aufwand möglichst viel aus einer lebendigen Swagger-Dokumentation herausholen kann. Dabei erleben Sie auch, wie man von dort aus mit wenigen Schritten zu einer umfassenden End-to-End-Testsuite kommt. Und wenn wir schon dabei sind, dann schauen wir uns auch noch an, wie wir von der Dokumentation zu komplett funktionalen Clientbibliotheken kommen, ohne uns zu sehr anzustrengen: E2E-Web-APIs – jenseits von Hello World und mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-openapi",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-spring-2020-openapi",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Swagger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 107,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum?",
      "date": "2020-02-26 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum-42fa2c1b-346d-4e77-a03a-4b03036d9048",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-electron-cordova-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Cordova",
        "Electron",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 106,
      "type": "Talk",
      "title": "Progressive Web-Apps mit Angular: Tipps für Fortgeschrittene",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifendes Anwendungsmodell, das auf Webtechnologien basiert. Auch Googles SPA Framework Angular enthält eine PWA-Unterstützung, die schnell angeschaltet ist. Doch damit geht die Arbeit erst richtig los: Christian Liebel zeigt Ihnen, wie Sie mit Angular App-Updates richtig kommunizieren, Cacheprobleme debuggen und den Anwender korrekt zum Abonnement von Push-Benachrichtigungen oder zum Installieren der App auffordern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-tipps-fur-fortgeschrittene",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-advanced-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 104,
      "type": "Talk",
      "title": "Blazor: SPAs im Browser mit C# und WebAssembly",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-spas-im-browser-mit-c-number-und-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "PWA",
        "Web Components",
        "Web Technologies",
        "SPA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 102,
      "type": "Talk",
      "title": "Web Components: native Komponenten fürs Web – das Ende der SPA Frameworks?",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Komponenten – ein Begriff der uns Entwicklern sehr geläufig ist, egal ob als Windows-, Desktop- oder Webentwickler. Durch Kapselung von UI-Definition und Code-behind erhalten wir modulare und wiederverwendbare Bausteine zum Zusammensetzen der Oberfläche unserer Anwendung. Während wir damals im Web mit jQueryUI erste Komponenten entwickeln konnten, bedienen wir uns heute moderner Frameworks wie Angular, React oder Vue.js. Doch mit den Webstandards für HTML-Templates, Shadow DOM und Custom Elements erhalten wir die Möglichkeit, ein natives Komponentenmodell im Browser zu nutzen, gänzlich ohne Frameworks: Es leben die Web Components! In dieser Session klärt Manuel Rauber, wie Web Components funktionieren, wo die Vorteile und Nachteile liegen und ob wir heutzutage schon in der Lage sind, Single Page Applications zu entwickeln, die gänzlich ohne Frameworks auskommen. Sind Sie auch schon auf die Antworten gespannt?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-native-komponenten-furs-web-das-ende-der-spa-frameworks",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-web-components/",
          "label": "Live Demo"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": "Chat Demo"
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": "Chat Online Demo"
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Web Components",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 103,
      "type": "Talk",
      "title": "Pragmatische Microservices mit .NET Core (3) – mehr als nur gRPC",
      "date": "2020-02-24 21:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Microservices: ja! Oder eher doch nicht? Um diese Frage beantworten zu können, klärt Christian Weyer in diesem Vortrag, was Microservices sind, was sie nicht sind, wann man sie nutzt – und vor allem: wie man Microservices in der .NET-Welt implementieren kann. Sehen Sie Architekturansätze und Patterns in Aktion und erleben Sie Technologien wie Web-APIs, gRPC, Push Messaging, Background Workers und Co. im praktischen Einsatz mit .NET Core 3. Versuchen wir gemeinsam, langweilige Architekturthemen spannend zu machen – durch eine pragmatische Sichtweise.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pragmatic-microservices-dotnetcore",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-mit-net-core-3-mehr-als-nur-grpc",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Architecture",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 105,
      "type": "Workshop",
      "title": "Workshop - Blazor: Moderne Businessanwendungen mit C# & WebAssembly – Full-Stack- und Cross-Plattform",
      "date": "2020-02-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht-webnativen Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET webbasierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browser-P﻿lattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Als Abrundung des Workshops soll auch ein Blick auf und ein Vergleich mit Server-side Blazor nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/workshop-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-und-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "SPA",
        "PWA",
        "Web Components",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 100,
      "type": "Talk",
      "title": "Hot Topic: Dependency Injection",
      "date": "2020-02-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Dependency Injection (DI). By now, everyone should have heard about it.\nBut what actually is \"Dependency Injection\" and \"Inversion of Control\"?\nWe can find 'it' implemented in a lot of frameworks nowadays and for\nsomeone not familiar with the concept it might seem like magic.\nIn this session we are going to take a closer look behind the curtains\nof this software design principle and show what DI can do for us and how\na very simplistic version could be implemented in Javascript.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/hot-topic-dependency-injection-lets-talk-about-it",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/dependency-injection-poc",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular",
        "Architecture",
        "Typescript"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 69
    },
    {
      "id": 99,
      "type": "Talk",
      "title": "Angular - BabylonJS Integration Deep Dive",
      "date": "2020-02-06 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "\"Angular - BabylonJS Integration Deep Dive\" - This talk demonstrates how Angular and BabylonJS can be integrated in detail, what key aspects are there, and gives an idea of what can be created with the demonstrated approach.\nYou will learn about the similarities and differences between Angular and BabylonJS, as well as an approach to create a future proof architecture that utilizes the best of both frameworks.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/angular-babylonjs-integration-deep-dive",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-architecture",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Architecture",
        "BabylonJs",
        "Integration",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 67
    },
    {
      "id": 80,
      "type": "Talk",
      "title": "Web Components, ganz ohne Framework! Live & in Action ",
      "date": "2020-01-21 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Jeder kennt es: Kapselung und Wiederverwendung von UI-Komponenten im Web sind sehr mühsam. Meist ist es ein Zusammenkopieren von HTML, CSS und JavaScript, oftmals über eine oder mehrere Dateien verteilt. Vergisst man einen Teil, sieht es nicht wie gewünscht aus oder die Interaktion funktioniert nicht.\nDoch damit ist jetzt Schluss! Mit Web Components eröffnen sich neue Wege im Web, um UI-Komponenten standardisiert und ganz ohne Framework implementieren und verwenden zu können. In dieser Session zeigt Patrick Jahr die wichtigsten Punkte für die erste eigene Web Component mit den Standards HTML Templates, Custom Elements und Shadow DOM. Alles Live mit VSCode, Chrome und den DevTools – in Action!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/web-component-ganz-ohne-framework-live-and-in-action-81b71392-fd8e-4d7f-b0d3-0a828673f7f1",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/rnjs-native-web-components",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        "JavaScript",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 51
    },
    {
      "id": 81,
      "type": "Workshop",
      "title": "Serverless-Architekturen für Java, .NET und node.js – mit Azure Functions & Co.",
      "date": "2019-12-10 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Egal ob Sie Java, .NET oder node.js als Haupttechnologie nutzen: mit Serverless-Ansätzen können Sie schnell \"Gummi auf die Straße\" bringen, um ihre Microservices oder Ihren \"Glue Code\" mir-nichts-dir-nichts entwickeln und bereitstellen zu können. In diesem Workshop sehen Sie Azure Serverless-Dienste ohne großes Marketing-Tamtam im Einsatz. Neben den Grundlagen werden vor allem typische Anwendungsszenarien für Azure Functions, Azure Service Bus, Azure Storage und Co. illustriert. Lehnen Sie sich also zurück und sehen Sie Serverless in Action, mit Java, .NET und JavaScript.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-fur-java-net-und-node-dot-js-mit-azure-functions-and-co",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure Functions",
        "Serverless",
        "Microservices",
        ".NET Core",
        "Azure",
        "Java",
        "JavaScript"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 41
    },
    {
      "id": 76,
      "type": "Workshop",
      "title": "Offline-First: Architektur-Patterns & Implementierung für APIs & Backends",
      "date": "2019-12-10 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\"Keine Internetverbindung\" – ein Satz, den wir alle aus vielen Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form eines HTTP APIs. Wie man sein Backend um eine offline-fähige Architektur erweitert, um es bspw. von einer SPA/PWA nutzen zu können, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Workshop. Denn bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Allgemein werden Themen im API Design, u.a. Synchronisationsstrategien von Anwendungs- und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur – sowohl für neue als auch bestehende Anwendungen – diskutiert. Am Beispiel einer PWA mit einem Backend in Java als auch in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns gezeigt.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/offline-first-architektur-patterns-and-implementierung-fur-apis-and-backends",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-boardist-offline.azurewebsites.net/",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-boardist.azurewebsites.net/games",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 41
    },
    {
      "id": 50,
      "type": "Talk",
      "title": "Entity Framework Core - Performanzoptimierung",
      "date": "2019-12-09 10:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Entity Framework hat Microsoft vor Jahren einen Objekt-Relationalen-Mapper geschaffen, welcher sich in der .NET-Welt mittlerweile einer großen Beliebtheit erfreut. Der O/R-Mapper ermöglicht es, ohne SQL-Kenntnisse auf eine Datenbank sowohl lesend als auch schreibend zuzugreifen. Doch hier verbergen sich Risiken, denn ein O/R-Mapper erweckt den Eindruck, dass der Anwendungsentwickler sich nie wieder mit SQL zu befassen braucht - was für 80% der Abfragen in einer Anwendung auch stimmen mag. Die restlichen 20% können allerdings die gesamte Applikation durch sehr schlechte Antwortzeiten beinah unbenutzbar machen. Die unperformanten SQL-Abfragen sind jedoch nicht die einzige Quelle welche die Benutzbarkeit in Mitleidenschaft ziehen. Es spielt auch eine Rolle wie genau Entity Framework im Code verwendet wird. Nicht selten wird die Tatsache vergessen, dass die LINQ-Abfragen am Ende nicht im Arbeitsspeicher, sondern durch die Datenbank ausgeführt werden – mehr oder weniger „transparent“. In ersten Teil des Vortrags wird gezeigt auf was geachtet werden sollte, um die häufigsten Stolperfallen bei der Verwendung von Entity Framework Core zu vermeiden. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden die Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/it-tage-2019-entity-framework-core-performanzoptimierung",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Execution Plan",
        "MS SQL Server",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 52
    },
    {
      "id": 64,
      "type": "Talk",
      "title": "Progressive Web Apps: Cross-Plattform-Apps über iOS und macOS hinaus",
      "date": "2019-12-04 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\nStellen Sie sich vor, Sie schreiben Ihre App einmal – und sie läuft nicht nur auf macOS und iOS, sondern auch noch auf Windows, Android, Linux, Chrome, Safari, Firefox und Edge! Der alte Java-Traum \"Write once, run anywhere\" wird mit den Progressive Web Apps endlich Wirklichkeit. Christian Liebel stellt Ihnen das neue Anwendungsmodell abseits des App Store einschließlich seiner technologischen Grundlagen vor, und zeigt, was es leisten kann und wo die Grenzen der PWA liegen.",
      "media": [
        {
          "type": "Related Link",
          "url": "https://heise-macdev.de/lecture.php?id=9471&source=0",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-cross-plattform-apps-uber-ios-und-macos-hinaus",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 29
    },
    {
      "id": 74,
      "type": "Talk",
      "title": "“Alles C#, oder was?\" Cross-Plattform Web-Anwendungen mit ASP.NET Core Blazor",
      "date": "2019-11-26 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor bereits in einer frühen Vorab-Version möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/alles-c-number-oder-was-cross-plattform-web-anwendungen-mit-asp-dot-net-core-blazor",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "PWA",
        "Web Technologies",
        "WebAssembly"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 51,
      "type": "Talk",
      "title": "Entity Framework Core - Performanzoptimierung",
      "date": "2019-11-26 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Entity Framework hat Microsoft vor Jahren einen Objekt-Relationalen-Mapper geschaffen, welcher sich in der .NET-Welt mittlerweile einer großen Beliebtheit erfreut. Der O/R-Mapper ermöglicht es, ohne SQL-Kenntnisse auf eine Datenbank sowohl lesend als auch schreibend zuzugreifen. Doch hier verbergen sich Risiken, denn ein O/R-Mapper erweckt den Eindruck, dass der Anwendungsentwickler sich nie wieder mit SQL zu befassen braucht - was für 80% der Abfragen in einer Anwendung auch stimmen mag. Die restlichen 20% können allerdings die gesamte Applikation durch sehr schlechte Antwortzeiten beinah unbenutzbar machen. Die unperformanten SQL-Abfragen sind jedoch nicht die einzige Quelle welche die Benutzbarkeit in Mitleidenschaft ziehen. Es spielt auch eine Rolle wie genau Entity Framework im Code verwendet wird. Nicht selten wird die Tatsache vergessen, dass die LINQ-Abfragen am Ende nicht im Arbeitsspeicher, sondern durch die Datenbank ausgeführt werden – mehr oder weniger „transparent“. In ersten Teil des Vortrags wird gezeigt auf was geachtet werden sollte, um die häufigsten Stolperfallen bei der Verwendung von Entity Framework Core zu vermeiden. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden die Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/ddc-2019-entity-framework-core-performance-optimization",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Performance",
        "MS SQL Server",
        "Execution Plan"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 63,
      "type": "Workshop",
      "title": "Progressive Web Apps für .NET-Entwickler: Frontend der Zukunft",
      "date": "2019-11-25 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET Core eignet sich hervorragend zur Implementierung plattformübergreifender Konsolenanwendungen und Backends. Zuletzt haben nun auch wieder Frontendtechnologien in .NET Core Einzug erhalten. Doch Windows Forms und WPF sind nicht plattformübergreifend einsetzbar. Progressive Web Apps (PWA) hingegen laufen auf allen nennenswerten Mobil- und Desktopplattformen sowie in jedem Browser und bieten sich somit als zukunftssichere Frontendplattform an. Frameworks wie Angular bringen Architekturkonzepte ins Web, die Sie von WPF/XAML schon kennen. Insgesamt eignen sich PWA hervorragend als Frontend für Ihre in .NET Core geschriebene Webschnittstelle. Christian Liebel stellt Ihnen die PWA-Basics vor und zeigt, wie Sie mit einem in .NET Core geschriebenen Backend kommunizieren können.",
      "media": [
        {
          "type": "Related Link",
          "url": "https://www.dotnet-developer-conference.de/programm/#/talk/progressive-web-apps-fur-net-entwickler-frontend-der-zukunft",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-fur-net-entwickler-frontend-der-zukunft",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 61,
      "type": "Talk",
      "title": "Blockchain als Architektur-Komponente – Fluch oder Segen? ",
      "date": "2019-11-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Start der Bitcoin Blockchain im Jahr 2009 wurde der Welt eine verteilte Datenbank zugänglich, bei der nur im Konsens der Teilnehmer über den aktuellen Zustand bestimmt werden kann. Während der Use-Case einer unabhängigen Währung leicht zu greifen ist, fällt es uns bisweilen schwer, die Charakteristiken von Blockchains sinnvoll auf andere Anwendungen zu übertragen. In diesem Talk werden Sie lernen, welche Features die Blockchain einzigartig machen und unter welchen Umständen Sie davon profitieren können - aber auch wann Sie davon absehen sollten. Dieses Wissen wird Patrick Stürmlinger mit Ihnen anhand eines real existierenden Projekts zur Sicherung von Dokumentenarchiven anwenden und vertiefen.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        9
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 23
    },
    {
      "id": 72,
      "type": "Talk",
      "title": "WebComponents: Native Komponenten fürs Web – mal ohne Framework?",
      "date": "2019-11-18 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Begriffe UI-Komponenten oder Controls kennen wir Entwickler seit \"Ewigkeiten\". Durch Kapselung erhalten wir modulare und wiederverwendbare Baukastenelemente, aus denen unsere UI-Anwendungen zusammengesetzt werden. Bisher mussten wir uns im Web eines SPA Frameworks bedienen. Ob Angular, React, Vue.js oder Polymer. Doch keines dieser Frameworks wollte oder konnte so recht mit dem anderen zusammenarbeiten. Dies könnte sich in Zukunft ändern mit WebComponents. Diese beschreiben anhand von Standards wie CustomElements ein Komponentenmodell für das Web und bietet damit erstmal die Möglichkeit, native Komponenten im Browser gänzlich ohne ein Framework oder aber über Framework-Grenzen hinweg einzusetzen. In dieser Session klärt Manuel Rauber wie WebComponents funktionieren, wo die Vorteile und Nachteile liegen – und, vermutlich am spannendsten: er geht der Frage in gewohnt praktischer Manier nach, ob WebComponents mit aktuellen Single-Page Application (SPA) Frameworks wie Angular oder React genutzt und erstellt werden können. Abgerundet wird das Ganze mit einem Ausblick, wie wir künftig Web-Anwendungen mit Web Components entwickeln könnten. Auf zum nächsten Schritt!",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": "https://github.com/thinktecture-labs/web-components-chat"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-mal-ohne-framework?slide=2",
          "label": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-mal-ohne-framework?slide=2"
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net",
          "label": "https://tt-web-components-chat-ng.azurewebsites.net"
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 23
    },
    {
      "id": 62,
      "type": "Talk",
      "title": "Too many challenges, so little time – How can blockchain integration succeed without an army of engineers?",
      "date": "2019-11-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "For a long time, neither politics nor business took the issue of Blockchain seriously. Today, every larger company develops at least proof of concepts, while Blockchain initiatives are proclaimed. However, feasibility quickly reaches its limits when it comes to transforming a PoC into a product. The rapid development of the space, even by IT standards, and a simultaneous lack of Blockchain experts slows down many projects. In this talk, Patrick Stürmlinger points out the difficulties of integration and introduces you to the concept of a Blockchain gateway (including an exemplary implementation), which solves the biggest integration problems such as the different functionality of the different Blockchains, the predictability of costs and the handling of mini-forks. ",
      "media": [],
      "previewSrc": "",
      "speaker": [
        9
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 4
    },
    {
      "id": 67,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-11-09 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, you’ll get to know common performance pitfalls in Angular applications and learn how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Related Link",
          "url": "http://www.devfestka.de/programm",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-9422e7d0-1204-4577-bd57-e6d318cd6c57",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 30
    },
    {
      "id": 65,
      "type": "Talk",
      "title": " PWA Update 2019: Modern Web APIs for even better Progressive Web Apps",
      "date": "2019-11-08 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "PWA is a great application model: These cross-platform, web-based apps work offline, can show push notifications and run in an own window (desktop) or standalone (mobile). Google’s Project Fugu will bring even more native functionality to the web, such as notification badges, wake locks and native file system access. Thinktecture’s Christian Liebel, GDE for Web Technologies, shows you how those APIs will pave the way for an even brighter future for Progressive Web Apps.",
      "media": [
        {
          "type": "Related Link",
          "url": "http://www.devfestka.de/programm",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-2019-modern-web-apis-for-even-better-progressive-web-apps",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 30
    },
    {
      "id": 66,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-getriebene Microservices mit Azure Functions & Co. – auch für Java-Entwickler",
      "date": "2019-11-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Warum muss es \"Serverless oder Microservices\" sein? Es sollte vielmehr \"Microservices mit Serverless\" heißen! Basierend auf einigen der allgemein anerkannten Prinzipien von Microservices können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen - nennen wir sie mal Nanoservices. Christian Weyer zeigt Ihnen einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Diensten & Tools. Erleben Sie Serverless Azure mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier in Aktion - jenseits der typischen Functions-as-a-Service-Beispiele.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-getriebene-microservices-mit-azure-functions-and-co-auch-fur-java-entwickler-1231a20a-87da-4e62-af77-74ee9f8279da",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 32
    },
    {
      "id": 60,
      "type": "Talk",
      "title": "Advanced Progressive Web Apps: Push notifications under control",
      "date": "2019-10-21 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, Progressive Web Apps (PWA) are one of the hottest topics on the web today. A PWA should feel like a real app, including the ability to show push notifications. In this talk, Thinktecture’s Christian Liebel (@christianliebel) will show you how to implement push messaging in your PWA or website using the Push API, including a look at helpful libraries and third-party services. As a part of Google’s Project Fugu, push notifications will get even better thanks to the advent of the Badging API and Notification Triggers.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/advanced-progressive-web-apps-push-notifications-under-control-81c57f71-2200-4494-b14c-8a03c45697e6",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://javascript-conference.com/web-development-architecture/advanced-progressive-web-apps-push-notifications-under-control/",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-munich-2019-push",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=fKDdulqFGSU",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 6
    },
    {
      "id": 59,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-10-19 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, we’ll have a look at common performance pitfalls in Angular applications and how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone, lazy loading, server-side rendering and Service Worker support. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Related Link",
          "url": "https://codecamp.ro/timisoara#agenda",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-f862942b-25a1-4a41-a82c-7df93c77c505",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 28
    },
    {
      "id": 58,
      "type": "Keynote",
      "title": "The Web in 2020: wohin sich das Web bewegt",
      "date": "2019-10-15 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Einmal im Jahr trifft sich das World Wide Web Consortium (W3C) zur Meetingwoche. Christian Liebel von Thinktecture war beim diesjährigen Treffen der Arbeitsgruppen in Japan dabei und hat die neuesten Informationen im Gepäck: Welche Spezifikationen gerade im Gespräch sind – welche neuen Schnittstellen das Web bekommen soll – und was das für Webanwendungen im Jahr 2020 heißen könnte.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/the-web-in-2020-wohin-sich-das-web-bewegt",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://www.web-developer-conference.de/programm/#/talk/keynote-tba",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 27
    },
    {
      "id": 57,
      "type": "Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2019-10-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-2dfd9043-3590-4810-9621-64e02eadb77c",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://liebel.io/ngp19h",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 71,
      "type": "Workshop",
      "title": "Immer & überall: Offlinefähige Progressive Web Apps – am Beispiel Angular",
      "date": "2019-10-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "“Keine Internetverbindung” – ein Satz, den wir alle aus genutzten Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form einer Web API. Bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Gerade in der heutigen Zeit, in der Menschen immer mobiler werden, in Autos, Zügen und Flugzeugen unterwegs sind und arbeiten, benötigt man oftmals offline Zugriff auf die Anwendungsdaten. Wie man diese echt offline-fähigen Single-Page Applications/Progressive Web Apps realisiert, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Ganztagesworkshop. Allgemein werden Themen wie Synchronisationsstrategien von Anwendungsdaten und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur sowohl für neue als auch bestehende Anwendungen diskutiert. Am Beispiel einer Angular-basierten App mit einem exemplarischen Backend in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns implementiert.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/immer-and-uberall-offlinefahige-progressive-web-apps-am-beispiel-angular",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 70,
      "type": "Workshop",
      "title": "WebComponents: Native Komponenten fürs Web - ohne und mit Frameworks",
      "date": "2019-10-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Der aktuelle Single-Page Application und der frühere Windows-Entwickler kennt sie seit „Ewigkeiten”: UI-Komponenten, oder Controls. Durch Kapselung erhalten wir modulare und wiederverwendbare Baukastenelemente, aus denen unsere UI-Anwendungen zusammengesetzt werden. Bisher mussten wir uns im Web eines SPA Frameworks bedienen – ob Angular, ReactJS, Vue.js oder Polymer. Doch keines dieser Frameworks wollte oder konnte so recht mit dem anderen zusammenarbeiten. Dies könnte sich in Zukunft ändern mit WebComponents. Diese beschreiben anhand von Standards wie CustomElements ein Komponentenmodell für das Web und bietet damit erstmal die Möglichkeit, native Komponenten im Browser gänzlich ohne ein Framework oder aber über Framework-Grenzen hinweg einzusetzen. \nIn dieser Session klären Manuel Rauber und Patrick Jahr wie WebComponents funktionieren, wo die Vorteile und Nachteile liegen – und, vermutlich am spannendsten: sie gehen der Frage in gewohnt praktischer Manier nach, ob WebComponents mit aktuellen Single-Page Application (SPA) Frameworks wie Angular genutzt und erstellt werden können und welche Rolle Ivy dabei spielt. Abgerundet wird das Ganze mit einem Ausblick, wie wir künftig Web-Anwendungen mit Web Components entwickeln könnten. Auf zum nächsten Schritt!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-ohne-und-mit-frameworks",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-2019-fall-web-components",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": null
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        11,
        1
      ],
      "tags": [
        "Angular",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 56,
      "type": "Workshop",
      "title": "Robuste Design Systems mit Storybook und Angular: vom Konzept zur lebendigen Anwendung",
      "date": "2019-10-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit den stetig wachsenden Möglichkeiten, die Cross-Platform-Anwendungen bieten, wachsen auch die Anforderungen an deren Design. Skalierbarkeit, Flexibilität und Wandelbarkeit gehören zu den Grundprinzipien eines modernen User-Interfaces. Andreas Wissel und Christian Liebel erarbeiten mit Ihnen in diesem Workshop anhand von Praxisbeispielen einen robusten Workflow. Mit Storybook und Angular lassen sich so isolierte, test- und wartbare Komponenten im Handumdrehen umsetzen. Ihre Designer und Entwickler werden es lieben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/robuste-design-systems-mit-storybook-und-angular-vom-konzept-zur-lebendigen-anwendung?slide=34",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://bit.ly/ng-ds",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 55,
      "type": "Workshop",
      "title": "Hands-on Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2019-09-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-moderne-cross-plattform-losungen",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/html5-javascript/cross-plattform-workshop/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 54,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum",
      "date": "2019-09-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2019-electron-cordova-pwa",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/web-development/electron-cordova-pwa-was-wann-wie-und-warum/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 49,
      "type": "Talk",
      "title": "Advanced ASP.NET Core Web APIs: testen und dokumentieren – aber richtig!",
      "date": "2019-09-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Jeder baut Web-APIs, oder? Leider ist es nicht damit getan, ein neues Projekt zu erzeugen, ein paar Controller zu implementieren und dann sein Web-API zu deployen. Zum einen sollte es vernünftig dokumentiert werden, damit die Entwickler, die mit unserem API arbeiten müssen, auch wissen, was es kann und wie es funktioniert. Zum anderen sollten wir selber auch sicherstellen, dass unser API das tut, was es soll. In dieser Session zeigt Ihnen Sebastian Gingter, wie man diese beiden Fliegen mit einer Klappe schlagen kann. Mit Hilfe von Open API/Swagger erzeugen wir erst eine umfassende, ständig aktuelle und lebendige Dokumentation unseres APIs. Im zweiten Schritt generieren wir aus dieser Dokumentation auch gleich Tests für das API-Test-Tool Postman, die wir dann mit etwas JavaScript Testcode anreichern und diese sogar als automatisierte Integrationstests laufen lassen können. Web-APIs jenseits von Hello World, mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-fall-2019-openapi",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=8bU6O_fMr5U",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-fall-2019-openapi",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 73,
      "type": "Talk",
      "title": "Blockchain für Architekten und Entwickler – was steckt wirklich dahinter?",
      "date": "2019-09-23 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "In wenigen Jahren werden wir Blockchains so selbstverständlich nutzen wie heute Datenbanken – und das nicht wegen seltsamer Kryptowährungen, die bereits heute schon mehr an Tulpenkrise als an seriöses Software-Engineering denken lassen. In dieser Session präsentiert Ingo Rammer die konkreten technischen Motivationen, Hintergründe und Zusammenhänge, die den Hype überstehen werden. Sie lernen die fundamentalen Elemente, Arten und Betriebsmodi von öffentlichen und privaten Blockchains kennen und werden wissen, warum Smart Contracts weder „smart“ noch „Verträge“, sondern einfach Regeln zur Prüfung von replizierten Transaktionen sind. Nach diesem Vortrag haben Sie eine solide Basis, um zu beurteilen, ob – und wenn ja, in welchen Bereichen – Ihre Anwendungsfälle von der Nutzung von Blockchain-Technologien profitieren könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/blockchain-fur-architekten-und-entwickler-was-steckt-wirklich-dahinter-8ed00546-c53f-431a-ac74-dc26fe2956d6",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=brw9SHxPcYM",
          "label": null
        },
        {
          "type": "Slides-Originalformat",
          "url": "https://thinktecture2com.sharepoint.com/:p:/s/prj-conferences/ERwa_ZzYxC5KgC6tvvbWtFIB3vgmaUigt9mlfaATtbMllQ?e=c1LPgw",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 53,
      "type": "Talk",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2019-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen am Beispiel einer in Angular geschriebenen Anwendung die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.\n\nDieser Talk richtet sich an Entwickler, die grob wissen, um was es bei Progressive Web Apps geht. In diesem Track gibt es auch den passenden Grundlagenvortrag („Progressive Enhancement im Web: PWA-Grundlagen“), der Ihnen dieses Verständnis vermittelt. Bitte nehmen Sie ein Smartphone mit, um ggf. die Demoanwendung auf dem eigenen Gerät ausprobieren zu können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-82e2dd43-1bc2-49cc-bdbc-30c1e618ba22",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/web-development/pwa-deep-dive-offline-anwendungen-im-griff/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 125,
      "type": "Workshop",
      "title": "Moderne Businessanwendungen mit Angular, .NET Core und Azure – Weitblick für Backend- und Frontend-Entwickler",
      "date": "2019-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Alle reden darüber: Mobile-Apps, Webtechnologien und Cloud. Die Welt besteht nicht mehr nur aus Windows allein und Ihr Job als Entwickler ändert sich. In diesem Workshop zeigen Thorsten Hans und Boris Wilhelms interessierten .NET-Entwicklern, welche architekturellen Ideen und Konzepte hinter modernen Businessanwendungen auf Basis von .NET Core, Azure Functions, Angular und TypeScript stecken.\n\nLernen Sie praktische Lösungen für eine Reihe diverser Problem- und Fragestellungen kennen. Wie kann man geräte- und plattformübergreifend Businessanwendungen mit Angular bauen? Wie kann man dies für Windows, iOS, Android und fürs Web gleichermaßen realisieren? Wie können diese Anwendungen Daten und Anwendungslogik mit Hilfe Service-basierter Architekturen nutzen? Dieser Workshop liefert Antworten auf all diese interessanten Fragen. Moderne Businessanwendungen mit Angular, Cordova, Electron, .NET Core und Azure – in Action!",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4,
        14
      ],
      "tags": [
        "Angular",
        ".NET Core",
        "Azure Functions",
        "Azure",
        "Electron",
        "Serverless",
        "SPA",
        "Cordova",
        "Architecture"
      ],
      "primaryTag": "Architecture",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 52,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-08-29 18:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, you’ll get to know common performance pitfalls in Angular applications and learn how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ngde2019-perf",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-e85cc65c-9ba7-4300-b10f-526ad3ba2ecd",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=moUCZoJfhwY",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 24
    },
    {
      "id": 46,
      "type": "Workshop",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-07-03 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, we’ll have a look at common performance pitfalls in Angular applications and how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone, lazy loading, server-side rendering and Service Worker support. Let’s make your Angular app blazing fast!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://youtu.be/SY7-8JJAtGM",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 30,
      "type": "Talk",
      "title": "Mehr als nur HTTP-APIs: Pragmatische Serverless Backends mit JavaScript / TypeScript und Azure Functions",
      "date": "2019-06-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Serverless ist in aller Munde und so gut wie jede JavaScript-basierte Anwendung braucht irgendeine Art von Backend. Warum also nicht die beiden Ideen vereinen? In dieser Session zeigt Christian anhand von Azure Functions, wie man mit TypeScript effizient eigene HTTP APIs baut, ohne großes Infrastruktur-Tamtam. \nAber damit nicht genug: Basierend auf allgemein anerkannten Prinzipien können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen. Sieh dafür einen pragmatischen Ansatz mit Functions, Service Bus und weiteren Azure-Cloud-Diensten sowie Tools. Eben mehr als nur HTTP-APIs.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/typescript-und-azure-functions",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Serverless",
        "Azure Functions",
        "Typescript",
        "JavaScript",
        "Azure"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 15
    },
    {
      "id": 44,
      "type": "Talk",
      "title": "PWA-Update: Neue Webschnittstellen für noch bessere Progressive Web Apps",
      "date": "2019-06-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps funktionieren offline, können Pushbenachrichtigungen darstellen und laufen auf jeder Plattform von Android über Firefox bis Windows. Außerdem können Entwickler auf alle Funktionen zugreifen, für die es eine Webschnittstelle gibt. In der Vergangenheit waren dies etwa Gamepads oder der Standort des Anwenders. Mit neuen Webschnittstellen will das World Wide Web Consortium (W3C) die Lücke zwischen nativen Apps und PWA weiter schließen: Mithilfe der Writable Files API sollen PWA auf einen Teilbereich des nativen Dateisystems zugreifen können, die Badging API erlaubt das Setzen von Notification-Badges und die Shape Detection API erlaubt das Erkennen von Barcodes, Gesichtern oder Text in Bildern. Christian Liebel zeigt Ihnen brandheiße Web-APIs, die Progressive Web Apps noch mächtiger machen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-neue-webschnittstellen-fur-noch-bessere-progressive-web-apps-6e9b8f36-27c0-4835-afd0-a4f135364c48",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 21
    },
    {
      "id": 45,
      "type": "Talk",
      "title": "Web-Payments neu gedacht: Abrechnen mit der Payment Request API",
      "date": "2019-06-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Anbieter von Onlineshops, Abodiensten oder Progressive Web Apps kennen das Problem: Sobald Zahlungen vom Nutzer angefordert werden sollen, wird die Sache komplex. Anwender müssen die immerselben Daten in vor allem mobil schwer zu bedienende Formulare eintragen und eventuell wird der Bedienfluss durch eine Weiterleitung zu einem externen Zahlungsdienstleister unterbrochen. Wäre es nicht schön, wenn der Webbrowser die Anwenderdaten vorausfüllen und der Nutzer auf komfortable Methoden wie Apple Pay oder Google Pay zurückgreifen könnte? Die Payment Request API bringt genau diese Features in Web. Christian Liebel von Thinktecture zeigt Ihnen, wofür sich diese plattformübergreifend einsetzbare Webschnittstelle eignet und wo ihre Grenzen liegen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-payments-neu-gedacht-abrechnen-mit-der-payment-request-api",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 21
    },
    {
      "id": 29,
      "type": "Workshop",
      "title": "Azure in Action: Pragmatische Cloud-Lösungen mit Containern & Serverless",
      "date": "2019-06-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "IDE öffnen, „File – New Project – Cloud“, OK klicken und fertig. Oder? Nun, nicht ganz. Denn egal ob AWS, GCP oder eben Azure: am Ende des Tages werden Sie sich fragen, warum, wann und wie gehe ich in die Cloud? Genau diese Fragestellungen wollen Thorsten Hans und Christian Weyer für Java-, node.js- und .NET-Entwickler in diesem Workshop beantworten. Anhand diverser Use Cases werden mögliche Wege mit, über und in Azure diskutiert. Was bedeuten Architekturansätze wie Cloud-Native Microservices und Serverless Microservices? Wie gehe ich bei Brownfield-Projekten vor und wie kann ich Greenfield-Lösungen effizient in Azure realisieren? Wo liegen Unterschiede und Benefits von datengetriebenen und von ereignisgetriebenen Ansätzen? Wie kann ich mit dem Sammelsurium an Patterns, Technologien und Tools in Azure kosteneffektiv hantieren und dennoch flexibel sein? All dies werden wir anhand praktischer Beispiele und pragmatischer Lösungen in interaktiver Art und Weise adressieren. Sehen Sie PaaS, Web Apps, Containers, Orchestrators, Serverless, Functions & Co. mit der Azure-Cloud anhand von .NET-Demos in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/azure-in-action-pragmatische-cloud-losungen-mit-containern-and-serverless-1e2ffa1a-2a42-4355-8c53-3676a71176ff",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/azure-functions-extensibility",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/aks-demo-app",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices",
        "Serverless",
        "Containers",
        "Kubernetes",
        "AKS",
        "Azure Functions"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 14
    },
    {
      "id": 48,
      "type": "Workshop",
      "title": "Einmal API mit allem, bitte: ASP.NET Core MVC und SignalR in Action!",
      "date": "2019-06-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne APIs können so viel mehr als nur gängige HTTPS-Endpunkte bereitzustellen: Zum einen die Möglichkeit zur (optionalen) Echtzeitkommunikation auf Basis von WebSockets. Mit Hilfe von Microsofts Open-Source-Plattform ASP.NET Core MVC und SignalR lassen sich im Handumdrehen Web-APIs und Push Services entwickeln. Doch damit nicht genug: Weitere Themen wie Security, Rate Limiting, eine sinnvolle Dokumentation und ein vernünftiges, zentralisiertes Logging sind mit von der Partie. Und jeder dieser einzelnen Bereiche bietet uns eine neue Herausforderung.\n\nSebastian Gingter und Manuel Rauber zeigen Ihnen in diesem Workshop, wie man mit .NET Core moderne APIs auf und für verschiedene Plattformen entwickeln kann. Zusätzlich wird durch den Einsatz von Entity Framework Core die Anbindung an unterschiedliche Datenbanken ermöglicht. Durch den Einsatz weiterer Open-Source-Bibliotheken für Logging oder zur automatischen Generierung einer Swagger/OpenAPI-Dokumentation ergänzen wir das API um weitere Funktionalitäten. Eine Clientanwendung, das Deployment auf unterschiedliche Plattformen und das Deployment in die Cloud runden den Workshop ab – vollständig End-to-end und einmal mit allem eben!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/einmal-api-mit-allem-bitte-asp-dot-net-core-mvc-und-signalr-in-action-164d1e3e-189b-4b6a-95a3-33003e3f3f05",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-ms-summit-spring-2019-services-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        1
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 14
    },
    {
      "id": 43,
      "type": "Workshop",
      "title": "Progressive Web Apps for PHP Developers in action!",
      "date": "2019-06-05 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps work anywhere from iOS to Windows, run offline and can make use of native functionality such as camera access or geolocation. Thinktecture’s Christian Liebel shows you the technological foundations of this very promising application model—in action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-for-php-developers-in-action",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 20
    },
    {
      "id": 42,
      "type": "Talk",
      "title": "Progressive Web Apps for .NET Developers: An Overview",
      "date": "2019-05-28 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps work anywhere from iOS to Windows, run offline and can make use of native functionality such as camera access or geolocation. Thinktecture’s Christian Liebel shows you the technological foundations of this very promising application model, demonstrates how your PWAs can integrate with the Windows Runtime and what the new Chromium-based Edge means for Progressive Web Apps.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-for-net-developers-an-overview",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 19
    },
    {
      "id": 82,
      "type": "Talk",
      "title": "Advanced Azure Functions – beyond HTTP GET /helloworld",
      "date": "2019-05-27 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Azure Functions enable to swiftly create serverless applications & services. But in practice, we soon face situations where the simple Hello-World-ish approaches do no longer suffice. In this talk, Christian Weyer shows you how to use Microsoft's Functions-as-a-Service (FaaS) platform to realize scenarios beyond the usual static triggers & bindings, like HTTP. He illustrates how you can secure your functions, create your own custom extensions, use dynamic bindings to implement tricky use cases. Hosting Azure Functions is also discussed because it is not always possible to use the public Cloud as-is. Come and see Azure Functions with C # in action - beyond Hello World.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/helloworld",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Azure Functions",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 19
    },
    {
      "id": 27,
      "type": "Talk",
      "title": "Angewandte Serverless Microservices mit Azure Functions & Co.",
      "date": "2019-05-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Warum muss es \"Serverless oder Microservices\" sein? Es sollte vielmehr \"Microservices mit Serverless\" heißen! Basierend auf einigen der allgemein anerkannten Prinzipien von Microservices können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen - nennen wir sie mal Nanoservices. Christian Weyer zeigt Ihnen einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Diensten & Tools. Erleben Sie Serverless Azure mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier in Aktion - jenseits der typischen Functions-as-a-Service-Beispiele.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/angewandte-serverless-microservices-mit-azure-functions-and-co",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 12
    },
    {
      "id": 41,
      "type": "Talk",
      "title": "Advanced Progressive Web Apps: Push notifications under control",
      "date": "2019-05-13 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, Progressive Web Apps (PWA) are one of the hottest topics on the web today. A PWA should feel like a real app, including the ability to show push notifications. In this talk, Thinktecture’s Christian Liebel (@christianliebel) will show you how to implement push messaging in your PWA or website using the Push API, including a look at helpful libraries and third-party services. As a part of Google’s Project Fugu, push notifications will get even better thanks to the advent of the Badging API and Notification Triggers.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/advanced-progressive-web-apps-push-notifications-under-control-61ddbb4e-026d-4beb-a251-eaeea2ab1730",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 18
    },
    {
      "id": 40,
      "type": "Talk",
      "title": "PWA-Update: Neue Webschnittstellen für noch bessere Progressive Web Apps",
      "date": "2019-05-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps funktionieren offline, können Pushbenachrichtigungen darstellen und laufen auf jeder Plattform von Android über Firefox bis Windows. Außerdem können Entwickler auf alle Funktionen zugreifen, für die es eine Webschnittstelle gibt. In der Vergangenheit waren dies etwa Gamepads oder der Standort des Anwenders. \nMit neuen Webschnittstellen will das World Wide Web Consortium (W3C) die Lücke zwischen nativen Apps und PWA weiter schließen: Mithilfe der Writable Files API sollen PWA auf einen Teilbereich des nativen Dateisystems zugreifen können, die Badging API erlaubt das Setzen von Notification-Badges und die Shape Detection API erlaubt das Erkennen von Barcodes, Gesichtern oder Text in Bildern. Christian Liebel zeigt Ihnen brandheiße Web-APIs, die Progressive Web Apps noch mächtiger machen.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-neue-webschnittstellen-fur-noch-bessere-progressive-web-apps",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 17
    },
    {
      "id": 26,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-getriebene Microservices mit Azure Functions & Co. – auch für Java-Entwickler",
      "date": "2019-05-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Microsofts Azure Cloud auf der JAX? Ja, in der Tat. Denn nicht immer muss oder soll es AWS (Amazon Web Services) oder GCP (Google Cloud Platform) sein. Azure bietet mittlerweile eine holistische Plattform für so gut wie jede Cloud-Anforderung an. Auch und vor allem in den Bereichen Cloud Native und Serverless investiert Microsoft sehr viel. In dieser Session zeigt Christian Weyer von Thinktecture – ohne großes Marketing-Tamtam – neben den Grundlagen vor allem typische Anwendungsszenarien für Azure Functions, Azure Service Bus und Co. Fokus soll dabei auf Event-getriebene Microservices-Architekturen liegen. Lehnen Sie sich also zurück und sehen Sie \"die andere Cloud\" – auch mit Java – in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-getriebene-microservices-mit-azure-functions-and-co-auch-fur-java-entwickler",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core",
        "Node.js",
        "Java"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 11
    },
    {
      "id": 25,
      "type": "Talk",
      "title": "Blockchain in 2019: Wichtigste Fakten & sinnvolle Use Cases – jenseits des Hypes",
      "date": "2019-05-07 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blockchain in 2019: Wichtigste Fakten & sinnvolle Use Cases – jenseits des Hypes",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blockchain-in-2019-wichtigste-fakten-and-sinnvolle-use-cases-jenseits-des-hypes",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 10
    },
    {
      "id": 123,
      "type": "Talk",
      "title": "Advanced Azure Functions",
      "date": "2019-04-27 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Azure Functions makes it easy to quickly create simple Serverless applications & services. However in the rarest cases \"Hello World\"-like implementations are sufficient in practice. So, can we implement complex requirements with that technology? Yes we can. In this talk Boris Wilhelms shows you how you can use Microsofts FaaS-platform to implement scenarios beyond the common triggers and bindings and how you can secure your Functions. The topic of hosting is also covered since it is not always possible to use the public cloud, but you can use and benefit from the Serverless concept in a on-premises environment.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/advanced-azure-functions-at-global-azure-bootcamp-2019-frankfurt",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/gab-ffm-2019",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Azure Functions"
      ],
      "primaryTag": "Azure Functions",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 78
    },
    {
      "id": 16,
      "type": "Talk",
      "title": "Code your Azure Environments with Terraform",
      "date": "2019-04-26 22:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 5
    },
    {
      "id": 24,
      "type": "Talk",
      "title": "Pragmatic Serverless Microservices with Azure Functions & Co. - more than FaaS",
      "date": "2019-04-10 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Why does it have to be Serverless versus Microservices? Couldn’t it be rather Microservices with Serverless? Based on some of the well-accepted principles of Microservices, we can use Serverless architectures and technologies to build highly focused Microservices – which we might call Nanoservices. Christian Weyer will show you a pragmatic approach on how to build Nanoservices with Azure Functions, Azure Service Bus, Azure Storage and friends. Join him to see Serverless Azure in action, with .NET Core, JavaScript and Java – beyond the typical Functions-as-a-Service examples.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatic-serverless-microservices-with-azure-functions-and-co-more-than-faas-60687a12-ba7f-487a-a8e2-922a14b162ed",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 9
    },
    {
      "id": 23,
      "type": "Talk",
      "title": "Advanced Serverless Azure: Extending Azure Functions to meet your Runtime Infrastructure Needs",
      "date": "2019-04-09 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Bindings and runtime extensions are the engines of Azure Functions that fuel Azure-based Serverless architectures. In this short talk, Christian Weyer will show you in a live coding session how you can build and use your own custom bindings and extensions. Based on a real project’s requirements, he will walk you through the internals of Azure Functions and create a fully functional custom binding that implements patterns for reusing custom infrastructure needs.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/advanced-serverless-azure-extending-azure-functions-to-meet-your-runtime-infrastructure-needs",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/azure-functions-extensibility",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 9
    },
    {
      "id": 22,
      "type": "Talk",
      "title": "Pragmatische Serverless Microservices mit Azure Functions & Co. (Kaa Sörwa unn Söavis-Gschmarri – so Cloud-Gwerch hald)",
      "date": "2019-04-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das ist eine Hip, das andere ist Hype. Aber muss es Serverless *oder* Microservices sein? Vielmehr sollte es Microservices *mit* Serverless heißen. Basierend auf allgemein anerkannten Prinzipien können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices ohne viel Infrastruktur-Tamtam zu erstellen - nennen wir sie der Einfachheit halber Nanoservices. Der Unterfranke und DDF-Pionier Christian Weyer zeigt euch einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Cloud-Diensten & Tools. Erleben Sie Serverless Azure in Aktion mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier - auf dem Server, äh.... #KaaSörwa",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-serverless-microservices-mit-azure-functions-and-co-kaa-sorwa-unn-soavis-gschmarri-so-cloud-gwerch-hald",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Angular",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 39,
      "type": "Talk",
      "title": "PWA Deep-Dive: Offline-Anwendungen im Griff",
      "date": "2019-04-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps bieten sich als plattformübergreifendes Anwendungsmodell als idealer Partner für in .NET geschriebene Backends an. Zentrale Eigenschaft einer jeden Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: Im Tunnel, im Park oder im Dschungel. Zur Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen die Mechanik hinter der dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit ihren nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offline-anwendungen-im-griff",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 38,
      "type": "Workshop",
      "title": "Frontend der Zukunft: Progressive Web Apps für .NET-Entwickler",
      "date": "2019-04-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET Core eignet sich hervorragend zur Implementierung plattformübergreifender Konsolenanwendungen und Backends. Zuletzt haben nun auch wieder Frontendtechnologien in .NET Core Einzug erhalten. Doch Windows Forms und WPF sind nicht plattformübergreifend einsetzbar. Progressive Web Apps (PWA) hingegen laufen auf allen nennenswerten Mobil- und Desktopplattformen sowie in jedem Browser und bieten sich somit als zukunftssichere Frontendplattform an. Frameworks wie Angular bringen Architekturkonzepte ins Web, die Sie von WPF/XAML schon kennen. Insgesamt eignen sich PWA hervorragend als Frontend für Ihre in .NET Core geschriebene Webschnittstelle. Christian Liebel stellt Ihnen die PWA-Basics vor und zeigt, wie Sie mit einem in .NET Core geschriebenen Backend kommunizieren können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/frontend-der-zukunft-progressive-web-apps-fur-net-entwickler-52418789-d092-4bf2-9e4d-c001b320f31b",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 68,
      "type": "Workshop",
      "title": "Immer und überall: offlinefähige Progressive Web Apps – am Beispiel Angular",
      "date": "2019-03-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\"Keine Internetverbindung\" – ein Satz, den wir alle aus genutzten Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form eines Web API. Bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Gerade in der heutigen Zeit, in der Menschen immer mobiler werden, in Autos, Zügen und Flugzeugen unterwegs sind und arbeiten, benötigt man oftmals offline Zugriff auf die Anwendungsdaten. Wie man diese echt offline-fähigen Single-Page Applications/Progressive Web Apps realisiert, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Ganztagesworkshop. Allgemein werden Themen wie Synchronisationsstrategien von Anwendungsdaten und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur sowohl für neue als auch bestehende Anwendungen diskutiert. Am Beispiel einer Angular-basierten App mit einem exemplarischen Backend in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns implementiert.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/immer-und-uberall-offlinefahige-progressive-web-apps-am-beispiel-angular",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 16
    },
    {
      "id": 37,
      "type": "Workshop",
      "title": "Progressive Web-Apps mit Angular: hands-on",
      "date": "2019-03-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind das App-Modell der Zukunft. Das sagt zumindest Google und hat damit nichts Geringeres vor, als App-Stores von Mobilgeräten zu verbannen. Stattdessen lautet der Gedanke: Offlinefähigkeit, Push Notifications und schnelles Startverhalten sollen ins Web kommen. Ein Fingertipp reicht und eine mobile Website wird zur installierten App auf dem Gerät einschließlich Homescreen-Icon: Android, iOS, Windows, macOS und Linux auf einen Streich.\nChristian Liebel von Thinktecture zeigt Ihnen, wie Sie mit Angular, Angular Material und der Angular CLI PWAs entwickeln und somit sanft und sacht die Schlucht zwischen reinen Web-Sites, Web-Apps und hybriden/nativen Apps schließen können. Und Sie können mitmachen: Dazu benötigen Sie mindestens einen Laptop und optional ein aktuelles Smartphone mit iOS oder Android.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-hands-on",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 16
    },
    {
      "id": 36,
      "type": "Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2019-03-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen an nur einem Tag anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-3ee1e5ae-aa20-466b-b362-a101daf26e77",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 15,
      "type": "Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2019-03-20 23:00:00.0000000",
      "language": "DE",
      "billed": true,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen an nur einem Tag anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Speakerdeck",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-3ee1e5ae-aa20-466b-b362-a101daf26e77",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 35,
      "type": "Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2019-03-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 34,
      "type": "Talk",
      "title": "Progressive Web Apps update 2019: Web Goes Native (RheinNeckarJS)",
      "date": "2019-03-12 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, PWA is one of the hottest topics in Web space today. Progressive Web Apps are cross-platform, support browsers, desktop and mobile platforms—a perfect match for your business application. A PWA should feel like a real app we are used to since years: users want an icon on the home screen as well was native-like performance and feature richness. Christian Liebel, author of “Progressive Web Apps: Das Praxisbuch” and consultant at Thinktecture, shows you how to develop your first PWA, implement offline availability using service workers and send push notifications even when your app is closed. In addition, Christian brings you up to date on modern web APIs and service worker enhancements that will further enhance PWA functionality. Come and bring your PWA questions with you!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-update-2019-web-goes-native-e93aacbc-e56e-46e4-9306-4632dd21b39d",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 33,
      "type": "Workshop",
      "title": "Hands-on Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2019-03-01 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-echte-cross-plattform-losungen-5b162ec3-4953-40f7-aff4-1e49fd3ffc0b",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2019-pwa-workshop",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 5,
      "type": "Workshop",
      "title": "Workshop: Von null auf hundert – Blockchain-Anwendungen mit Hyperledger Fabric",
      "date": "2019-02-28 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "In diesem Ganztagesworkshop erfahren Sie, wie Sie – ganz ohne CPU-intensives Mining und ohne Kryptowährungen – auf der Basis der Open-Source-Plattform \"Hyperledger Fabric\" eine private (\"permissioned\") Blockchain zwischen Geschäftspartnern aufbauen und wie Sie mit Node.js dafür Smart Contracts und HTTP-Endpunkte entwickeln können. Nach einer kurzen Zusammenfassung der technischen Blockchain-Grundlagen sehen Sie, wie eine private Blockchain auf Basis von Hyperledger Fabric konfiguriert und betrieben wird. Danach lernen Sie die Besonderheiten dieser Umgebung zur Entwicklung von Smart Contracts kennen und wie Sie Tools und Vorgehensweisen zum Deployen, Debuggen und Verwalten Ihrer Anwendungen nutzen können. Neben den typischen Sicherheitsaspekten von Blockchain-Anwendungen im Geschäftsumfeld lernen Sie auch verschiedene Versionierungs- und Governance-Strategien zum langfristigen Betrieb Ihrer Smart Contracts kennen. Zu guter Letzt sehen Sie, wie Sie mit zwischengeschalteten Node.js APIs zwischen .NET-Anwendungen und den entstandenen Smart Contracts bidirektional kommunizieren können, um den Datenaustausch zwischen Ihren existierenden Systemen und der Blockchain-Umgebung zu erlauben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/workshop-von-null-auf-hundert-blockchain-anwendungen-mit-hyperledger-fabric",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Hyperledger",
        "Node.js"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 2,
      "type": "Talk",
      "title": "Hyperledger Fabric: Die Open-Source Basis für Ihre Blockchain",
      "date": "2019-02-27 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "In dieser Session stellt Ihnen Ingo Rammer die von der Linux Foundation betreute open-source Blockchain-Basistechnologie Hyperledger Fabric vor. Sie lernen die Grundlagen von Fabric für den Betrieb von privaten bzw. berechtigungsgestützten Blockchains kennen und erfahren die dafür geeigneten Einsatzgebiete, Architekturentscheidungen sowie Sicherheitsaspekte. Diese Session ist eine optimale Grundlage, um Sie für die Folgesession \"Coding Hyperledger Fabric – Smart Contracts und Clients mit Node.js\" vorzubereiten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/hyperledger-fabric-die-open-source-basis-fur-ihre-blockchain-f198d4d3-90fc-497d-bdde-fdd35fcf4731",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Hyperledger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 4,
      "type": "Talk",
      "title": "Coding Hyperledger Fabric – Smart Contracts und Clients mit Node.js",
      "date": "2019-02-27 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "Aufbauend auf den Inhalten der Session \"Hyperledger Fabric: die Open-Source Basis für Ihre Blockchain\" zeigt Ihnen Ingo Rammer in dieser Session, wie Sie die SDKs für Fabric in Ihrem Code nutzen können. Sie lernen, wie Sie von ihrem Client aus Transaktionen initiieren und wie Sie Chaincode (Smart Contracts in Fabric) erstellen können, um diese zu verarbeiten. Sie sehen, wie Sie eventgesteuert auf Ereignisse der Blockchain reagieren können und wie Sie mit den unterschiedlichen Arten von Daten Ihrer Blockchain interagieren. Zu guter Letzt erfahren Sie, wie Sie mit Fabric einen typischen Code>Test>Debug>Deploy-Zyklus umsetzen können.\n\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/coding-hyperledger-fabric-smart-contracts-und-clients-mit-node-dot-js",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Node.js",
        "Hyperledger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 20,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-basierte Microservices mit Azure Functions & Co.",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm… Ja, in der Tat. Der Serverless-Ansatz verspricht eine niedrige Hürde, um den Einstieg in Microservices zu finden. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand praktischer Anwendungsfälle. Auf Basis erprobter Designpatterns können Sie mit Azure Functions, Azure Service Bus und Co. in kurzer Zeit sowohl einfache als auch komplexe Services-Anwendungen designen und implementieren – lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Kommen Sie vorbei – eventuell lernen Sie die Basis für Ihr neues Businesssoftware-Backend kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-basierte-microservices-mit-azure-functions-and-co-c4053d0c-b7d8-433f-a60c-6f4a249cb2db",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 31,
      "type": "Talk",
      "title": "Real-World Angular: Erfahrungen aus (fast) vier Jahren Projektgeschäft",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Frankfurt, im Februar 2015: In einer Hotellobby probiert die Thinktecture-Crew eine der frühen, blutigen Alphaversionen von Angular 2 aus. Seither sind vier Jahre vergangen. Zurück in Frankfurt zeigt Christian Liebel von Thinktecture, welche Lehren das Thinktecture-Team aus beinahe vier Jahren Projektgeschäft gezogen hat. Wir besprechen bspw. erweiterte TypeScript-Sprachfeatures, die Unterteilung von Angular-Projekten in isolierte Module sowie verschiedene Maßnahmen zur Verbesserung der Performance. Dieser Talk richtet sich an Angular-Entwickler, welche die Grundlagen des Frameworks verstehen und schon erste Projekte damit umgesetzt haben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/real-world-angular-erfahrungen-aus-fast-vier-jahren-projektgeschaft",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 32,
      "type": "Talk",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen am Beispiel einer in Angular geschriebenen Anwendung die Mechanik hinter  dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.\nDieser Talk richtet sich an Entwickler, die grob wissen, um was es bei Progressive Web Apps geht. In diesem Track gibt es auch den passenden Grundlagenvortrag („Progressive Enhancement im Web: PWA-Grundlagen“), der Ihnen dieses Verständnis vermittelt. Bitte nehmen Sie ein Smartphone mit, um ggf. die Demoanwendung auf dem eigenen Gerät ausprobieren zu können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 21,
      "type": "Talk",
      "title": "Pragmatische Microservices-Architekturen mit .NET Core – Patterns & Code",
      "date": "2019-02-25 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Angetrieben durch mögliche Nachteile einer monolithischen Architektur wollen Microservices und damit verbundene Designpatterns und -ideen das scheinbare Allheilmittel sein. In diesem Vortrag klärt Christian Weyer die folgenden Fragen: Was sind Microservices und was sind sie nicht? Wann setzt man sie ein? Und vor allem: Wie baut und betreibt man Microservices in der .NET-Core-Welt? Sehen Sie Architekturansätze und Patterns in Aktion und erleben Sie Technologien wie Service Discovery, Web APIs, SignalR, Message Queuing und Co. im praktischen Einsatz. Versuchen wir also gemeinsam, langweilige Architekturthemen spannend zu machen: auf pragmatische Weise. Dieser Talk richtet sich an .NET-Entwickler- und -Architekten, die Microservices verstehen und ohne jegliche Frameworks und Clouds in Aktion sehen wollen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-architekturen-mit-net-core-patterns-and-code",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pragmatic-microservices-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 126,
      "type": "Workshop",
      "title": "Moderne Businessanwendungen mit Angular, .NET Core und Azure – Weitblick für Backend- und Frontend-Entwickler",
      "date": "2019-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Alle reden darüber: Mobile-Apps, Webtechnologien und Cloud. Die Welt besteht nicht mehr nur aus Windows allein und Ihr Job als Entwickler ändert sich. In diesem Workshop zeigen Thorsten Hans und Boris Wilhelms interessierten .NET-Entwicklern, welche architekturellen Ideen und Konzepte hinter modernen Businessanwendungen auf Basis von .NET Core, Azure Functions, Angular und TypeScript stecken.\n\nLernen Sie praktische Lösungen für eine Reihe diverser Problem- und Fragestellungen kennen. Wie kann man geräte- und plattformübergreifend Businessanwendungen mit Angular bauen? Wie kann man dies für Windows, iOS, Android und fürs Web gleichermaßen realisieren? Wie können diese Anwendungen Daten und Anwendungslogik mit Hilfe Service-basierter Architekturen nutzen? Dieser Workshop liefert Antworten auf all diese interessanten Fragen. Moderne Businessanwendungen mit Angular, Cordova, Electron, .NET Core und Azure – in Action!",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4,
        14
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Azure",
        "Azure Functions",
        "Cordova",
        "Electron",
        "Serverless",
        "SPA",
        "Architecture"
      ],
      "primaryTag": "Architecture",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 28,
      "type": "Talk",
      "title": "Serverless Microservices - by example of Azure Functions (and a bit of deep dive into the platform)",
      "date": "2019-02-22 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Why does it have to be Serverless versus Microservices? Couldn’t it be rather Microservices with Serverless? Based on some of the well-accepted principles of Microservices, we can use Serverless architectures and technologies to build highly focused Microservices – which we might call Nanoservices. \nChristian Weyer will show you a pragmatic approach on how to build Nanoservices with Azure Functions, Azure Service Bus, Azure Storage and friends. Join him to see Serverless Azure in action, with .NET Core, JavaScript and Java – beyond the typical Functions-as-a-Service examples.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-microservices-by-example-of-azure-functions-and-a-bit-of-deep-dive-into-the-platform",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Microservices",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 13
    },
    {
      "id": 47,
      "type": "Talk",
      "title": "Code your Azure Deployments using Terraform",
      "date": "2019-02-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Using HashiCorp’s Terraform you can code almost every Azure Deployment. Having your entire infrastructure as source code makes it easy to spin up new environments in a couple of minutes. Terraform takes this approach a step further, having a single language and a single CLI allows you to describe deployments for almost every cloud vendor. With Terraform Execution Plans you can also inspect what will be deployed, changed or deleted in Azure without harming existing deployments. Join this talk by Thorsten Hans and learn how to write your deployments and quickly create different, independent environments such as Testing, Staging, and Production in Azure.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 19,
      "type": "Talk",
      "title": "Serverless in Action: Event-gesteuerte Microservices - am Beispiel Azure",
      "date": "2019-01-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm... Ja, in der Tat. Der Serverless-Ansatz für Microservices verspricht eine niedrige Hürde, um den Einstieg zu finden und auch um ans Ziel zu kommen. Dabei ist Serverless jedoch nicht für jeden und alles geeignet. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand eines realistischen Anwendungsbeispiels. Auf Basis erprobter Design Patterns können Sie mit Azure Functions, Azure Event Grid, Azure Cosmos DB, Azure Storage & Co. in kurzer Zeit einfache & komplexe Anwendungen designen und implementieren - lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Wohnen Sie dieser Session bei und bilden Sie sich Ihre Meinung - eventuell lernen Sie die Basis Ihrer neuen Business-Software hier kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-in-action-event-gesteuerte-microservices-am-beispiel-azure",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 7
    },
    {
      "id": 78,
      "type": "Talk",
      "title": "WebAssembly & ASP.NET Blazor: .NET auf dem Weg, den Browser zu erobern?",
      "date": "2018-12-12 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/it-tage-2018-webassembly-and-blazor-2018-12-13",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 43
    },
    {
      "id": 83,
      "type": "Workshop",
      "title": "Azure in Action: Pragmatische Cloud-Lösungen mit Containern & Serverless",
      "date": "2018-12-04 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "IDE öffnen, „File – New Project – Cloud“, OK klicken und fertig. Oder? Nun, nicht ganz. Denn egal ob AWS, GCP oder eben Azure: am Ende des Tages werden Sie sich fragen, warum, wann und wie gehe ich in die Cloud? Genau diese Fragestellungen wollen Thorsten Hans und Christian Weyer für Java-, node.js- und .NET-Entwickler in diesem Workshop beantworten. Anhand diverser Use Cases werden mögliche Wege mit, über und in Azure diskutiert. Was bedeuten Architekturansätze wie Cloud-Native Microservices und Serverless Microservices? Wie gehe ich bei Brownfield-Projekten vor und wie kann ich Greenfield-Lösungen effizient in Azure realisieren? Wo liegen Unterschiede und Benefits von datengetriebenen und von ereignisgetriebenen Ansätzen? Wie kann ich mit dem Sammelsurium an Patterns, Technologien und Tools in Azure kosteneffektiv hantieren und dennoch flexibel sein? All dies werden wir anhand praktischer Beispiele und pragmatischer Lösungen in interaktiver Art und Weise adressieren. Sehen Sie PaaS, Web Apps, Containers, Orchestrators, Serverless, Functions & Co. mit der Azure-Cloud anhand von .NET-Demos in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/azure-in-action-pragmatische-cloud-losungen-mit-containern-and-serverless",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/aks-demo-app",
          "label": "Containers"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": "Serverless"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "AKS",
        "Azure",
        "Azure Functions",
        "Containers",
        "Kubernetes",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 59
    },
    {
      "id": 84,
      "type": "Talk",
      "title": "Auf ins Blaue: Azure Cloud Services für Java-Entwickler – ein persönlicher Überblick",
      "date": "2018-11-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ein Blick über den Tellerrand kann ja nicht schaden: was hat Microsofts Azure Cloud für Java-Entwickler und -Architekten zu bieten? Freilich ist die blaue Wolke ähnlich mächtig, breit an Services und tief an Features wie die Marktbegleiter AWS oder GPC. In dieser Session möchte daher Christian Weyer – der seit 2008 mit Azure arbeitet – einen nicht ganz unvoreingenommenen Überblick über die zentralen Services geben, die für Java-, .NET- aber auch andere Entwickler zur Verfügung stehen. Angefangen bei Container-as-a-Services mit Docker- und Kubernetes als Basis, über klassische Platform-as-a-Service-Angebote für Web Applications, Datenbanken oder Messaging, bis hin zu ultracoolen Serverless-Architekturen – illustriert mit praktischen Beispielen. Und dies von jemandem, der so gut wie keine Ahnung von Java hat.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/auf-ins-blaue-azure-cloud-services-fur-java-entwickler-ein-personlicher-uberblick",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure Functions",
        "Serverless",
        "Azure",
        "Java"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 60
    },
    {
      "id": 85,
      "type": "Talk",
      "title": "eXtreme Serverless Azure: Data, Compute, Realtime - in Action!",
      "date": "2018-10-12 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Whaaat? No servers? Well, yes. Serverless is all the hype these days. Let's try to sort out some of the real strengths of Serverless and see where Serverless & PaaS build a set of highly productive weapons in your Cloud arsenal. Join Christian Weyer from Thinktecture while he discusses Azure Functions, Storage, CosmosDB and SignalR Service in a holistic scenario - all by building an end-to-end solution that should 'just work' by the end of this session: creating a scalable real-time application in almost no time - really? Aaand action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/extreme-serverless-azure-data-compute-realtime-in-action-c24f4632-02c5-4183-9871-8fb829839d41",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/extreme-serverless-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Azure Functions",
        "Java",
        "JavaScript",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 61
    },
    {
      "id": 86,
      "type": "Talk",
      "title": "WebAssembly & PWA: Single Page Applications (SPAs) ohne JavaScript?",
      "date": "2018-10-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ohoh: JavaScript auf einer JavaScript-Konferenz in Frage zu stellen! Lassen Sie uns über das Web als Plattform reden und darüber wie wir JavaScript-basierte Browser-Anwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browser-Plattformen haben die Art und Weise verändert, wie wir Anwendungen, bspw. Line-of-Business Applications, erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung - eine großartige Basis für moderne Anwendungen gemäß der Idee von Progressive Web Apps (PWA). Mit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard haben wir so allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Session wird Christian Weyer über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C ++ - oder gar Java bzw. C # / .NET-Code im Browser ohne Plug-in nutzen können - und so die optimale Performance aus ihrer \"App\" holen können. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche neuen Möglichkeiten WebAssembly unserer geliebten Plattform verleihen kann. Spüren Sie das mögliche Potenzial Ihrer nächsten (Geschäfts-)Anwendung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-pwa-single-page-applications-spas-ohne-javascript",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angulardays-2018-herbst-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 62
    },
    {
      "id": 87,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps: Rethinking modern application development",
      "date": "2018-10-03 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Choose your programming language of choice for building fast, ubiquitously cross-platform, future-proof modern applications: dang - your dream will finally come true! Really...? Let's see. Undoubtedly, everybody needs to build business applications, somehow. The web and the browser platforms have changed the way we can build LOB applications and these platforms have evolved considerably in the past 5 years. More and more native features are available to SPAs (single page applications) running in the browser - a great base for modern applications as so-called Progressive Web Apps (PWA). Now, with the rise of WebAssembly (WASM) as a standard and the improving maturity of PWAs we have powerful tools in our hand to build the next generation of web-based applications. In this session Christian Weyer will talk about the features & possibilities of Progressive Web Apps as app-like appearance, installability or offline operations, paired with the power of WebAssembly as a bytecode for all major modern browsers. See how to use PWAs to build native-like applications on the browser platforms and experience the strength of WASM to run C, C++ or C#/.NET code in the browser, without any plugin. This can be a disruptive approach for both greenfield and brownfield projects. Lean back and watch how the web is evolving into a new stage of capabilities and feel the potential of your next (business) application. Let’s do it!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-rethinking-modern-application-development-7686e386-c777-43f0-8cdd-f41019e8525b",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-nl-2018-wasm-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "PWA",
        "Blazor",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 63
    },
    {
      "id": 75,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-basierte Microservices mit Azure Functions & Co",
      "date": "2018-09-25 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm… Ja, in der Tat. Der Serverless-Ansatz verspricht eine niedrige Hürde, um den Einstieg in Microservices zu finden. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand praktischer Anwendungsfälle. Auf Basis erprobter Designpatterns können Sie mit Azure Functions, Azure Service Bus und Co. in kurzer Zeit sowohl einfache als auch komplexe Services-Anwendungen designen und implementieren – lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Kommen Sie vorbei – eventuell lernen Sie die Basis für Ihr neues Businesssoftware-Backend kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-basierte-microservices-mit-azure-functions-and-co",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=5VIDcSbTgYI",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Azure Functions",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 88,
      "type": "Talk",
      "title": "Pragmatische Microservices-Architekturen mit ASP.NET Core & Co.",
      "date": "2018-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Schlagwort Microservices ist in aller Munde. Angetrieben durch die zahlreichen Nachteile einer monolithischen Architektur wollen Microservices und damit verbundene Design-Patterns und -Ideen das scheinbare Allheilmittel sein. In diesem Vortrag klärt Christian Weyer über den Mythos Microservices auf. Was sind sie, was sind sie nicht, wann setzt man sie ein – und vor allem: Wie baut und betreibt man Microservices in der .NET/.NET-Core-Welt? Sehen Sie Architekturansätze in Aktion und erleben Sie Technologien wie Service Discovery, Web API, SignalR, Message Queuing und Azure im praktischen Einsatz. Versuchen wir also gemeinsam, langweilige Architekturthemen spannend zu machen: auf pragmatische Weise!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-architekturen-mit-asp-dot-net-core-and-co",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 79,
      "type": "Talk",
      "title": "WebAssembly und Blazor - Wie .NET jetzt auch den Browser erobert?",
      "date": "2018-09-24 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET hat höchstens noch auf dem Server eine Zukunft? Diese Aussage stimmt im modernen Web mittlerweile nicht mehr ganz: Seit der Verfügbarkeit von WebAssembly, einem Bytecode fürs Web, können nun auch etwa in C# geschriebene Programme im Browser ausgeführt werden. Das ist mitunter eine interessante Migrationsstrategie, um .NET-Berechnungskerne ins Web zu portieren und mit Single-Page Applications (SPA), zum Beispiel auf Basis von Angular, zu paaren. Mit dem Projekt Blazor vom ASP.NET-Team experimentiert Microsoft zudem mit einem eigenen SPA-Framework mitsamt Tooling, das jedoch nicht auf HTML und JavaScript, sondern auf der Templating-Sprache Razor sowie C# und .NET Core basiert. Sebastian Gingter und Christian Liebel zeigen Ihnen beide Ansätze und geben eine Einschätzung, wo Blazor eine valide Option für die Erstellung von webbasierten UIs sein kann. Klar ist: Was im Web läuft, das kann auf nahezu allen Plattformen ausgeführt werden. Und auch der Verteilung Ihrer Anwendung als Progressive Web App mit vielen nativen Features steht nichts im Wege.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/webassembly-und-blazor-wie-net-jetzt-auch-den-browser-erobert",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=z3x1u-cuED8",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        3
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 92,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps - Next Generation Apps",
      "date": "2018-09-09 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Gesetzt den Fall, Sie halten Cross-Plattform SPAs (Single Page Applications) für eine gute Idee, könnte diese Night Session in der Tat interessant für Sie werden. Lassen Sie uns über das Web als Plattform reden und darüber, wie wir JavaScript-basierte Browseranwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browserplattformen haben die Art und Weise verändert, wie wir Anwendungen erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung – eine großartige Basis für moderne Applikationen gemäß der Idee von Progressive Web Apps (PWA). Zudem haben wir mit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Night Session wird Christian Weyer sowohl über PWAs als auch über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C++, Java oder C#/.NET-Code im Browser ohne Plug-in nutzen können – sei es aus Performance- oder Wiederverwendungsgründen. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche Möglichkeiten PWAs und WebAssembly dem Web verleihen könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-next-generation-apps",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/software-architecture-summit-2018-pwa-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "PWA",
        "Web Technologies",
        "WebAssembly"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 66
    },
    {
      "id": 129,
      "type": "Talk",
      "title": "Legacy-Anwendungen ver-Service-fizieren mit ASP.NET Core",
      "date": "2018-09-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wer kennt sie nicht: Zehn bis 20-Jährige native Anwendungen weisen nicht selten bekannte Schwierigkeiten auf. Sie sind groß, monolitisch, komplex, launenhaft, laufen nur auf einem bestimmten Betriebssystem mit einem ganz bestimmten Patch Level, es gibt genau einen Entwickler, der diese versteht und jede einzelne von denen ist eine State Machine.\nAus den genannten Gründen und um die Marktanteile zu erweitern ist es kein Wunder, dass die Hersteller ihre Anwendung am liebsten hinter einer Web-API verstecken möchten, welche über eine stabile, performante und vergleichsweise einfache API konsumiert werden kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/legacy-anwendungen-ver-service-fizieren-mit-asp-dot-net-core",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pawelgerr/Talks-LegacyApplications",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        "Architecture",
        "ASP.NET Core",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 83
    },
    {
      "id": 89,
      "type": "Talk",
      "title": "WebAssembly: Dem JavaScript sein Tod!?",
      "date": "2018-06-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blasphemie: JavaScript auf einer JavaScript-Konferenz in Frage zu stellen!\nLassen Sie uns über das Web als Plattform reden und darüber, wie wir JavaScript-basierte Browseranwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browserplattformen haben die Art und Weise verändert, wie wir Anwendungen, beispielsweise Line-of-Business Applications, erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung - eine großartige Basis für moderne Anwendungen gemäß der Idee von Progressive Web Apps (PWA).\nMit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard haben wir so allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Session werden Christian Weyer und Sebastian Gingter über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C++, oder gar Java beziehungsweise C#/.NET-Code im Browser ohne Plug-in nutzen können – und so die optimale Performance aus ihrer \"App\" holen können. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche neuen Möglichkeiten WebAssembly unserer geliebten Plattform verleihen kann. Spüren Sie das Potenzial Ihrer nächsten (Geschäfts-)Anwendung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-dem-javascript-sein-tod",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/enterjs-2018-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Technologies",
        "JavaScript",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 64
    },
    {
      "id": 77,
      "type": "Workshop",
      "title": "Moderne APIs mit ASP.NET Core MVC und SignalR – End-to-End",
      "date": "2018-06-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne APIs bieten neben der gängigen HTTPS-Interaktion auch die Möglichkeit zur Echtzeitkommunikation auf Basis von WebSockets. Mit Hilfe von Microsofts Open-Source-Plattform ASP.NET Core MVC und SignalR lassen sich im Handumdrehen Web-APIs und Push-Services entwickeln. Doch damit nicht genug: Weitere Themen wie Security, Rate-Limiting, eine sinnvolle Dokumentation und ein vernünftiges zentralisiertes Logging sind mit von der Partie. Und jeder dieser einzelnen Bereiche bietet uns eine neue Herausforderung. Sebastian Gingter und Manuel Rauber zeigen Ihnen in diesem Workshop, wie man mit .NET Core moderne APIs auf und für verschiedene Plattformen entwickeln kann. Zusätzlich wird durch den Einsatz von Entity Framework Core die Anbindung an verschiedene Datenbanken ermöglicht. Durch den Einsatz weiterer Open-Source-Bibliotheken fürs Logging oder zur automatischen Generierung einer Swagger/OpenAPI-Dokumentation ergänzen wir die API um weitere Funktionalitäten. Eine Client-Anwendung, das Deployment auf unterschiedliche Plattformen und das Deployment in die Cloud runden den Workshop ab – vollständig End-to-End eben!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/einmal-api-mit-allem-bitte-asp-dot-net-core-mvc-und-signalr-in-action-164d1e3e-189b-4b6a-95a3-33003e3f3f05",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-ms-summit-spring-2018-services-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        1
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 42
    },
    {
      "id": 91,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps: Rethinking modern application development",
      "date": "2018-05-23 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Choose your programming language of choice for building fast, ubiquitously cross-platform, future-proof modern applications: dang - your dream will finally come true! Really...? Let's see. Undoubtedly, everybody needs to build business applications, somehow. The web and the browser platforms have changed the way we can build LOB applications and these platforms have evolved considerably in the past 5 years. More and more native features are available to SPAs (single page applications) running in the browser - a great base for modern applications as so called Progressive Web Apps (PWA). Now, with the rise of WebAssembly (WASM) as a standard and the improving maturity of PWAs we have powerful tools in our hand to build the next generation of web-based applications. In this session Christian Weyer will talk about the features & possibilities of Progressive Web Apps as app-like appearance, installability or offline operations, paired with the power of WebAssembly as a bytecode for all major modern browsers. See how to use PWAs to build native-like applications on the browser platforms and experience the strength of WASM to run C, C++ or C#/.NET code in the browser, without any plugin. This can be a disruptive approach for both greenfield and brownfield projects. Lean back and watch how the web is evolving into a new stage of capabilities and feel the potential of your next (business) application. Let’s do it!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-rethinking-modern-application-development",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-2018-wasm-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "PWA",
        "Web Technologies",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 65
    },
    {
      "id": 90,
      "type": "Workshop",
      "title": "Modern Cross-Platform Business Applications with Angular, Cordova, Electron, PWA & Serverless Backends",
      "date": "2018-05-21 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Modern business applications are facing entirely different challenges today. End-users are used to just leverage their mobile phone, tablets, laptops and (maybe) desktop computers. Applications, data and processes just need to work, just need to “be there” – regardless of the application hosting and provisioning model. Developers should realize these ever-changing challenges and should address possible approaches for ubiquitous solutions. In this full-day workshop, Thorsten and Christian from Thinktecture show you a way how to design, architect, implement and run modern business applications – end-to-end. Come and see how to provide lightweight APIs into your business processes via Serverless technolgoies and architectures in Azure. Feel the power of real-cross platform HTML5 SPAs – e.g. based on Angular – to offer a use-case-optimized user experience across all platforms on any devices and runtimes. Let’s start with Angular web applications for the browser and augment them to have native functionalities on the mobile platforms with Apache Cordova and on desktop operating systems with GitHub Electron. Last but not least, join us for a sneak preview into a hopefully not too disitant future: Progressive Web Apps (PWA) could be the ever-lasting ultimate app model for everybody. Apps without the need to install, just running inside the browser engines with power to interact natively. Sounds too good? Let’s see – all this in action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/modern-cross-platform-business-applications-with-angular-cordova-electron-pwa-and-serverless-backends",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-2018-mba-ws",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Azure Functions",
        "Cordova",
        "Electron",
        "PWA",
        "Serverless",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 65
    },
    {
      "id": 128,
      "type": "Talk",
      "title": "Legacy-Anwendungen ver-Service-fizieren mit ASP.NET Core",
      "date": "2018-04-27 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wer kennt sie nicht: Zehn bis 20-Jährige native Anwendungen weisen nicht selten bekannte Schwierigkeiten auf. Sie sind groß, monolitisch, komplex, launenhaft, laufen nur auf einem bestimmten Betriebssystem mit einem ganz bestimmten Patch Level, es gibt genau einen Entwickler, der diese versteht und jede einzelne von denen ist eine State Machine.\nAus den genannten Gründen und um die Marktanteile zu erweitern ist es kein Wunder, dass die Hersteller ihre Anwendung am liebsten hinter einer Web-API verstecken möchten, welche über eine stabile, performante und vergleichsweise einfache API konsumiert werden kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/legacy-anwendungen-ver-service-fizieren-mit-asp-dot-net-core",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pawelgerr/Talks-LegacyApplications",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        "Architecture",
        "ASP.NET Core",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 81
    },
    {
      "id": 124,
      "type": "Talk",
      "title": "Event-based Microservices with Azure Functions, EventGrid & Co.",
      "date": "2018-04-21 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Whaaat? No servers? Well, yes. The Serverless approach for building microservices promises to offer a low entry barrier - for both getting starting and for fulfilling a target. In this session Christian & Boris will show you end-to-end Serverless with Azure & .NET Core by means of a realistic application scenario from customer projects.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architectures-event-based-microservices-with-azure-functions-eventgrid-and-co",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/globalazurebootcamp-2018-serverless",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6,
        14
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Azure Functions"
      ],
      "primaryTag": "Azure Functions",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 79
    },
    {
      "id": 231,
      "type": "Webinar",
      "title": "RxJS von Grund auf - Teil 2: Operatoren und Operatorenketten",
      "date": "2021-06-15 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im ersten Teil haben wir uns die grundlegenden Konzepte hinter RxJS näher angesehen. Dabei kam ein Blick hinter die Kulissen von Operatoren und Operatorketten zu kurz. In diesem Teil möchten wir besonderen Fokus auf diese Aspekte legen und den Vorhang lüften. Dazu werden wir uns nicht nur bestehende Operatoren ansehen, sondern uns mit der Erstellung eigener Operatoren auseinander setzen.\n\n* Kurzes Recap des ersten Webinar\n* Operatoren selbstgemacht\n* Verhalten in Operatorketten\n* Operatoren parametrisieren\n* Existierende Operatoren wiederverwenden",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-teil-2-operatoren-und-operatorenketten",
          "label": "Speakerdeck (Slides)"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-02-rxjs-operators",
          "label": "GitHub (Code)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 153
    },
    {
      "id": 204,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2021-06-07 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered-862e424d-643b-4b18-8673-631c9375ed7e",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 126
    },
    {
      "id": 230,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Einführung in reaktives JavaScript",
      "date": "2021-06-01 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": "GitHub (Code Sample)"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-einfuhrung-in-reaktives-javascript",
          "label": "SpeakerDeck (Slides)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 153
    },
    {
      "id": 229,
      "type": "Webinar",
      "title": "Keycloak fuer .NET Entwickler",
      "date": "2021-05-25 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Authentication oder Authorization, Multi-Tenancy oder aber für einfache Anwendungen: Keycloak ist ein Open Source Identity and Access Management System mit dem Ihre Anwendungen Authentifizierung und Autorisierung auslagern können. Obwohl es ein Java-basierendes Produkt ist, lässt es sich dank offener Standards wie OAuth, OpenID Connect (OIDC) oder natürlich HTTP auch in ASP.NET-Core-Anwendungen integrieren.\n\nIn diesem Webinar zeigte Boris Wilhelms , wie Sie Keycloak in Ihre ASP.NET-Core-Lösungen integrieren können und wie sich Keycloak von IdentityServer oder Azure Active Directory B2C unterscheidet.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/keycloak-fuer-net-entwickler-9bbba251-7cc3-4e25-8561-b1a7f63ba979",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-keycloak",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        "Keycloak"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 152
    },
    {
      "id": 228,
      "type": "Webinar",
      "title": "Web-API mit Turbo: Deep-dive in async/await für Backend-APIs",
      "date": "2021-05-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Asynchrone Programmierung wird immer häufiger als der Heilsbringer in Sachen Performance angepriesen. Doch stimmt das auch? Die Antwort ist ein ganz klares Jaein. Was bedeutet asynchrone Programmierung überhaupt, wie unterscheidet sie sich von Multithreading und was muss ich wirklich wissen, damit die Verwendung von async/await einen spürbaren Einfluss auf die Geschwindigkeit meiner ASP.NET Core Web API zeigt? Diese Fragen und einige mehr wird Ihnen der .NET- und Backend-Experte Sebastian Gingter in diesem Webinar beantworten und darüber hinaus auf Best Practices sowie einige Tipps & Tricks eingehen. Nach diesem Talk haben Sie das notwendige Handwerkszeug beisammen, um ihre Web APIs an den richtigen Stellen durch asynchrone Operationen zu optimieren.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-2021-05-async",
          "label": "Demos auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/await-in-net",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "async",
        ".NET"
      ],
      "primaryTag": ".NET",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 151
    },
    {
      "id": 226,
      "type": "Webinar",
      "title": "Electron, Capacitor, PWA - was, wann, wie & warum?",
      "date": "2021-05-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org",
          "label": "Paint-PWA"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-capacitor-pwa-was-wann-wie-and-warum",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Capacitor",
        "Cordova",
        "Electron",
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 150
    },
    {
      "id": 224,
      "type": "Webinar",
      "title": "Azure Arc enabled Kubernetes: Hybrid and Multi-Cloud",
      "date": "2021-04-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Finally, one to rule them all: Azure Arc enabled Kubernetes allows you to manage and monitor Kubernetes clusters from different sources. Let Azure Arc act as a cockpit for all your Kubernetes clusters, no matter if they are running in AWS, Google Compute Cloud, Digital Ocean, or even a private data center.\nJoin this webinar with Thorsten Hans to understand the capabilities and see what can be achieved with Azure Arc enabled Kubernetes. With an example, you will dive into the topic and see how to use key features such as onboarding, inventory, monitoring, and Azure Policy powered governance to tame all your clusters.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-arc-enabled-kubernetes-hybrid-and-multi-cloud",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/arc-enabled-k8s-webinar-april-2021",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Kubernetes"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 148
    },
    {
      "id": 223,
      "type": "Webinar",
      "title": "Web Components: Bessere (SPA-)Architektur mit Smart- und Presentational-Components-Pattern",
      "date": "2021-04-27 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components: ein Begriff, gar (ehemaliger?) Hype, den wir in der Webentwicklung seit einiger Zeit lesen und immer wieder darüber stolpern. Custom Elements, Shadow DOM und HTML Templates ergeben ein natives Komponentenmodell für unseren Browser. Komponenten, wiederverwendbare SPA-Framework-unabhängige UI-Bausteine, die wir in jeder und für jede App nutzen könnten.\n\nDoch noch immer werden Komponenten frameworkabhängig bspw. in Angular, React oder Vue.js entwickelt. Liegt das daran, dass unserer Anwendungsarchitektur noch ein wichtiges Pattern fehlt, um SPA-Components mit Web Components sinnvoll zu kombinieren? Mit dem Pattern der Smart und Presentational Components erreichen wir eine klare Trennung zwischen State Management (Smart) und reinem User Interface und seiner Interaktion (Presentational). Was genau es damit auf sich hat und wie dies mit Web Components realisiert werden kann, zeigt Manuel Rauber im Live-Coding mit Vor- und Nachteilen anhand einer Real-World-Demo-Applikation.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-bessere-spa-architektur-mit-smart-und-presentational-components-pattern",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-smart-and-presentation-components",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 147
    },
    {
      "id": 222,
      "type": "Talk",
      "title": "Produktivitäts-PWAs auf Desktop-Niveau mit Project Fugu",
      "date": "2021-04-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Beitragenden Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. Damit können Entwickler endlich auch Produktivitäts-Apps wie Büro- und Bearbeitungsprogramme oder IDEs sinnvoll ins Web bringen. In diesem Vortrag zeigt Ihnen Christian Liebel, wie Sie Produktivitäts-PWAs auf Desktopniveau entwickeln können – Zugriff auf das Dateisystem, die Zwischenablage sowie Dateizuordnungen inklusive.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/produktivitats-pwas-auf-desktop-niveau-mit-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 146
    },
    {
      "id": 219,
      "type": "Workshop",
      "title": "JavaScript Fullstack Day: Project Fugu",
      "date": "2021-04-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Presented as a part of the full-stack day of International JavaScript Conference 2021 London, Online Edition.\n\nProgressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/javascript-fullstack-day-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": true,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 143
    },
    {
      "id": 140,
      "type": "Webinar",
      "title": "Web-Apps mit Ionic: Auf Schienen schneller ans Ziel?",
      "date": "2021-04-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen können mitunter komplex werden. Täglich gibt es neue Anforderungen und am besten soll die App noch Cross-Plattform verfügbar sein. Und natürlich darf die Entwicklung nicht zu lange dauern. Ionic versucht als Opinionated-Framework dieses Problem zu adressieren.\nIn diesem Webinar zeigt Max Schulte, was mit Ionic als SPA-Framework möglich ist und wie es dank seiner Tools, \"Production Ready\"-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-ionic-leitplanken-demo",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net",
          "label": "Live Demo (Azure)"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/web-apps-mit-ionic-auf-schienen-schneller-ans-ziel-3ed7786e-0011-4d07-a42b-acb0e5fcaa9b",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Mobile",
        "Cordova",
        "Capacitor",
        "Web Technologies",
        "Web Components",
        "Webinar",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 144
    },
    {
      "id": 218,
      "type": "Talk",
      "title": "Implementing Productivity Apps With Angular And Fugu APIs",
      "date": "2021-04-20 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have worked since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included! This allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web. Thinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis-869dec24-e8f7-4821-b15b-c063cba32760",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-2021-ldn-angular-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 143
    },
    {
      "id": 225,
      "type": "Talk",
      "title": "Infrastructure as Code for Azure with Terraform",
      "date": "2021-04-16 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Modern and distributed application architectures often require a large set of services and systems with a rather complex configuration to work as expected. You and your team can create and manage such infrastructures professionally by adopting Infrastructure as Code (IaC) and relying on Terraform. In this talk, Azure MVP Thorsten Hans demonstrates how to create reliable and predictable Azure infrastructures with Terraform. You will learn how to structure your project, create and mutate your services and manage multiple environments in no time.",
      "media": [
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=6e3aI5WAg5M",
          "label": "Recording"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/globalazure-2021-terraform",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform",
        "Azure"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 149
    },
    {
      "id": 216,
      "type": "Webinar",
      "title": "Blazor WebAssembly - Forms in Action",
      "date": "2021-04-14 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ein Großteil an Softwarelösungen hantiert mit Daten. Formulare sind hier kaum wegzudenken und ein zentraler Bestandteil. Sei es das Anmelden über eine Login-Maske oder das Buchen von Konzertkarten, überall sind Sie zu finden.\n\nIn dieser Session zeigt Patrick Jahr anhand eines Beispiels wie Formulare mit Blazor WebAssembly in .NET 5 implementiert werden können. Jedoch ist der Aufbau eines Formulars nicht alles: wird ein Nutzer nicht richtig über fehlerhafte Eingaben informiert, oder muss zu lange warten, bis das Formular neue Daten geladen hat, verliert er direkt die Lust oder das Vertauen in die Anwendung. Daher wird in dieser Session auch ein großes Augenmerk auf die Validierung von Formularen gelegt. Schlussendlich ist noch die Diskussion von Performance-beeinträchtigenden Fakten in komplexeren Szenarien ein wichtiges Thema in diesem Webinar.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/blazor-webassembly-forms-in-action",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-blazor-forms",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        ".NET",
        "Blazor",
        "WebAssembly",
        "Blazor WebAssembly"
      ],
      "primaryTag": "Blazor WebAssembly",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 142
    },
    {
      "id": 213,
      "type": "Webinar",
      "title": "Sichere und robuste Docker Images für .NET",
      "date": "2021-03-30 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Anwendungen in Containern zu betreiben gehört nicht nur zum guten Ton. Bereits seit Jahren befinden sich Technologien wie Kubernetes und Docker auf einem Siegeszug der seines gleichen sucht. Doch bereits beim Erstellen von Docker Images gilt es auf viele kleine Dinge zu achten um Anwendungen auf lange Sicht professionell in Containern zu betreiben.\n\nIn diesem Webinar zeigt Azure MVP Thorsten Hans, wie auch Sie sichere und robuste Docker Images erstellen. Sämtliche Demos und Beispiele werden in diesem Webinar anhand einer .NET-WebAPI erläutert.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-docker-march-2021",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/sichere-und-robuste-docker-images-fur-net",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Docker"
      ],
      "primaryTag": "Docker",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 141
    },
    {
      "id": 211,
      "type": "Half Day Workshop",
      "title": "Angular meets Project Fugu: Produktivitäts-PWAs auf Desktopniveau (Hands-on)",
      "date": "2021-03-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Contributors Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. Damit können Entwickler endlich auch Produktivitäts-Apps wie Büro- und Bearbeitungsprogramme oder IDEs sinnvoll ins Web bringen. In diesem Workshop zeigt Ihnen Christian Liebel von Thinktecture, wie Sie mit Angular Produktivitätsapps auf Desktopniveau entwickeln können – Zugriff auf das Dateisystem und die Zwischenablage sowie Dateizuordnungen inklusive. Und Sie können mitentwickeln: Bitte bringen Sie dazu Ihr Notebook (ohne Corporate-Proxys/Unternehmensrichtlinien) mit installiertem Google Chrome Canary, Node.js und Microsoft Visual Studio Code mit.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-meets-project-fugu-produktivitats-pwas-auf-desktopniveau-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-spring-2021-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 214,
      "type": "Workshop",
      "title": "Rock Solid, yet flexible Single Page Applications professionell mit Kubernetes betreiben",
      "date": "2021-03-23 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Kubernetes – das Cloud-Betriebssystem dieser Dekade – bietet auch für den Betrieb von Single Page Applications (SPAs) eine hohe Flexibilität und Individualisierbarkeit. In diesem Halbtages-Workshop zeigt Thorsten Hans, wie Sie Ihre SPA in Docker Images verpacken, und in Kubernetes betreiben können. Lernen Sie essenzielle Konzepte und Techniken für das Hosting von SPAs anhand einer exemplarischen Angular-Anwendung kennen. Hierbei werden wir iterativ vom Standardbetrieb, bis hin zur Abbildung einer professionellen Multi-Tenant-Umgebung mit Canary-Deployments vorgehen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/rock-solid-yet-flexible-single-page-applications-professionell-mit-kubernetes-betreiben",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-2021-kubernetes",
          "label": "Sample Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Docker",
        "Kubernetes"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 210,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Platform Realtime Push - 3",
      "date": "2021-03-23 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-core-signalr-cross-platform-realtime-push-3",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        "SignalR",
        "ASP.NET Core",
        ".NET Core",
        "JavaScript",
        "Angular",
        "Capacitor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 137
    },
    {
      "id": 212,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps – Hands on!",
      "date": "2021-03-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und im Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mit Hilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigt Ihnen Christian Liebel die Grundlagen der PWA-Entwicklung. Und Sie können aktiv mitentwickeln!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-spring-2021-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 209,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Stream-basierte Denkweise - am konkreten Beispiel",
      "date": "2021-03-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "RxJS unterstützt bei der Bewältigung asynchroner Probleme verschiedener Art, nicht nur bei AJAX-Requests. Allerdings erfordert das Stream-basierte Paradigma ein Umdenken für den Entwickler.\n\nNachdem wir uns im ersten Teil intensiv mit den Grundbausteinen von RxJS beschäftigt haben und dann im zweiten Teil sehr intensiv auf Operatoren und Operatorenketten eingegangen sind, nehmen wir uns in diesem Webinar einen Anwendungsfall aus der Realität vor. An einem konkreten Beispiel leiten wir eine Lösung ohne den Einsatz von RxJS her und stellen dieser eine elegante Lösung gegenüber, die sich den passenden Operatoren bedient.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-stream-basierte-denkweise-am-konkreten",
          "label": "Slides (Speakerdeck)"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-03-rxjs-scrolling",
          "label": "Source (GitHub)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular",
        "RxJS",
        "Angular, RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 136
    },
    {
      "id": 208,
      "type": "Webinar",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2021-03-11 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "What doesn't load in two seconds will never be accessed again: User expectations for web application performance are steadily increasing. After a web application loads, it needs to feel fast and fluid in order for the user to achieve their goal. In our Thinktecture webinar, Christian Liebel will show you Angular’s most important optimization options (Zone.js, Change Detection and Service Workers), so that you can ignite the turbo for your Angular app!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-2e112a94-b9dc-42dc-b166-e46dcb641ac7",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 135
    },
    {
      "id": 207,
      "type": "Webinar",
      "title": "Always up to date: API-Versionierung in .NET 5",
      "date": "2021-03-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit, und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, so haben wir bei APIs das Problem, dass ältere Clientanwendungen mit dem neuen Verhalten nicht mehr zurecht kommen und dann auch nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unserer API.\n\nIn diesem Webinar zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen wann überhaupt eine neue Version benötigt wird, welche Methoden es gibt eine ASP.NET-Core-Web-API zu versionieren und welche verschiedenen Herangehensweisen im Code möglich sind, unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-versioning-webinar-march-2021",
          "label": "Code-Beispiele auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/thinktecture-webinar-api-versionierung-in-net-5",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Versioning",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 134
    },
    {
      "id": 206,
      "type": "Webinar",
      "title": "Storybook: Best Practices mit Angular",
      "date": "2021-03-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Storybook ist ein hervorragendes Tool zur Erstellung von UI-Komponentenkatalogen. Steuerelemente können hier isoliert betrachtet, ausprobiert und dokumentiert werden – eine perfekte Schnittstelle zwischen Designern, Entwicklern und weiteren Projektbeteiligten. Christian Liebel stellt Ihnen in diesem Webinar ein Vorgehensmodell vor, das auf unseren Erfahrungen aus vielen Kundenprojekten mit Angular basiert. Auf einen Streich entsteht damit nicht nur eine erstklassige Komponentenbibliothek, sondern zugleich eine besonders modulare Codebasis – die zugleich Synergieeffekte für Unit Tests und Mocking mit sich bringt.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/storybook-best-practices-mit-angular",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 128
    },
    {
      "id": 205,
      "type": "Webinar",
      "title": "Keycloak fuer .NET Entwickler",
      "date": "2021-02-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Authentication oder Authorization, Multi-Tenancy oder aber für einfache Anwendungen: Keycloak ist ein Open Source Identity and Access Management System mit dem Ihre Anwendungen Authentifizierung und Autorisierung auslagern können. Obwohl es ein Java-basierendes Produkt ist, lässt es sich dank offener Standards wie OAuth, OpenID Connect (OIDC) oder natürlich HTTP auch in ASP.NET-Core-Anwendungen integrieren.\nIn diesem Webinar zeigt Ihnen Boris Wilhelms wie Sie Keycloak in Ihre ASP.NET-Core-Lösungen integrieren können und wie sich Keycloak von IdentityServer oder Azure Active Directory B2C unterscheidet.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/keycloak-fuer-net-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-keycloak",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "ASP.NET Core",
        "IAM",
        "Keycloak"
      ],
      "primaryTag": "Keycloak",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 127
    },
    {
      "id": 203,
      "type": "Workshop",
      "title": "Progressive Web Apps und Project Fugu: Das nächste Level für Cross-Platform-Apps",
      "date": "2021-02-18 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) ermöglichen es Ihnen, Businessanwendungen für den Browser zu entwickeln, die sich zugleich wie native Anwendungen anfühlen und dabei sogar offline-fähig sind. Dank Project Fugu stehen diese PWAs ihren nativen Gegenstücken in nichts nach! Erfahren Sie in diesem Workshop, wie Sie erfolgreich ihre eigenen PWAs entwickeln!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-und-project-fugu-das-nachste-level-fur-cross-platform-apps?slide=7",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-pwa-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 199,
      "type": "Talk",
      "title": "Advanced Blazor Server: Tiefen und Untiefen meistern",
      "date": "2021-02-18 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor Server ist anders. Es hat gegenüber Blazor WebAssembly ein anderes Verhalten zur Laufzeit. Dabei spielen vor allem Razor Pages eine Rolle, die Dependency Injection funktioniert leicht anders als gewohnt und auch das Zustandsmanagement ist eine Sache für sich. Trauen Sie sich in die tiefsten Tiefen des Blazor-Server-Kaninchenbaus! ASP.NET-Core- und Backend-Experte Sebastian Gingter nimmt Sie an die Hand und zeigt Ihnen diese und noch weitere Spezialitäten von Blazor Server und wie man damit erfolgreich umgeht.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-blazor-server",
          "label": "Repo auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-spring-2021-blazor-server",
          "label": "Folien bei Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "ASP.NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 200,
      "type": "Webinar",
      "title": "RxJS from the group up - Introduction to reactive JavaScript",
      "date": "2021-02-18 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "RxJS is a very powerful tool and has been established in Angular as its central way of communication between Components and Services.\n\nIf you are not quite comfortable yet to use RxJS in all of its glory, then this Webinar is for you. Yannick is going to show you the basic concepts and ideas behind all of RxJS's moving parts, to make sure you can wield this powerful tool more confidently.\n\nAgenda:\n- Why streams?\n- Asynchronicity and the observer pattern\n- Working with RxJS\n- Unsubscribing and completion\n- Resources to help yourself",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-from-the-ground-up-introduction-to-reactive-javascript",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": "Code Sample (GitHub)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 124
    },
    {
      "id": 202,
      "type": "Talk",
      "title": "Implementing Productivity Apps with Angular and Fugu APIs",
      "date": "2021-02-17 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have been working since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included!\nThis allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web.\nThinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis-cec204b8-f3b4-4dea-a468-a56a0a7b3aea",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 125
    },
    {
      "id": 215,
      "type": "Talk",
      "title": "Kubernetes für .NET Anwendungsentwickler",
      "date": "2021-02-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie möchten Ihre .NET-Core-Anwendung in Kubernetes betreiben und lernen, wie Sie das Potential des Containerorchestrators nutzen können? Dann besuchen Sie diesen Talk von Kubernetes- und Cloud-Native-Experte Thorsten Hans. Sie werden nicht nur den praktischen Umgang mit Kubernetes aus Sicht des Entwicklers lernen, sondern auch, wie Sie Patterns und Praktiken nutzen, um Ihre .NET-Core-Anwendungen optimal in Containern zu betreiben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-fur-net-anwendungsentwickler",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-kubernetes-for-net-devs",
          "label": "Sample Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 201,
      "type": "Talk",
      "title": "Superkräfte für Produktivitäts-PWAs – Project Fugu",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein hervorragendes plattformübergreifendes Anwendungsmodell. In mancherlei Hinsicht musste das Modell jedoch noch hinter seine nativen Gegenstücke zurücktreten. Das wollen Google, Microsoft und Intel mit dem Capabilities Project – Codename Fugu – jetzt ändern. Ihr Ziel: ein leistungsfähigeres Web. Dank den Fugu APIs erhalten PWAs nun Zugriff auf das lokale Dateisystem und die Zwischenablage und können sich als Bearbeitungsprogramm für bestimmte Dateierweiterungen hinterlegen. In dieser Session zeigt Christian Liebel von Thinktecture, wie Fugu APIs entstehen und wie sie einen ganzen Schwung an Produktivitäts-Apps ins Web verlagern könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/superkrafte-fur-produktivitats-pwas-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 196,
      "type": "Talk",
      "title": "Blazor in .NET 5: Single-Page-Applications mit C# & WebAssembly",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page-Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor-Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von vielen Beispielen wie Blazor in .NET 5 tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-in-net-5-single-page-applications-mit-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 197,
      "type": "Keynote",
      "title": "Technical Keynote: Auf dem Weg zu „One .NET“ – das eine Framework, sie alle zu beherrschen",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im November 2020 ist .NET 5.0 erschienen. Auch wenn die Vision \"One .NET\" erst mit Version 6.0 vollständig umgesetzt sein wird, so bietet .NET 5.0 doch viele spannende Neuerungen bei Sprachsyntax, Klassen, Anwendungsmodellen und Deployment. In dieser technischen Keynote wird DOTNET-DOKTOR Holger Schwichtenberg zusammen mit Kollegen einige Highlights der neuen Version hervorheben, Empfehlungen zur Migration alter Anwendungen geben und auch einen Ausblick auf die .NET-Zukunft liefern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/technical-keynote-auf-dem-weg-zu-one-net-das-eine-framework-sie-alle-zu-beherrschen",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 198,
      "type": "Talk",
      "title": "Schneller ans Ziel: Web-Apps mit Ionic",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen können mitunter komplex werden. Täglich gibt es neue Anforderungen und am besten soll die App auch noch Cross-Platform verfügbar sein. Und natürlich darf die Entwicklung nicht zu lange dauern. Ionic versucht als opinionated Framework dieses Problem zu adressieren. In seinem Vortrag zeigt Max Schulte, was mit Ionic als SPA-Framework möglich ist und wie es dank seiner Tools, Production-Ready-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/schneller-ans-ziel-web-apps-mit-ionic",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net/tabbed/new-offer",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Capacitor",
        "PWA",
        "Web Technologies",
        "Hybrid-App",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 195,
      "type": "Workshop",
      "title": "ASP.NET Core Blazor: Moderne Businessanwendungen mit C# & WebAssembly - Full-Stack- und Cross-Plattform",
      "date": "2021-02-15 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht-webnativen Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET webbasierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browserp﻿lattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Als Abrundung des Workshops soll auch ein Blick auf und ein Vergleich mit Server-side Blazor nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-und-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-blazor-workshop",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 194,
      "type": "Webinar",
      "title": "Blazor WebAssembly: SPAs mit C# und .NET 5",
      "date": "2021-02-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript oder TypeScript – na klar! Mit ASP.NET Core Blazor gibt es jedoch eine mögliche Alternative für .NET-Entwickler. Auf Basis des Web-Standards WebAssembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# & Razor entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor WebAssembly in .NET 5 möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Ein realistischer Blick auf die Grenzen der Technologie darf hierbei freilich nicht fehlen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-spas-mit-c-number-und-net-5",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 122
    },
    {
      "id": 193,
      "type": "Talk",
      "title": "Full Stack .NET: Single Page Applications mit Blazor, C# & WebAssembly",
      "date": "2021-02-08 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) – bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell – je nach Anwendungsfall – die Grenzen liegen.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/full-stack-net-single-page-applications-mit-blazor-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 121
    },
    {
      "id": 192,
      "type": "Webinar",
      "title": "Unit-Testing in Angular mit Jest",
      "date": "2021-02-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Unit-Tests sind ein hervorragendes Mittel, um (kritische) Funktionalität einer Anwendung automatisiert und schnell überprüfen zu lassen. Das SPA-Framework Angular liefert mit Karma von vornherein eine Testunterstützung mit. Mit Facebooks Jest gibt es jedoch ein weiteres Framework, das unter anderem mit paralleler Testausführung lockt.\n\nIn diesem Webinar zeigt Ihnen Christian Liebel, wie Sie Ihre Angular-App mithilfe von Jest testen können. Nachdem wir zu Beginn ein gemeinsames Verständnis zum Thema Unit Tests geschaffen haben, werden wir uns abschließend auch fortgeschrittenen Inhalten wie Spys und Mocks nähern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/unit-testing-in-angular-mit-jest",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/unit-testing-angular-jest-webinar-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 120
    },
    {
      "id": 190,
      "type": "Talk",
      "title": "Blazor WebAssembly & gRPC - Code-first .NET SPA developer productivity",
      "date": "2021-01-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "With Blazor WebAssembly, developers can write C# code for SPAs in the browser and share code with the server-side of their applications. Usually, you design and use JSON-based Web APIs to communicate between the client and the server logic. In this session, Christian Weyer demonstrates how to employ gRPC & gRPC-Web in a code-first manner to share .NET interface contracts in a strongly-typed way. With this approach, no code generation is needed, you get the same syntax and full IntelliSense on both sides. In fact, you gain the good parts we already had many years ago with WCF - now for the ubiquitous & open web. But: is really everything gold that glitters?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-and-grpc-code-first-net-spa-developer-productivity",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-grpc-code-first",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 118
    },
    {
      "id": 191,
      "type": "Talk",
      "title": "Azure Arc enabled Kubernetes: Hybrid und Multi-Cloud",
      "date": "2021-01-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Endlich alle unter einem Dach. Mit Azure Arc enabled Kubernetes können Kubernetes-Cluster in Azure verwaltet und überwacht werden, und dies unabhängig davon, in welcher Umgebung der Cluster betrieben wird. Azure Arc dient als zentrales und professionelles Cockpit für Ihre Kubernetes-Cluster die in Amazon AWS, Google Compute Cloud, Digital Ocean, oder in privaten Rechenzentren betrieben werden. In diesem Webinar zeigt Thorsten Hans welche Möglichkeiten und Potentiale Azure Arc enabled Kubernetes bietet.  Anhand einer Beispielumgebung werden Sie sehen, wie Inventarisierung, Monitoring und Governance – unter Verwendung von Azure Policies und Open Policy Agent - auf externe Kubernetes-Cluster angewendet werden können.\n ",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-arc-enabled-kubernetes-hybrid-und-multi-cloud",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/arc-enabled-k8s-webinar-january-2021",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Kubernetes",
        "Azure"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 119
    },
    {
      "id": 189,
      "type": "Webinar",
      "title": "RxJS von Grund auf - Teil 2: Operatoren und Operatorenketten",
      "date": "2021-01-19 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im ersten Teil haben wir uns die grundlegenden Konzepte hinter RxJS näher angesehen. Dabei kam ein Blick hinter die Kulissen von Operatoren und Operatorketten zu kurz. In diesem Teil möchten wir besonderen Fokus auf diese Aspekte legen und den Vorhang lüften. Dazu werden wir uns nicht nur bestehende Operatoren ansehen, sondern uns mit der Erstellung eigener Operatoren auseinander setzen.\n\n* Kurzes Recap des ersten Webinar\n* Operatoren selbstgemacht\n* Verhalten in Operatorketten\n* Operatoren parametrisieren\n* Existierende Operatoren wiederverwenden",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-teil-2-operatoren-und-operatorenketten",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-02-rxjs-operators",
          "label": "Github Repo"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular, RxJS",
        "RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 117
    },
    {
      "id": 187,
      "type": "Webinar",
      "title": "Blazor Server: Mögliche Architekturalternative zu SPAs?",
      "date": "2020-12-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Viele .NET-Entwickler sind Feuer und Flamme wenn es um Blazor und Webentwicklung geht. Wenn man etwas genauer hinschaut, stellt man schnell fest, dass man gleich zwei Geschmacksrichtungen vor sich hat: Blazor WebAssembly und Blazor Server.\n\nIn diesem Webinar wollen wir uns genauer mit Blazor Server beschäftigen: Was ist Blazor Server überhaupt, wo liegen die Unterschiede zum Client-seitigen Blazor und SPAs im Allgemeinen und welche Auswirkungen haben diese Unterschiede auf die Art, wie wir Web-Anwendungen schreiben? Was muss ich lernen, um mit Blazor Server arbeiten zu können und worauf muss ich eventuell besonders achten, wenn ich meine ersten Schritte mit Blazor Server gehen möchte? All diese Fragen wird unser Experte Sebastian Gingter in dieser Session klären.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/blazor-server-mogliche-architekturalternative-zu-spas",
          "label": "Slides zum Webinar"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-blazor-server-12-2020",
          "label": "GitHub Repo mit dem Beispielcode"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Architecture",
        "ASP.NET Core",
        "SignalR",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 116
    },
    {
      "id": 186,
      "type": "Webinar",
      "title": "Full Throttle: Azure Infrastructures with Terraform",
      "date": "2020-12-09 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "You want to provision and manage your cloud infrastructure professionally yet still keep things simple? Then you should join this webinar and dive into Terraform with Thorsten Hans.\nYou will learn by practical examples how to automate your mission-critical workloads by adopting Infrastructure as Code (IaC) and mastering Terraform.\nWithin an hour, you will learn everything you need to create and manage your cloud environments. Thorsten explains all necessary concepts and techniques like the Terraform workflow, how modules work, expressions, and interpolation, by live-coding an example infrastructure during the webinar.\nAfter the event, you will be able to express your infrastructures in code, even if you are using different cloud offerings such as AWS, GCP, or Digital Ocean.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-december-2020",
          "label": "GitHub Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/full-throttle-azure-infrastructures-with-terraform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 115
    },
    {
      "id": 185,
      "type": "Webinar",
      "title": "Blazor WebAssembly: Neues in .NET 5\u000b",
      "date": "2020-12-08 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ähnlich wie bei Angular und React wird auch bei Blazor ständig an der Plattform weiter gearbeitet. Vor allem bei Blazor WebAssembly als relativer Framework-Neuling sind die Verbesserungen und Neuerungen des ASP.NET-Teams bei Microsoft von Interesse. In diesem Webinar zeigt Christian Weyer auf gewohnt pragmatische Art was alles neu ist im .NET-5-Release und wie diese Features einzuordnen sind.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-neues-in-net-5",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-things-to-know/tree/net5-demos",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor",
        ".NET Core",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 114
    },
    {
      "id": 184,
      "type": "Webinar",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-12-02 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann.\n\nIn unserem Thinktecture-Webinar zeigt Ihnen Christian Liebel mit Zone.js, Change Detection und Service Workern die wichtigsten Performance-Stellschrauben des Angular-Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-c737c808-80f3-4e86-b27f-54d311007d2c",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 113
    },
    {
      "id": 182,
      "type": "Webinar",
      "title": "Pragmatische API-Versionierung in ASP.NET Core",
      "date": "2020-11-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit, und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, so haben wir bei APIs das Problem, dass ältere Clientanwendungen mit dem neuen Verhalten nicht mehr zurecht kommen und dann auch nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unserer API. In diesem Webinar zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen wann überhaupt eine neue Version benötigt wird, welche verschiedenen Methoden es gibt eine ASP.NET-Core-Web-API zu versionieren und welche verschiedenen Herangehensweisen im Code möglich sind, unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-versioning-webinar-november-2020",
          "label": "GitHub - Repo"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/thinktecture-webinar-pragmatische-api-versionierung-in-asp-dot-net-core",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Versioning",
        "ASP.NET Core"
      ],
      "primaryTag": "ASP.NET Core",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "webinar-test",
      "bigmarkerRef": "1f15d74a37a4",
      "ctaKey": "Recording ansehen",
      "additionalInfo": "",
      "conference": 112
    },
    {
      "id": 183,
      "type": "Talk",
      "title": "Real-World Blazor WebAssembly : 5(+) Dinge, die Sie kennen sollten",
      "date": "2020-11-24 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "In diesen 60 Minuten spricht Christian Weyer über fünf Erkenntnisse aus dem praktischen Einsatz von Blazor WebAssembly - mit Demos, live und in Farbe. Auch wenn für Sie vielleicht nur ein einziges \"Ding\" dabei ist, das sie neu lernen: diese Session sollte sich dennoch lohnen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/real-world-blazor-webassembly-5-plus-dinge-die-sie-kennen-sollten",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-things-to-know",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "gRPC",
        "SPA",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 68
    },
    {
      "id": 134,
      "type": "Workshop",
      "title": "Tausche .NET gegen Web: Desktop-Apps als PWA entwickeln",
      "date": "2020-11-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Für .NET-Entwickler ist völlig klar: Wenn eine Desktopanwendung entwickelt werden muss, greift man zu Windows Forms oder WPF. In dieser DevSession nehmen wir eine alternative Technologie unter die Lupe: Progressive Web Apps. Dieses Anwendungsmodell auf Basis von Webtechnologien bietet nicht nur eine erstklassige Unterstützung für Desktopanwendungen, sondern läuft auf Basis desselben Quelltextes auch noch im Browser oder auf Mobilgeräten. Microsoft ist einer der wesentlichen Treiber der Progressive Web Apps – und das nicht erst, seitdem der eigene Browser Edge auf dem Chrome-Unterbau Chromium basiert. Im Rahmen von Project Fugu kooperiert Microsoft mit Intel und Google, um mächtige Schnittstellen für Webanwendungen einzuführen: Das schließt Dateizuordnungen, Zugriff auf das native Dateisystem oder die Zwischenablage sowie Sprunglisteneinträge mit ein. In dieser Session zeigt Ihnen Christian Liebel von Thinktecture, wie Sie erstklassige Produktivitätsapps für den Desktop als PWA entwickeln können – und ganz nebenbei auch noch Apps für den Browser und Mobilgeräte herausfallen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/tausche-net-gegen-web-desktop-apps-als-pwa-entwickeln",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ddc-2020-desktop-pwas",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org/",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 68
    },
    {
      "id": 132,
      "type": "Talk",
      "title": "Real-World Blazor: 5 Dinge, die Sie kennen sollten",
      "date": "2020-11-23 21:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Blazor Server oder Blazor WebAssembly: es gibt Dinge in Microsofts Web-UI-Framework, die sich mitunter erst im Projektalltag heraus kristallisieren. In diesen 60 Minuten spricht Christian Weyer über fünf Erkenntnisse aus dem praktischen Einsatz von Blazor Server & WebAssembly - mit Demos live und in Farbe. Auch wenn für Sie vielleicht nur ein einziges Ding dabei ist, das sie neu lernen: diese Session sollte sich dennoch lohnen ;-) ",
      "media": [],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 68
    },
    {
      "id": 181,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Plattform Realtime Push - 2",
      "date": "2020-11-17 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-core-signalr-cross-plattform-realtime-push-2",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "JavaScript",
        "Blazor",
        "ASP.NET Core",
        "SignalR"
      ],
      "primaryTag": "SignalR",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 111
    },
    {
      "id": 179,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Einführung in reaktives JavaScript",
      "date": "2020-11-10 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "RxJS ist sehr mächtig. So mächtig, dass es Angular als zentrales Denk- und Programmiermodell für die interne Kommunikation unter Komponenten und Services auserkoren hat.\n\nSie fühlen sich noch nicht sicher genug, RxJS in vollem Umfang einzusetzen? Dann zeigt Ihnen Yannick wie Sie mit den notwendigen Ideen, Konzepten und Grundlagen, RxJS im Handumdrehen verstehen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-einfuhrung-in-reaktives-javascript",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 110
    },
    {
      "id": 178,
      "type": "Webinar",
      "title": "Serverless Computing in Azure Kubernetes Service mit KEDA",
      "date": "2020-11-03 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit Azure Functions stellt Microsoft ein flexibles und mächtiges Framework für Serverless Computing bereit, womit skalierbare und reaktive Anwendungen erstellt werden können. Mit Kubernetes Event-driven Applications (KEDA), können Sie Ihre Azure Functions problemlos in einem Kubernetes-Cluster betreiben. Doch KEDA kümmert sich nicht nur um den Betrieb. Durch geschickte Integration von sowohl externen als auch internen Nachrichten- und Ereignissystemen wie Azure Service Bus oder Azure Event Hub skaliert KEDA Ihre Azure Functions automatisch anhand der anfallenden Anfragen",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/serverless-computing-in-azure-kubernetes-service-mit-keda-503afff9-4772-4c26-b9d8-9c846baec4ab",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/keda-webinar-november-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Kubernetes",
        "Serverless",
        "Azure"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 109
    },
    {
      "id": 175,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2020-10-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered-5a8402f4-2ec1-470c-805f-c44598b49e64",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 176,
      "type": "Talk",
      "title": "Implementing Productivity Apps with Angular and Fugu APIs",
      "date": "2020-10-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have been working since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included! This allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web. Thinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-2020-angular-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 133,
      "type": "Webinar",
      "title": "Web Components – das Ende der SPA-Framework-Ära?",
      "date": "2020-10-27 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components – ein Begriff, den wir immer öfter lesen und lesen werden. Dahinter stehen die Technologien Custom Elements, Shadow DOM und HTML Templates. Zusammen ergeben sie ein natives Komponentenmodell für unseren Browser. Es hilft uns, wiederverwendbare UI-Komponenten zu entwickeln, die wir in jeder App benutzen können. Völlig gleich, ob diese Anwendungen mit einem SPA-Framework entwickelt wurden. \n\nBedeutet das aber auch, dass wir eigentlich gar kein SPA-Framework mehr benötigen, sondern alles mit Web Components entwickeln können? Dieser spannenden Frage geht Manuel Rauber in diesem Webinar nach anhand einer Real-World-Demo-Applikation, Live-Coding und den Vor- und Nachteilen von Web Components.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-das-ende-der-spa-framework-ara",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 106
    },
    {
      "id": 172,
      "type": "Half Day Workshop",
      "title": "PWA-Bootcamp: von 0 auf MS Paint (hands-on)",
      "date": "2020-10-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Contributors Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. In diesem Bootcamp zeigt Ihnen Christian Liebel von Thinktecture, wie Sie in nur einem halben Tag eine vereinfachte Version von Paint implementieren und auf Ihrem Gerät installieren können – inklusive Dateisystemzugriff. Bitte bringen Sie Ihr Notebook (ohne Corporate-Proxys/Unternehmensrichtlinien) mit installiertem Google Chrome Canary und Microsoft Visual Studio Code mit.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-bootcamp-von-0-auf-ms-paint-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/mobiletechcon-2020-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 105
    },
    {
      "id": 174,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Taken to The Next Level",
      "date": "2020-10-27 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to take your Progressive Web App to the next level?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-taken-to-the-next-level",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 55
    },
    {
      "id": 171,
      "type": "Workshop",
      "title": "PWA Workshop: Progressive Web Apps, Superpowered",
      "date": "2020-10-25 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen shortcuts, clipboard access, and native file system access are only a few examples of Fugu’s powerful APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-workshop-progressive-web-apps-superpowered",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-munich-2020-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 177,
      "type": "Webinar",
      "title": "3D-Visualisierung im Web mit BabylonJS ",
      "date": "2020-10-20 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne Businessanwendungen sind schon lange nicht mehr langweilig: Daten wollen visualisiert werden und zwar verständlich und ansprechend. Genau dabei helfen Web-Grafik-Engines wie BabylonJS. Sie ermöglichen, 2D-, 3D, Virtual- und Augmented-Reality-Inhalte verständlich darzustellen. Somit lassen sich unter anderem digitale Konzepte visualisieren, konfigurieren und testen – Cross-Plattform und performant.\n\nIn dieser Session zeigt Max Schulte anhand einer Angular-Anwendung, Kernaspekte und Wege sowie einen Architekturansatz, um neue Visualisierungs- und Bedienmöglichkeiten in Ihre Anwendung integrieren zu können",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-visualisierung-im-web-mit-babylonjs",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-3d-visualisierung-babylonjs-angular",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://green-sky-080a5d803.azurestaticapps.net/",
          "label": "Demo App"
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#143",
          "label": "BabylonJS Playground Start"
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#142",
          "label": "BabylonJS Playground Ende"
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "JavaScript",
        "Architecture",
        "Typescript",
        "Web Technologies",
        "Webinar",
        "BabylonJs"
      ],
      "primaryTag": "BabylonJs",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 107
    },
    {
      "id": 135,
      "type": "Talk",
      "title": "Das Frontend-Experiment: Tausche Framework gegen Web Components",
      "date": "2020-10-14 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Aktuell sind Frameworks wie Angular oder React das Mittel der Wahl für webbasierte Frontends, doch das könnte sich in Zukunft ändern. Christian Liebel von Thinktecture wagt den Blick über den Tellerrand: Mit Web Components bekommt das Web derzeit ein Komponentenmodell, das kontinuierlich weiterentwickelt wird. Die heute bekannten Frameworks könnten damit in Zukunft weniger attraktiv werden. Anhand eines Experiments wird gezeigt, ob Frontends mit Web Components schon heute komplett ohne Framework aufgezogen werden können und ob das für die heute typische App-Entwicklung reichen könnte.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies",
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 57
    },
    {
      "id": 170,
      "type": "Webinar",
      "title": "Blazor WebAssembly jenseits von REST: gRPC in Web-Apps & .NET",
      "date": "2020-10-13 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor WebAssembly ermöglicht SPAs und PWAs für Desktop und Mobile - mit C#, .NET und HTTPS-/REST-Calls. Aber da muss es nicht aufhören. Über gRPC bzw. gRPC-Web kann man zum einen optimierte binäre Daten zwischen Blazor und APIs austauschen - und zum anderen eine Contract-First-Programmierung realisieren. Blazor kann auch hier im Konzert von etablierten Cross-Plattform-Lösungen mitspielen. Sehen Sie in diesem Webinar von Christian Weyer Blazor WebAssembly in Action - jenseits von REST.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-jenseits-von-rest-grpc-in-web-apps-and-net",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "gRPC",
        "ASP.NET Core",
        "Architecture",
        "SPA",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 104
    },
    {
      "id": 169,
      "type": "Talk",
      "title": "Real-time in no time (and costs) – with Azure Functions, Cosmos DB & SignalR",
      "date": "2020-10-13 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Let’s try to sort out some of the real strengths of Serverless and see where it can be a productive tool in your Cloud arsenal: real-time architectures & communication. Join Christian Weyer while discussing Azure Functions, Cosmos DB, and SignalR Service in a holistic scenario – by illustrating an end-to-end solution for a scalable real-time application built in almost no time, with almost no runtime costs. And action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/real-time-in-no-time-and-costs-with-azure-functions-cosmos-db-and-signalr",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Azure Functions",
        ".NET Core",
        "Architecture",
        "SignalR",
        "Serverless"
      ],
      "primaryTag": "Serverless",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 103
    },
    {
      "id": 167,
      "type": "Half Day Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-10-07 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-9ae2ffa5-17a4-4c07-9528-af5899ece615",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-perf",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 166,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2020-10-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-pwa",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-83a8be36-1440-4465-9ea8-813149a0c041",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 168,
      "type": "Workshop",
      "title": "RxJS in Angular-Anwendungen: so schwimmen Sie nicht mehr gegen den Stream",
      "date": "2020-10-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie sind Angular-Entwickler und fühlen sich noch nicht sicher genug, RxJS in vollem Umfang einzusetzen? Es hat sich gezeigt, dass es in der Community noch viel Unsicherheit in der Nutzung von RxJS gibt – selbst für erfahrene Entwickler. In dieser Session mit Yannick Baron wird die Denk- und Arbeitsweise hinter streambasiertem Datenfluss mit RxJS nochmal speziell im Kontext von Angular-Anwendungen angesehen. Darüber hinaus werden häufige Stolperfallen, Antipatterns und Patterns, sowie nützliche Anwendungsbeispiele vorgestellt, um die Anwendung von RxJS einfacher und vertrauter zu machen. Lasst uns gemeinsam mit dem Stream schwimmen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-in-angular-anwendungen-so-schwimmen-sie-nicht-mehr-gegen-den-stream",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-angular-demos",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 163,
      "type": "Workshop",
      "title": "Hands-on-Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2020-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und im Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mit Hilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single Page App Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-moderne-cross-plattform-losungen-01aea073-b24a-4f4a-a53b-aed937f7361d",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 164,
      "type": "Workshop",
      "title": "Kubernetes für Entwickler und Architekten",
      "date": "2020-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\nAusfallsichere und skalierbare Anwendungen zu betreiben und dabei ohne Ausfallzeiten neue Versionen Ihrer Software bereitzustellen, klingt auch heute noch für viele Lösungsanbieter nach einem schönen Traum. Mit Kubernetes und insbesondere den verwalteten Angeboten wie Azure Kubernetes Service (AKS) ist dieser Traum für Viele in greifbare Nähe gerückt. In diesem Tagesworkshop erklärt Thorsten Hans die Eigenschaften, Bestandteile und Möglichkeiten, die Kubernetes als Anwendungsplattform bietet. Nach dem Einstieg und den ersten Schritten mit Kubernetes werden Sie lernen, wie existierende Anwendungsbestandteile im Container-Orchestrator bereitgestellt und effektiv betrieben werden können. Essenzielle Themen, wie beispielsweise automatische Skalierung, der Umgang mit sensitiven Konfigurationsdaten, oder die Verwendung von externen, persistenten Datenspeichern, werden anhand von Beispielen aus der Praxis erläutert und können von Ihnen selbst erprobt werden.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-kubernetes-workshop",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-workshop-at-basta-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Docker",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 160,
      "type": "Talk",
      "title": "Serverless Computing in Azure Kubernetes Service mit KEDA",
      "date": "2020-09-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit Azure Functions stellt Microsoft ein flexibles und mächtiges Framework für Serverless Computing bereit, womit skalierbare und reaktive Anwendungen erstellt werden können. Mit Kubernetes Event-driven Applications (KEDA), können Sie Ihre Azure Functions problemlos in einem Kubernetes-Cluster betreiben. Doch KEDA kümmert sich nicht nur um den Betrieb. Durch geschickte Integration von sowohl externen als auch internen Nachrichten- und Ereignissystemen wie Azure Service Bus oder Azure Event Hub skaliert KEDA Ihre Azure Functions automatisch anhand der anfallenden Anfragen. In diesem Vortrag zeigt Thorsten Hans, wie Sie zukunftssichere, skalierbare und reaktive cloud-native Anwendungen erstellen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/serverless-computing-in-azure-kubernetes-service-mit-keda",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-keda",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 161,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum",
      "date": "2020-09-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum-f3051ae8-e858-4be1-9c36-a8e7a094e22e",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        3
      ],
      "tags": [
        "Electron",
        "Cordova",
        "Capacitor",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 162,
      "type": "Talk",
      "title": "3D-Daten-Visualisierung in Businessanwendungen mit BabylonJS – das Web kann’s",
      "date": "2020-09-23 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne Businessanwendungen sind schon lange nicht mehr langweilig: Daten wollen visualisiert werden und zwar verständlich und ansprechend. Genau dabei helfen Web-Grafik-Engines wie BabylonJS. Sie ermöglichen, 2D-, 3D, Virtual- und Augmented-Reality-Inhalte verständlich darzustellen. Somit lassen sich unter anderem digitale Konzepte visualisieren, konfigurieren und testen – Cross-Plattform und performant. In dieser Session zeigt Max Schulte anhand einer Angular-Anwendung Kernaspekte und Wege sowie einen Architekturansatz, um neue Visualisierungs- und Bedienmöglichkeiten in Ihre Anwendung integrieren zu können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-demo-basta-2020-mainz",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-daten-visualisierung-in-businessanwendungen-mit-babylonjs-das-web-kanns",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#142",
          "label": "BabylonJS PLayground - Live Coding "
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Mobile",
        "Typescript",
        "BabylonJs"
      ],
      "primaryTag": "BabylonJs",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 158,
      "type": "Talk",
      "title": "Kubernetes für .NET Core Entwickler",
      "date": "2020-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie möchten Ihre .NET-Core-Anwendung in Kubernetes betreiben und lernen, wie Sie das Potenzial des Container-Orchestrators nutzen können? Dann besuchen Sie diesen Talk von Kubernetes- und Cloud-native-Experte Thorsten Hans. Sie werden nicht nur den praktischen Umgang mit Kubernetes aus Sicht des Entwicklers lernen, sondern auch, wie Sie Patterns und Praktiken nutzen, um Ihre .NET-Core-Anwendungen optimal in Containern zu betreiben.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-aks",
          "label": "GitHub Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-fur-net-core-etnwicker",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 156,
      "type": "Talk",
      "title": "ASP.NET Core Web-API-Versionierung direkt aus der Praxis",
      "date": "2020-09-22 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, haben wir bei APIs das Problem, dass sich ältere Clientanwendungen auf das Verhalten verlassen, das wir damals bereitgestellt hatten. Änderungen daran würden die Clients nicht verstehen und daher nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unseres API. In dieser Session zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen, wann überhaupt eine neue Version benötigt wird, welche verschiedenen Methoden es gibt, um ein ASP.NET-Core-Web-API zu versionieren, und welche verschiedenen Herangehensweisen im Code möglich sind, um unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-api-versioning",
          "label": "Beispielcode und Demos auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-hybrid-2020-asp-dot-net-core-api-versionierung-aus-der-praxis",
          "label": "Slides bei Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Versioning",
        "ASP.NET Core",
        "Integration",
        "Microservices",
        "Architecture",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 157,
      "type": "Talk",
      "title": "ASP.NET Core Blazor: Single Page Applications im Browser mit C# & WebAssembly",
      "date": "2020-09-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) – bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell – je nach Anwendungsfall – die Grenzen liegen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-single-page-applications-im-browser-mit-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "PWA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 159,
      "type": "Talk",
      "title": "Progressive Web Apps mit Angular: Tipps für Fortgeschrittene",
      "date": "2020-09-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifendes Anwendungsmodell, das auf Webtechnologien basiert. Auch Googles SPA Framework Angular enthält eine PWA-Unterstützung, die schnell angeschaltet ist. Doch damit geht die Arbeit erst richtig los: Christian Liebel zeigt Ihnen, wie Sie mit Angular-App-Updates richtig kommunizieren, Cache-Probleme debuggen und den Anwender korrekt zum Abonnement von Pushbenachrichtigungen oder zum Installieren der App auffordern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-tipps-fur-fortgeschrittene-9c0c117d-93e4-4557-8404-30e43bfcc40c",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 155,
      "type": "Workshop",
      "title": "ASP.NET Core Blazor: moderne Businessanwendungen mit C# & WebAssembly – Full-Stack & Cross-Plattform",
      "date": "2020-09-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht webnative Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor WebAssembly Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET Web-basierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browserplattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Zur Abrundung des Workshops soll auch ein Blick auf Server-side Blazor und der Vergleich damit nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-and-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "Web Components",
        "SPA",
        "Architecture",
        "PWA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 154,
      "type": "Webinar",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff [Webinar]",
      "date": "2020-09-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden.\n\nChristian Liebel zeigt Ihnen die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-25bc73fd-b138-4ac8-8eae-0ea5f9d5e5a9",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "b1af99b54d9e",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 100
    },
    {
      "id": 153,
      "type": "Talk",
      "title": "Blazor-Gwerch: Dodned im Brausa - echt etz?",
      "date": "2020-09-11 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor bereits in einer frühen Vorab-Version möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-gwerch-dodned-im-brausa-echt-etz",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "PWA",
        "Web Technologies",
        "WebAssembly",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 38
    },
    {
      "id": 152,
      "type": "Webinar",
      "title": "Infrastructure as Code - Azure with HashiCorp Terraform",
      "date": "2020-09-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar-september-2020",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-september-2020",
          "label": "Sample GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Terraform",
        "Azure",
        "Infrastructure as Code"
      ],
      "primaryTag": "Infrastructure as Code",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 99
    },
    {
      "id": 115,
      "type": "Talk",
      "title": " Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2020-09-04 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 37
    },
    {
      "id": 150,
      "type": "Workshop",
      "title": "Web-Apps schneller entwickeln mit Ionic & Angular",
      "date": "2020-09-03 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen werden schnell komplex. Neben den rapide wechselnden Anforderungen soll die App installierbar, performant und einfach zu warten sein – und die Entwicklungszeit ist kosteneffektiv knapp bestimmt. Genau diese und andere Herausforderungen versucht Ionic als opinionated Framework zu adressieren. \n\nIn diesem Workshop zeigt Max Schulte, was mit Ionic und Angluar möglich ist und wie Ionic, dank seiner Tools, \"Production Ready\"-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/web-apps-schneller-entwickeln-mit-ionic-and-angular",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-ionic",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Capacitor",
        "Web Technologies",
        "Web Components",
        "Mobile",
        "PWA",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 149,
      "type": "Half Day Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-09-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-20655223-0b14-43ab-ba43-5b8943e2dad7",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-perf",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "Performance"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 151,
      "type": "Talk",
      "title": "Web Components: An Overview",
      "date": "2020-09-02 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "A brief overview of web components in regard to the question \"can web components replace SPA frameworks?\".",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-components-an-overview",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 37
    },
    {
      "id": 148,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2020-09-02 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-e71f0872-ccce-43de-9da3-f63db1b40c24",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-pwa",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://speakerdeck.com/thorstenhans/ohne-netz-aber-mit-doppeltem-boden-offline-first-apps-mit-html5-und-sql-server-backend",
          "label": "Ohne Netz, aber mit doppeltem Boden: Offline-First-Apps mit HTML5 und SQL Server Backend"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 147,
      "type": "Webinar",
      "title": "Blazor Server: Mögliche Architekturalternative zu SPAs?",
      "date": "2020-08-12 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Viele .NET-Entwickler sind Feuer und Flamme wenn es um Blazor und Webentwicklung geht. Wenn man etwas genauer hinschaut, stellt man schnell fest, dass man gleich zwei Geschmacksrichtungen vor sich hat: Blazor WebAssembly und Blazor Server.\n \nIn diesem Webinar wollen wir uns genauer mit Blazor Server beschäftigen: Was ist Blazor Server überhaupt, wo liegen die Unterschiede zum Client-seitigen Blazor und SPAs im Allgemeinen und welche Auswirkungen haben diese Unterschiede auf die Art, wie wir Web-Anwendungen schreiben? Was muss ich lernen, um mit Blazor Server arbeiten zu können und worauf muss ich eventuell besonders achten, wenn ich meine ersten Schritte mit Blazor Server gehen möchte?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/isabelschrage/blazor-server-mogliche-architekturalternative-zu-spas",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "SPA",
        "ASP.NET Core",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": "f61bec5686c7",
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 98
    },
    {
      "id": 146,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-07-28 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number-juli-2020",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "Web Technologies",
        "SPA",
        ".NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 97
    },
    {
      "id": 145,
      "type": "Webinar",
      "title": "Electron, Cordova & PWA - was, wann, wie & warum?",
      "date": "2020-07-21 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang.\n\nPWA-Professional Christian Liebel erklärt Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-and-pwa-was-wann-wie-and-warum",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Electron",
        "Web Technologies",
        "PWA",
        "Cordova"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 96
    },
    {
      "id": 144,
      "type": "Webinar",
      "title": "Git started",
      "date": "2020-07-14 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Versionskontrolle ist ein Muss in jedem Projekt, ob groß oder klein, professionell oder privat. Git wurde 2005 ins Leben gerufen und ist eines der populärsten Systeme zur verteilten Versionsverwaltung.\nSetzen sie schon Git ein und fühlen sich unsicher in der Verwendung, oder ist Git neu für Sie?\n\nDieses Webinar erklärt das Konzept hinter Git und illustriert die Verwendung im Day-to-Day-Business, um ein fundamentales Verständnis zu vermitteln. Auch Every-Day-Benutzer könnten das eine oder andere noch dazu lernen. Let's git started - alle zusammen!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/git-started-verteilte-versionsverwaltung-mit-git",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 95
    },
    {
      "id": 143,
      "type": "Webinar",
      "title": "Docker für .NET Entwickler",
      "date": "2020-07-07 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/docker-webinar",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/docker-webinar",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Containers",
        "Docker"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 94
    },
    {
      "id": 142,
      "type": "Webinar",
      "title": "Azure Functions - Serverless für .NET Entwickler",
      "date": "2020-06-30 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Serverless-Modell ist eine von vielen verschiedenen Möglichkeiten, Anwendungen für die Cloud zu entwickeln und zu betreiben. Es verspricht einen leichten Einstieg in die Entwicklung von Anwendungen und in den Betrieb eines Backends. Dabei ist leider nicht immer klar, wann und wie das Serverless-Modell sinnvoll genutzt werden kann.\n\nIn diesem Webinar zeigt Boris Wilhelms, was das Serverless-Modell ist und wie wir als .NET-Entwickler Azure Functions nutzen können um Serverless Code zu schreiben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/azure-functions-serverless-fur-net-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-azure-functions",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "Azure",
        ".NET Core",
        "Serverless",
        "Webinar",
        "Azure Functions"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 93
    },
    {
      "id": 141,
      "type": "Talk",
      "title": "Angular für XAML-Entwickler",
      "date": "2020-06-30 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das moderne Web lockt mit mächtigen Features und sprengt Plattformgrenzen. Googles SPA-Framework Angular eröffnet einen möglichen Weg in diese schöne neue Welt. Das Framework weist zwar eine gewisse Lernkurve auf, doch XAML-Entwickler haben beim Einstieg in die Technologie glücklicherweise entscheidende Vorteile: Denn viele aus WPF, Silverlight und UWP bekannte Konzepte finden sich auch in Angular wieder. In diesem Webinar möchten wir XAML-Entwicklern anhand konkreter Fallbeispiele eine Orientierungshilfe geben und zeigen, wie der Einstieg in die Entwicklung mit Angular rasch gelingen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-fur-xaml-entwickler-20eb1f34-cf5c-4d1d-b639-b2d8522ad933",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-angular",
          "label": "Angular-Beispiel"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-wpf",
          "label": "WPF-Beispiel"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 85
    },
    {
      "id": 131,
      "type": "Talk",
      "title": "Blazor jenseits von REST: SignalR & gRPC in Web-Apps",
      "date": "2020-06-29 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor WebAssembly ermöglicht SPAs und PWAs für Desktop und Mobile - mit C#, .NET und HTTPS-/REST-Calls. Aber da muss es nicht aufhören. Über gRPC bzw. gRPC-Web kann man zum einen hoch optimierte binäre Daten zwischen Blazor und APIs austauschen - und zum anderen eine Contract-First-Programmierung realisieren. Wenn man zudem ein bisschen Leben in Form von Echtzeit-Updates in die Anwendung bringen möchte, dann ist SignalR die richtige Wahl. Blazor kann auch hier im Konzert der Cross-Plattform-Lösungen mitspielen. Sehen Sie in dieser Session von Christian Weyer Blazor in Action - jenseits von REST.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-jenseits-von-rest-signalr-and-grpc-in-web-apps",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/dwx-home-blazor-grpc-signalr",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "SignalR",
        "gRPC",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 85
    },
    {
      "id": 139,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Plattform Realtime Push",
      "date": "2020-06-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-signalr-core-cross-platform-realtime-push",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Blazor",
        "SignalR"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 91
    },
    {
      "id": 138,
      "type": "Webinar",
      "title": "Angular für XAML-Entwickler",
      "date": "2020-06-09 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das moderne Web lockt mit mächtigen Features und sprengt Plattformgrenzen. Googles SPA-Framework Angular eröffnet einen möglichen Weg in diese schöne neue Welt. Das Framework weist zwar eine gewisse Lernkurve auf, doch XAML-Entwickler haben beim Einstieg in die Technologie glücklicherweise entscheidende Vorteile: Denn viele aus WPF, Silverlight und UWP bekannte Konzepte finden sich auch in Angular wieder. In diesem Webinar möchten wir XAML-Entwicklern anhand konkreter Fallbeispiele eine Orientierungshilfe geben und zeigen, wie der Einstieg in die Entwicklung mit Angular rasch gelingen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-fur-xaml-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-angular",
          "label": "Angular-Beispiel"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-wpf",
          "label": "WPF-Beispiel"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 90
    },
    {
      "id": 137,
      "type": "Webinar",
      "title": "Azure Kubernetes Service für .NET Core Entwickler",
      "date": "2020-06-02 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-kubernetes-service-fur-net-core-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/aks-netcore-webinar",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        ".NET Core",
        "AKS",
        "Docker"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 89
    },
    {
      "id": 136,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-05-26 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Webinar anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number-1bf79f69-2ba4-413c-b0a1-04c794513a88",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "SPA",
        ".NET Core",
        "Web Technologies",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 88
    },
    {
      "id": 173,
      "type": "Webinar",
      "title": "Web Components – das Ende der SPA-Framework-Ära?",
      "date": "2020-05-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components – ein Begriff, den wir immer öfter lesen und lesen werden. Dahinter stehen die Technologien Custom Elements, Shadow DOM und HTML Templates. Zusammen ergeben sie ein natives Komponentenmodell für unseren Browser. Es hilft uns, wiederverwendbare UI-Komponenten zu entwickeln, die wir in jeder App benutzen können. Völlig gleich, ob diese Anwendungen mit einem SPA-Framework entwickelt wurden. \n\nBedeutet das aber auch, dass wir eigentlich gar kein SPA-Framework mehr benötigen, sondern alles mit Web Components entwickeln können? Dieser spannenden Frage geht Manuel Rauber in diesem Webinar nach anhand einer Real-World-Demo-Applikation, Live-Coding und den Vor- und Nachteilen von Web Components.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-das-ende-der-spa-framework-ara-c68b0388-7730-4822-abc5-c7e96e18a067",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 86
    },
    {
      "id": 127,
      "type": "Webinar",
      "title": "3D-Visualisierung in Web Apps: Angular und BabylonJS in Symbiose",
      "date": "2020-05-12 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Dieses Webinar zeigt die Vorteile einer 3D-Engine in modernen Business-Anwendungen. Es wird in Detail auf die Aspekte einer integrativen Architektur eingegangen und anhand einer Demo und Live-Code verdeutlicht wie die Kommunikation stattfinden kann. ",
      "media": [
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": "Lagerhaus Beispiel App"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-architecture",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-visualisierung-in-web-apps-angular-und-babylonjs-in-symbiose",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Architecture",
        "Performance",
        "Web Technologies",
        "BabylonJs"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 80
    },
    {
      "id": 130,
      "type": "Webinar",
      "title": "Entity Framework Core - Performance-Optimierung aus der Praxis",
      "date": "2020-05-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit der Veröffentlichung von Entity Framework Core v3 hat sich das Verhalten des Objekt-Relationalen-Mappers von Microsoft an einigen Stellen maßgeblich geändert. Einige Performanceprobleme haben sich mit der neuen Version praktisch von selbst gelöst, andere Probleme sind neu bzw. aus älteren Versionen von Entity Framework zurückgekehrt. Es ist somit sehr empfehlenswert zu wissen, welche Version für welche Problemart besonders anfällig ist, um möglichst viel Geschwindigkeit aus EF-Abfragen und den dahinterliegenden SQL-Abfragen herauszuholen.\nIm ersten Teil des Webinars werden die häufigsten Performance-Probleme in Entity Framework Core v2 und v3 aufgezeigt. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden SQL Server Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/entity-framework-core-performance-optimierung-aus-der-praxis",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Execution Plan",
        "MS SQL Server",
        "Performance",
        "Entity Framework Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 84
    },
    {
      "id": 227,
      "type": "Webinar",
      "title": "Entity Framework Core 5 - Performance-Optimierung aus der Praxis",
      "date": "2020-05-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ef-core-performance-webinar-2021",
          "label": "Demos"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/entity-framework-core-5-performance-optimierung-aus-der-praxis",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 84
    },
    {
      "id": 117,
      "type": "Webinar",
      "title": "ASP.NET Core Web-API Dokumentation mit Swagger",
      "date": "2020-04-29 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wenn wir eine .NET Core Web-API bauen, ist es nicht nur damit getan, ein neues Projekt zu erzeugen, ein paar Controller zu implementieren und sie dann zu deployen.\n\nEine API ist - wie der Name schon sagt - eine Schnittstelle, und eine Schnittstelle sollte wohl definiert und auch wohl dokumentiert sein. Vor allem, damit die Entwickler, die mit unserer API arbeiten müssen, auch wissen was sie kann und wie sie funktioniert. Allerdings soll uns die Dokumentation nicht zu viel Zeit kosten und sie sollte möglichst immer auf dem aktuellen Stand sein. Und was wäre, wenn eine solche, schnell erstellte Dokumentation uns als API-Entwickler und auch den Konsumenten unserer API auch noch Arbeit abnehmen könnte?\n\nIn diesem Webinar zeigt Ihnen Sebastian Gingter wie man diese beiden Fliegen mit einer Klappe schlagen kann: Mit Hilfe von Swagger erzeugen wir erst eine umfassende, ständig aktuelle und lebendige Dokumentation unserer API im Open API Format. Danach sehen wir uns an, wie uns diese technische Dokumentation helfen kann, zum einen Zeit zu sparen und zum anderen Fehler zu vermeiden, in dem wir diese akkurate Basis nehmen, um Client- Code und Test-Rümpfe zu generieren. Web APIs jenseits von Hello World, mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/tt-webinar-2020-openapi",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/tt-webinar-2020-openapi",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Swagger",
        "ASP.NET Core",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 77
    },
    {
      "id": 116,
      "type": "Webinar",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2020-04-21 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel zeigt Ihnen die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-5abb7495-ffd9-4b00-b8bc-589f079f79a2",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pwa-deep-dive-webinar",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://www.thinktecture.com/de/cheatsheet/pwa",
          "label": "PWA Cheat Sheet"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies",
        "Webinar",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 76
    },
    {
      "id": 114,
      "type": "Talk",
      "title": "Web Components als Frameworkersatz – das Frontend-Experiment",
      "date": "2020-04-16 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wenn ein Frontend im Web benötigt wird, ist die Wahl schnell auf die üblichen Verdächtigen eingegrenzt: Angular, React oder Blazor. Durch Web Components könnte sich das in Zukunft ändern. Christian Liebel von Thinktecture wagt einen Blick in die Glaskugel: Mit Web Components hat das Web ein Komponentenmodell erhalten, das kontinuierlich weiterentwickelt wird. Vielleicht braucht es in Zukunft nicht mehr für jeden Anwendungsfall zwingend ein schweres Framework. Anhand eines Experiments wird demonstriert, ob sich Frontends schon heute komplett mit Web Components statt Frameworks aufziehen lassen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-components-als-frameworkersatz-das-frontend-experiment",
          "label": ""
        },
        {
          "type": "Video",
          "url": "https://www.twitch.tv/videos/594354515?t=05h42m47s",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 75
    },
    {
      "id": 113,
      "type": "Talk",
      "title": "Terraform Webinar",
      "date": "2020-04-16 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/terraform-webinar-azure-meetup-ffm",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform"
      ],
      "primaryTag": "Terraform",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 74
    },
    {
      "id": 112,
      "type": "Webinar",
      "title": "Infrastructure as Code mit Terraform",
      "date": "2020-04-14 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-april-2020",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 73
    },
    {
      "id": 110,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-04-01 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Webinar anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "SPA",
        ".NET Core",
        "Web Technologies",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 71
    },
    {
      "id": 108,
      "type": "Workshop",
      "title": "Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2020-02-28 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Push-Benachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-fur-moderne-cross-plattform-losungen",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pwapraxis/angular-demo",
          "label": "Angular-Projekt"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pwapraxis/server",
          "label": "Server"
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 101,
      "type": "Talk",
      "title": "Swagger & Co. im Praxiseinsatz für Tests und Clients",
      "date": "2020-02-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Als Entwickler wollen wir uns das Leben möglichst einfach machen. Und wenn wir eine Aufgabe vor uns haben, dann wollen wir auch möglichst viel damit erreichen. Nun haben wir ein ASP.NET-Core-Web-API gebaut, und es mit Hilfe von Swagger dokumentiert. Und nun? In dieser Session zeigt Ihnen Sebastian Gingter, wie man mit möglichst wenig Aufwand möglichst viel aus einer lebendigen Swagger-Dokumentation herausholen kann. Dabei erleben Sie auch, wie man von dort aus mit wenigen Schritten zu einer umfassenden End-to-End-Testsuite kommt. Und wenn wir schon dabei sind, dann schauen wir uns auch noch an, wie wir von der Dokumentation zu komplett funktionalen Clientbibliotheken kommen, ohne uns zu sehr anzustrengen: E2E-Web-APIs – jenseits von Hello World und mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-openapi",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-spring-2020-openapi",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Swagger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 107,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum?",
      "date": "2020-02-26 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum-42fa2c1b-346d-4e77-a03a-4b03036d9048",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-electron-cordova-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Cordova",
        "Electron",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 106,
      "type": "Talk",
      "title": "Progressive Web-Apps mit Angular: Tipps für Fortgeschrittene",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifendes Anwendungsmodell, das auf Webtechnologien basiert. Auch Googles SPA Framework Angular enthält eine PWA-Unterstützung, die schnell angeschaltet ist. Doch damit geht die Arbeit erst richtig los: Christian Liebel zeigt Ihnen, wie Sie mit Angular App-Updates richtig kommunizieren, Cacheprobleme debuggen und den Anwender korrekt zum Abonnement von Push-Benachrichtigungen oder zum Installieren der App auffordern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-tipps-fur-fortgeschrittene",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-advanced-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 104,
      "type": "Talk",
      "title": "Blazor: SPAs im Browser mit C# und WebAssembly",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-spas-im-browser-mit-c-number-und-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "PWA",
        "Web Components",
        "Web Technologies",
        "SPA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 102,
      "type": "Talk",
      "title": "Web Components: native Komponenten fürs Web – das Ende der SPA Frameworks?",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Komponenten – ein Begriff der uns Entwicklern sehr geläufig ist, egal ob als Windows-, Desktop- oder Webentwickler. Durch Kapselung von UI-Definition und Code-behind erhalten wir modulare und wiederverwendbare Bausteine zum Zusammensetzen der Oberfläche unserer Anwendung. Während wir damals im Web mit jQueryUI erste Komponenten entwickeln konnten, bedienen wir uns heute moderner Frameworks wie Angular, React oder Vue.js. Doch mit den Webstandards für HTML-Templates, Shadow DOM und Custom Elements erhalten wir die Möglichkeit, ein natives Komponentenmodell im Browser zu nutzen, gänzlich ohne Frameworks: Es leben die Web Components! In dieser Session klärt Manuel Rauber, wie Web Components funktionieren, wo die Vorteile und Nachteile liegen und ob wir heutzutage schon in der Lage sind, Single Page Applications zu entwickeln, die gänzlich ohne Frameworks auskommen. Sind Sie auch schon auf die Antworten gespannt?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-native-komponenten-furs-web-das-ende-der-spa-frameworks",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-web-components/",
          "label": "Live Demo"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": "Chat Demo"
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": "Chat Online Demo"
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Web Components",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 103,
      "type": "Talk",
      "title": "Pragmatische Microservices mit .NET Core (3) – mehr als nur gRPC",
      "date": "2020-02-24 21:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Microservices: ja! Oder eher doch nicht? Um diese Frage beantworten zu können, klärt Christian Weyer in diesem Vortrag, was Microservices sind, was sie nicht sind, wann man sie nutzt – und vor allem: wie man Microservices in der .NET-Welt implementieren kann. Sehen Sie Architekturansätze und Patterns in Aktion und erleben Sie Technologien wie Web-APIs, gRPC, Push Messaging, Background Workers und Co. im praktischen Einsatz mit .NET Core 3. Versuchen wir gemeinsam, langweilige Architekturthemen spannend zu machen – durch eine pragmatische Sichtweise.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pragmatic-microservices-dotnetcore",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-mit-net-core-3-mehr-als-nur-grpc",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Architecture",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 105,
      "type": "Workshop",
      "title": "Workshop - Blazor: Moderne Businessanwendungen mit C# & WebAssembly – Full-Stack- und Cross-Plattform",
      "date": "2020-02-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht-webnativen Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET webbasierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browser-P﻿lattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Als Abrundung des Workshops soll auch ein Blick auf und ein Vergleich mit Server-side Blazor nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/workshop-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-und-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "SPA",
        "PWA",
        "Web Components",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 100,
      "type": "Talk",
      "title": "Hot Topic: Dependency Injection",
      "date": "2020-02-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Dependency Injection (DI). By now, everyone should have heard about it.\nBut what actually is \"Dependency Injection\" and \"Inversion of Control\"?\nWe can find 'it' implemented in a lot of frameworks nowadays and for\nsomeone not familiar with the concept it might seem like magic.\nIn this session we are going to take a closer look behind the curtains\nof this software design principle and show what DI can do for us and how\na very simplistic version could be implemented in Javascript.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/hot-topic-dependency-injection-lets-talk-about-it",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/dependency-injection-poc",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular",
        "Architecture",
        "Typescript"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 69
    },
    {
      "id": 99,
      "type": "Talk",
      "title": "Angular - BabylonJS Integration Deep Dive",
      "date": "2020-02-06 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "\"Angular - BabylonJS Integration Deep Dive\" - This talk demonstrates how Angular and BabylonJS can be integrated in detail, what key aspects are there, and gives an idea of what can be created with the demonstrated approach.\nYou will learn about the similarities and differences between Angular and BabylonJS, as well as an approach to create a future proof architecture that utilizes the best of both frameworks.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/angular-babylonjs-integration-deep-dive",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-architecture",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Architecture",
        "BabylonJs",
        "Integration",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 67
    },
    {
      "id": 80,
      "type": "Talk",
      "title": "Web Components, ganz ohne Framework! Live & in Action ",
      "date": "2020-01-21 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Jeder kennt es: Kapselung und Wiederverwendung von UI-Komponenten im Web sind sehr mühsam. Meist ist es ein Zusammenkopieren von HTML, CSS und JavaScript, oftmals über eine oder mehrere Dateien verteilt. Vergisst man einen Teil, sieht es nicht wie gewünscht aus oder die Interaktion funktioniert nicht.\nDoch damit ist jetzt Schluss! Mit Web Components eröffnen sich neue Wege im Web, um UI-Komponenten standardisiert und ganz ohne Framework implementieren und verwenden zu können. In dieser Session zeigt Patrick Jahr die wichtigsten Punkte für die erste eigene Web Component mit den Standards HTML Templates, Custom Elements und Shadow DOM. Alles Live mit VSCode, Chrome und den DevTools – in Action!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/web-component-ganz-ohne-framework-live-and-in-action-81b71392-fd8e-4d7f-b0d3-0a828673f7f1",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/rnjs-native-web-components",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        "JavaScript",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 51
    },
    {
      "id": 81,
      "type": "Workshop",
      "title": "Serverless-Architekturen für Java, .NET und node.js – mit Azure Functions & Co.",
      "date": "2019-12-10 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Egal ob Sie Java, .NET oder node.js als Haupttechnologie nutzen: mit Serverless-Ansätzen können Sie schnell \"Gummi auf die Straße\" bringen, um ihre Microservices oder Ihren \"Glue Code\" mir-nichts-dir-nichts entwickeln und bereitstellen zu können. In diesem Workshop sehen Sie Azure Serverless-Dienste ohne großes Marketing-Tamtam im Einsatz. Neben den Grundlagen werden vor allem typische Anwendungsszenarien für Azure Functions, Azure Service Bus, Azure Storage und Co. illustriert. Lehnen Sie sich also zurück und sehen Sie Serverless in Action, mit Java, .NET und JavaScript.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-fur-java-net-und-node-dot-js-mit-azure-functions-and-co",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure Functions",
        "Serverless",
        "Microservices",
        ".NET Core",
        "Azure",
        "Java",
        "JavaScript"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 41
    },
    {
      "id": 76,
      "type": "Workshop",
      "title": "Offline-First: Architektur-Patterns & Implementierung für APIs & Backends",
      "date": "2019-12-10 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\"Keine Internetverbindung\" – ein Satz, den wir alle aus vielen Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form eines HTTP APIs. Wie man sein Backend um eine offline-fähige Architektur erweitert, um es bspw. von einer SPA/PWA nutzen zu können, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Workshop. Denn bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Allgemein werden Themen im API Design, u.a. Synchronisationsstrategien von Anwendungs- und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur – sowohl für neue als auch bestehende Anwendungen – diskutiert. Am Beispiel einer PWA mit einem Backend in Java als auch in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns gezeigt.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/offline-first-architektur-patterns-and-implementierung-fur-apis-and-backends",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-boardist-offline.azurewebsites.net/",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-boardist.azurewebsites.net/games",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 41
    },
    {
      "id": 50,
      "type": "Talk",
      "title": "Entity Framework Core - Performanzoptimierung",
      "date": "2019-12-09 10:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Entity Framework hat Microsoft vor Jahren einen Objekt-Relationalen-Mapper geschaffen, welcher sich in der .NET-Welt mittlerweile einer großen Beliebtheit erfreut. Der O/R-Mapper ermöglicht es, ohne SQL-Kenntnisse auf eine Datenbank sowohl lesend als auch schreibend zuzugreifen. Doch hier verbergen sich Risiken, denn ein O/R-Mapper erweckt den Eindruck, dass der Anwendungsentwickler sich nie wieder mit SQL zu befassen braucht - was für 80% der Abfragen in einer Anwendung auch stimmen mag. Die restlichen 20% können allerdings die gesamte Applikation durch sehr schlechte Antwortzeiten beinah unbenutzbar machen. Die unperformanten SQL-Abfragen sind jedoch nicht die einzige Quelle welche die Benutzbarkeit in Mitleidenschaft ziehen. Es spielt auch eine Rolle wie genau Entity Framework im Code verwendet wird. Nicht selten wird die Tatsache vergessen, dass die LINQ-Abfragen am Ende nicht im Arbeitsspeicher, sondern durch die Datenbank ausgeführt werden – mehr oder weniger „transparent“. In ersten Teil des Vortrags wird gezeigt auf was geachtet werden sollte, um die häufigsten Stolperfallen bei der Verwendung von Entity Framework Core zu vermeiden. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden die Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/it-tage-2019-entity-framework-core-performanzoptimierung",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Execution Plan",
        "MS SQL Server",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 52
    },
    {
      "id": 64,
      "type": "Talk",
      "title": "Progressive Web Apps: Cross-Plattform-Apps über iOS und macOS hinaus",
      "date": "2019-12-04 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\nStellen Sie sich vor, Sie schreiben Ihre App einmal – und sie läuft nicht nur auf macOS und iOS, sondern auch noch auf Windows, Android, Linux, Chrome, Safari, Firefox und Edge! Der alte Java-Traum \"Write once, run anywhere\" wird mit den Progressive Web Apps endlich Wirklichkeit. Christian Liebel stellt Ihnen das neue Anwendungsmodell abseits des App Store einschließlich seiner technologischen Grundlagen vor, und zeigt, was es leisten kann und wo die Grenzen der PWA liegen.",
      "media": [
        {
          "type": "Related Link",
          "url": "https://heise-macdev.de/lecture.php?id=9471&source=0",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-cross-plattform-apps-uber-ios-und-macos-hinaus",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 29
    },
    {
      "id": 74,
      "type": "Talk",
      "title": "“Alles C#, oder was?\" Cross-Plattform Web-Anwendungen mit ASP.NET Core Blazor",
      "date": "2019-11-26 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor bereits in einer frühen Vorab-Version möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/alles-c-number-oder-was-cross-plattform-web-anwendungen-mit-asp-dot-net-core-blazor",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "PWA",
        "Web Technologies",
        "WebAssembly"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 51,
      "type": "Talk",
      "title": "Entity Framework Core - Performanzoptimierung",
      "date": "2019-11-26 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Entity Framework hat Microsoft vor Jahren einen Objekt-Relationalen-Mapper geschaffen, welcher sich in der .NET-Welt mittlerweile einer großen Beliebtheit erfreut. Der O/R-Mapper ermöglicht es, ohne SQL-Kenntnisse auf eine Datenbank sowohl lesend als auch schreibend zuzugreifen. Doch hier verbergen sich Risiken, denn ein O/R-Mapper erweckt den Eindruck, dass der Anwendungsentwickler sich nie wieder mit SQL zu befassen braucht - was für 80% der Abfragen in einer Anwendung auch stimmen mag. Die restlichen 20% können allerdings die gesamte Applikation durch sehr schlechte Antwortzeiten beinah unbenutzbar machen. Die unperformanten SQL-Abfragen sind jedoch nicht die einzige Quelle welche die Benutzbarkeit in Mitleidenschaft ziehen. Es spielt auch eine Rolle wie genau Entity Framework im Code verwendet wird. Nicht selten wird die Tatsache vergessen, dass die LINQ-Abfragen am Ende nicht im Arbeitsspeicher, sondern durch die Datenbank ausgeführt werden – mehr oder weniger „transparent“. In ersten Teil des Vortrags wird gezeigt auf was geachtet werden sollte, um die häufigsten Stolperfallen bei der Verwendung von Entity Framework Core zu vermeiden. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden die Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/ddc-2019-entity-framework-core-performance-optimization",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Performance",
        "MS SQL Server",
        "Execution Plan"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 63,
      "type": "Workshop",
      "title": "Progressive Web Apps für .NET-Entwickler: Frontend der Zukunft",
      "date": "2019-11-25 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET Core eignet sich hervorragend zur Implementierung plattformübergreifender Konsolenanwendungen und Backends. Zuletzt haben nun auch wieder Frontendtechnologien in .NET Core Einzug erhalten. Doch Windows Forms und WPF sind nicht plattformübergreifend einsetzbar. Progressive Web Apps (PWA) hingegen laufen auf allen nennenswerten Mobil- und Desktopplattformen sowie in jedem Browser und bieten sich somit als zukunftssichere Frontendplattform an. Frameworks wie Angular bringen Architekturkonzepte ins Web, die Sie von WPF/XAML schon kennen. Insgesamt eignen sich PWA hervorragend als Frontend für Ihre in .NET Core geschriebene Webschnittstelle. Christian Liebel stellt Ihnen die PWA-Basics vor und zeigt, wie Sie mit einem in .NET Core geschriebenen Backend kommunizieren können.",
      "media": [
        {
          "type": "Related Link",
          "url": "https://www.dotnet-developer-conference.de/programm/#/talk/progressive-web-apps-fur-net-entwickler-frontend-der-zukunft",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-fur-net-entwickler-frontend-der-zukunft",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 61,
      "type": "Talk",
      "title": "Blockchain als Architektur-Komponente – Fluch oder Segen? ",
      "date": "2019-11-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Start der Bitcoin Blockchain im Jahr 2009 wurde der Welt eine verteilte Datenbank zugänglich, bei der nur im Konsens der Teilnehmer über den aktuellen Zustand bestimmt werden kann. Während der Use-Case einer unabhängigen Währung leicht zu greifen ist, fällt es uns bisweilen schwer, die Charakteristiken von Blockchains sinnvoll auf andere Anwendungen zu übertragen. In diesem Talk werden Sie lernen, welche Features die Blockchain einzigartig machen und unter welchen Umständen Sie davon profitieren können - aber auch wann Sie davon absehen sollten. Dieses Wissen wird Patrick Stürmlinger mit Ihnen anhand eines real existierenden Projekts zur Sicherung von Dokumentenarchiven anwenden und vertiefen.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        9
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 23
    },
    {
      "id": 72,
      "type": "Talk",
      "title": "WebComponents: Native Komponenten fürs Web – mal ohne Framework?",
      "date": "2019-11-18 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Begriffe UI-Komponenten oder Controls kennen wir Entwickler seit \"Ewigkeiten\". Durch Kapselung erhalten wir modulare und wiederverwendbare Baukastenelemente, aus denen unsere UI-Anwendungen zusammengesetzt werden. Bisher mussten wir uns im Web eines SPA Frameworks bedienen. Ob Angular, React, Vue.js oder Polymer. Doch keines dieser Frameworks wollte oder konnte so recht mit dem anderen zusammenarbeiten. Dies könnte sich in Zukunft ändern mit WebComponents. Diese beschreiben anhand von Standards wie CustomElements ein Komponentenmodell für das Web und bietet damit erstmal die Möglichkeit, native Komponenten im Browser gänzlich ohne ein Framework oder aber über Framework-Grenzen hinweg einzusetzen. In dieser Session klärt Manuel Rauber wie WebComponents funktionieren, wo die Vorteile und Nachteile liegen – und, vermutlich am spannendsten: er geht der Frage in gewohnt praktischer Manier nach, ob WebComponents mit aktuellen Single-Page Application (SPA) Frameworks wie Angular oder React genutzt und erstellt werden können. Abgerundet wird das Ganze mit einem Ausblick, wie wir künftig Web-Anwendungen mit Web Components entwickeln könnten. Auf zum nächsten Schritt!",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": "https://github.com/thinktecture-labs/web-components-chat"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-mal-ohne-framework?slide=2",
          "label": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-mal-ohne-framework?slide=2"
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net",
          "label": "https://tt-web-components-chat-ng.azurewebsites.net"
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 23
    },
    {
      "id": 62,
      "type": "Talk",
      "title": "Too many challenges, so little time – How can blockchain integration succeed without an army of engineers?",
      "date": "2019-11-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "For a long time, neither politics nor business took the issue of Blockchain seriously. Today, every larger company develops at least proof of concepts, while Blockchain initiatives are proclaimed. However, feasibility quickly reaches its limits when it comes to transforming a PoC into a product. The rapid development of the space, even by IT standards, and a simultaneous lack of Blockchain experts slows down many projects. In this talk, Patrick Stürmlinger points out the difficulties of integration and introduces you to the concept of a Blockchain gateway (including an exemplary implementation), which solves the biggest integration problems such as the different functionality of the different Blockchains, the predictability of costs and the handling of mini-forks. ",
      "media": [],
      "previewSrc": "",
      "speaker": [
        9
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 4
    },
    {
      "id": 67,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-11-09 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, you’ll get to know common performance pitfalls in Angular applications and learn how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Related Link",
          "url": "http://www.devfestka.de/programm",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-9422e7d0-1204-4577-bd57-e6d318cd6c57",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 30
    },
    {
      "id": 65,
      "type": "Talk",
      "title": " PWA Update 2019: Modern Web APIs for even better Progressive Web Apps",
      "date": "2019-11-08 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "PWA is a great application model: These cross-platform, web-based apps work offline, can show push notifications and run in an own window (desktop) or standalone (mobile). Google’s Project Fugu will bring even more native functionality to the web, such as notification badges, wake locks and native file system access. Thinktecture’s Christian Liebel, GDE for Web Technologies, shows you how those APIs will pave the way for an even brighter future for Progressive Web Apps.",
      "media": [
        {
          "type": "Related Link",
          "url": "http://www.devfestka.de/programm",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-2019-modern-web-apis-for-even-better-progressive-web-apps",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 30
    },
    {
      "id": 66,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-getriebene Microservices mit Azure Functions & Co. – auch für Java-Entwickler",
      "date": "2019-11-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Warum muss es \"Serverless oder Microservices\" sein? Es sollte vielmehr \"Microservices mit Serverless\" heißen! Basierend auf einigen der allgemein anerkannten Prinzipien von Microservices können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen - nennen wir sie mal Nanoservices. Christian Weyer zeigt Ihnen einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Diensten & Tools. Erleben Sie Serverless Azure mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier in Aktion - jenseits der typischen Functions-as-a-Service-Beispiele.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-getriebene-microservices-mit-azure-functions-and-co-auch-fur-java-entwickler-1231a20a-87da-4e62-af77-74ee9f8279da",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 32
    },
    {
      "id": 60,
      "type": "Talk",
      "title": "Advanced Progressive Web Apps: Push notifications under control",
      "date": "2019-10-21 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, Progressive Web Apps (PWA) are one of the hottest topics on the web today. A PWA should feel like a real app, including the ability to show push notifications. In this talk, Thinktecture’s Christian Liebel (@christianliebel) will show you how to implement push messaging in your PWA or website using the Push API, including a look at helpful libraries and third-party services. As a part of Google’s Project Fugu, push notifications will get even better thanks to the advent of the Badging API and Notification Triggers.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/advanced-progressive-web-apps-push-notifications-under-control-81c57f71-2200-4494-b14c-8a03c45697e6",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://javascript-conference.com/web-development-architecture/advanced-progressive-web-apps-push-notifications-under-control/",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-munich-2019-push",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=fKDdulqFGSU",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 6
    },
    {
      "id": 59,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-10-19 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, we’ll have a look at common performance pitfalls in Angular applications and how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone, lazy loading, server-side rendering and Service Worker support. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Related Link",
          "url": "https://codecamp.ro/timisoara#agenda",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-f862942b-25a1-4a41-a82c-7df93c77c505",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 28
    },
    {
      "id": 58,
      "type": "Keynote",
      "title": "The Web in 2020: wohin sich das Web bewegt",
      "date": "2019-10-15 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Einmal im Jahr trifft sich das World Wide Web Consortium (W3C) zur Meetingwoche. Christian Liebel von Thinktecture war beim diesjährigen Treffen der Arbeitsgruppen in Japan dabei und hat die neuesten Informationen im Gepäck: Welche Spezifikationen gerade im Gespräch sind – welche neuen Schnittstellen das Web bekommen soll – und was das für Webanwendungen im Jahr 2020 heißen könnte.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/the-web-in-2020-wohin-sich-das-web-bewegt",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://www.web-developer-conference.de/programm/#/talk/keynote-tba",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 27
    },
    {
      "id": 57,
      "type": "Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2019-10-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-2dfd9043-3590-4810-9621-64e02eadb77c",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://liebel.io/ngp19h",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 71,
      "type": "Workshop",
      "title": "Immer & überall: Offlinefähige Progressive Web Apps – am Beispiel Angular",
      "date": "2019-10-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "“Keine Internetverbindung” – ein Satz, den wir alle aus genutzten Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form einer Web API. Bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Gerade in der heutigen Zeit, in der Menschen immer mobiler werden, in Autos, Zügen und Flugzeugen unterwegs sind und arbeiten, benötigt man oftmals offline Zugriff auf die Anwendungsdaten. Wie man diese echt offline-fähigen Single-Page Applications/Progressive Web Apps realisiert, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Ganztagesworkshop. Allgemein werden Themen wie Synchronisationsstrategien von Anwendungsdaten und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur sowohl für neue als auch bestehende Anwendungen diskutiert. Am Beispiel einer Angular-basierten App mit einem exemplarischen Backend in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns implementiert.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/immer-and-uberall-offlinefahige-progressive-web-apps-am-beispiel-angular",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 70,
      "type": "Workshop",
      "title": "WebComponents: Native Komponenten fürs Web - ohne und mit Frameworks",
      "date": "2019-10-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Der aktuelle Single-Page Application und der frühere Windows-Entwickler kennt sie seit „Ewigkeiten”: UI-Komponenten, oder Controls. Durch Kapselung erhalten wir modulare und wiederverwendbare Baukastenelemente, aus denen unsere UI-Anwendungen zusammengesetzt werden. Bisher mussten wir uns im Web eines SPA Frameworks bedienen – ob Angular, ReactJS, Vue.js oder Polymer. Doch keines dieser Frameworks wollte oder konnte so recht mit dem anderen zusammenarbeiten. Dies könnte sich in Zukunft ändern mit WebComponents. Diese beschreiben anhand von Standards wie CustomElements ein Komponentenmodell für das Web und bietet damit erstmal die Möglichkeit, native Komponenten im Browser gänzlich ohne ein Framework oder aber über Framework-Grenzen hinweg einzusetzen. \nIn dieser Session klären Manuel Rauber und Patrick Jahr wie WebComponents funktionieren, wo die Vorteile und Nachteile liegen – und, vermutlich am spannendsten: sie gehen der Frage in gewohnt praktischer Manier nach, ob WebComponents mit aktuellen Single-Page Application (SPA) Frameworks wie Angular genutzt und erstellt werden können und welche Rolle Ivy dabei spielt. Abgerundet wird das Ganze mit einem Ausblick, wie wir künftig Web-Anwendungen mit Web Components entwickeln könnten. Auf zum nächsten Schritt!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-ohne-und-mit-frameworks",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-2019-fall-web-components",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": null
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        11,
        1
      ],
      "tags": [
        "Angular",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 56,
      "type": "Workshop",
      "title": "Robuste Design Systems mit Storybook und Angular: vom Konzept zur lebendigen Anwendung",
      "date": "2019-10-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit den stetig wachsenden Möglichkeiten, die Cross-Platform-Anwendungen bieten, wachsen auch die Anforderungen an deren Design. Skalierbarkeit, Flexibilität und Wandelbarkeit gehören zu den Grundprinzipien eines modernen User-Interfaces. Andreas Wissel und Christian Liebel erarbeiten mit Ihnen in diesem Workshop anhand von Praxisbeispielen einen robusten Workflow. Mit Storybook und Angular lassen sich so isolierte, test- und wartbare Komponenten im Handumdrehen umsetzen. Ihre Designer und Entwickler werden es lieben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/robuste-design-systems-mit-storybook-und-angular-vom-konzept-zur-lebendigen-anwendung?slide=34",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://bit.ly/ng-ds",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 55,
      "type": "Workshop",
      "title": "Hands-on Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2019-09-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-moderne-cross-plattform-losungen",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/html5-javascript/cross-plattform-workshop/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 54,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum",
      "date": "2019-09-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2019-electron-cordova-pwa",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/web-development/electron-cordova-pwa-was-wann-wie-und-warum/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 49,
      "type": "Talk",
      "title": "Advanced ASP.NET Core Web APIs: testen und dokumentieren – aber richtig!",
      "date": "2019-09-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Jeder baut Web-APIs, oder? Leider ist es nicht damit getan, ein neues Projekt zu erzeugen, ein paar Controller zu implementieren und dann sein Web-API zu deployen. Zum einen sollte es vernünftig dokumentiert werden, damit die Entwickler, die mit unserem API arbeiten müssen, auch wissen, was es kann und wie es funktioniert. Zum anderen sollten wir selber auch sicherstellen, dass unser API das tut, was es soll. In dieser Session zeigt Ihnen Sebastian Gingter, wie man diese beiden Fliegen mit einer Klappe schlagen kann. Mit Hilfe von Open API/Swagger erzeugen wir erst eine umfassende, ständig aktuelle und lebendige Dokumentation unseres APIs. Im zweiten Schritt generieren wir aus dieser Dokumentation auch gleich Tests für das API-Test-Tool Postman, die wir dann mit etwas JavaScript Testcode anreichern und diese sogar als automatisierte Integrationstests laufen lassen können. Web-APIs jenseits von Hello World, mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-fall-2019-openapi",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=8bU6O_fMr5U",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-fall-2019-openapi",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 73,
      "type": "Talk",
      "title": "Blockchain für Architekten und Entwickler – was steckt wirklich dahinter?",
      "date": "2019-09-23 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "In wenigen Jahren werden wir Blockchains so selbstverständlich nutzen wie heute Datenbanken – und das nicht wegen seltsamer Kryptowährungen, die bereits heute schon mehr an Tulpenkrise als an seriöses Software-Engineering denken lassen. In dieser Session präsentiert Ingo Rammer die konkreten technischen Motivationen, Hintergründe und Zusammenhänge, die den Hype überstehen werden. Sie lernen die fundamentalen Elemente, Arten und Betriebsmodi von öffentlichen und privaten Blockchains kennen und werden wissen, warum Smart Contracts weder „smart“ noch „Verträge“, sondern einfach Regeln zur Prüfung von replizierten Transaktionen sind. Nach diesem Vortrag haben Sie eine solide Basis, um zu beurteilen, ob – und wenn ja, in welchen Bereichen – Ihre Anwendungsfälle von der Nutzung von Blockchain-Technologien profitieren könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/blockchain-fur-architekten-und-entwickler-was-steckt-wirklich-dahinter-8ed00546-c53f-431a-ac74-dc26fe2956d6",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=brw9SHxPcYM",
          "label": null
        },
        {
          "type": "Slides-Originalformat",
          "url": "https://thinktecture2com.sharepoint.com/:p:/s/prj-conferences/ERwa_ZzYxC5KgC6tvvbWtFIB3vgmaUigt9mlfaATtbMllQ?e=c1LPgw",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 53,
      "type": "Talk",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2019-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen am Beispiel einer in Angular geschriebenen Anwendung die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.\n\nDieser Talk richtet sich an Entwickler, die grob wissen, um was es bei Progressive Web Apps geht. In diesem Track gibt es auch den passenden Grundlagenvortrag („Progressive Enhancement im Web: PWA-Grundlagen“), der Ihnen dieses Verständnis vermittelt. Bitte nehmen Sie ein Smartphone mit, um ggf. die Demoanwendung auf dem eigenen Gerät ausprobieren zu können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-82e2dd43-1bc2-49cc-bdbc-30c1e618ba22",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/web-development/pwa-deep-dive-offline-anwendungen-im-griff/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 125,
      "type": "Workshop",
      "title": "Moderne Businessanwendungen mit Angular, .NET Core und Azure – Weitblick für Backend- und Frontend-Entwickler",
      "date": "2019-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Alle reden darüber: Mobile-Apps, Webtechnologien und Cloud. Die Welt besteht nicht mehr nur aus Windows allein und Ihr Job als Entwickler ändert sich. In diesem Workshop zeigen Thorsten Hans und Boris Wilhelms interessierten .NET-Entwicklern, welche architekturellen Ideen und Konzepte hinter modernen Businessanwendungen auf Basis von .NET Core, Azure Functions, Angular und TypeScript stecken.\n\nLernen Sie praktische Lösungen für eine Reihe diverser Problem- und Fragestellungen kennen. Wie kann man geräte- und plattformübergreifend Businessanwendungen mit Angular bauen? Wie kann man dies für Windows, iOS, Android und fürs Web gleichermaßen realisieren? Wie können diese Anwendungen Daten und Anwendungslogik mit Hilfe Service-basierter Architekturen nutzen? Dieser Workshop liefert Antworten auf all diese interessanten Fragen. Moderne Businessanwendungen mit Angular, Cordova, Electron, .NET Core und Azure – in Action!",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4,
        14
      ],
      "tags": [
        "Angular",
        ".NET Core",
        "Azure Functions",
        "Azure",
        "Electron",
        "Serverless",
        "SPA",
        "Cordova",
        "Architecture"
      ],
      "primaryTag": "Architecture",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 52,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-08-29 18:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, you’ll get to know common performance pitfalls in Angular applications and learn how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ngde2019-perf",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-e85cc65c-9ba7-4300-b10f-526ad3ba2ecd",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=moUCZoJfhwY",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 24
    },
    {
      "id": 46,
      "type": "Workshop",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-07-03 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, we’ll have a look at common performance pitfalls in Angular applications and how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone, lazy loading, server-side rendering and Service Worker support. Let’s make your Angular app blazing fast!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://youtu.be/SY7-8JJAtGM",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 30,
      "type": "Talk",
      "title": "Mehr als nur HTTP-APIs: Pragmatische Serverless Backends mit JavaScript / TypeScript und Azure Functions",
      "date": "2019-06-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Serverless ist in aller Munde und so gut wie jede JavaScript-basierte Anwendung braucht irgendeine Art von Backend. Warum also nicht die beiden Ideen vereinen? In dieser Session zeigt Christian anhand von Azure Functions, wie man mit TypeScript effizient eigene HTTP APIs baut, ohne großes Infrastruktur-Tamtam. \nAber damit nicht genug: Basierend auf allgemein anerkannten Prinzipien können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen. Sieh dafür einen pragmatischen Ansatz mit Functions, Service Bus und weiteren Azure-Cloud-Diensten sowie Tools. Eben mehr als nur HTTP-APIs.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/typescript-und-azure-functions",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Serverless",
        "Azure Functions",
        "Typescript",
        "JavaScript",
        "Azure"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 15
    },
    {
      "id": 44,
      "type": "Talk",
      "title": "PWA-Update: Neue Webschnittstellen für noch bessere Progressive Web Apps",
      "date": "2019-06-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps funktionieren offline, können Pushbenachrichtigungen darstellen und laufen auf jeder Plattform von Android über Firefox bis Windows. Außerdem können Entwickler auf alle Funktionen zugreifen, für die es eine Webschnittstelle gibt. In der Vergangenheit waren dies etwa Gamepads oder der Standort des Anwenders. Mit neuen Webschnittstellen will das World Wide Web Consortium (W3C) die Lücke zwischen nativen Apps und PWA weiter schließen: Mithilfe der Writable Files API sollen PWA auf einen Teilbereich des nativen Dateisystems zugreifen können, die Badging API erlaubt das Setzen von Notification-Badges und die Shape Detection API erlaubt das Erkennen von Barcodes, Gesichtern oder Text in Bildern. Christian Liebel zeigt Ihnen brandheiße Web-APIs, die Progressive Web Apps noch mächtiger machen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-neue-webschnittstellen-fur-noch-bessere-progressive-web-apps-6e9b8f36-27c0-4835-afd0-a4f135364c48",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 21
    },
    {
      "id": 45,
      "type": "Talk",
      "title": "Web-Payments neu gedacht: Abrechnen mit der Payment Request API",
      "date": "2019-06-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Anbieter von Onlineshops, Abodiensten oder Progressive Web Apps kennen das Problem: Sobald Zahlungen vom Nutzer angefordert werden sollen, wird die Sache komplex. Anwender müssen die immerselben Daten in vor allem mobil schwer zu bedienende Formulare eintragen und eventuell wird der Bedienfluss durch eine Weiterleitung zu einem externen Zahlungsdienstleister unterbrochen. Wäre es nicht schön, wenn der Webbrowser die Anwenderdaten vorausfüllen und der Nutzer auf komfortable Methoden wie Apple Pay oder Google Pay zurückgreifen könnte? Die Payment Request API bringt genau diese Features in Web. Christian Liebel von Thinktecture zeigt Ihnen, wofür sich diese plattformübergreifend einsetzbare Webschnittstelle eignet und wo ihre Grenzen liegen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-payments-neu-gedacht-abrechnen-mit-der-payment-request-api",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 21
    },
    {
      "id": 29,
      "type": "Workshop",
      "title": "Azure in Action: Pragmatische Cloud-Lösungen mit Containern & Serverless",
      "date": "2019-06-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "IDE öffnen, „File – New Project – Cloud“, OK klicken und fertig. Oder? Nun, nicht ganz. Denn egal ob AWS, GCP oder eben Azure: am Ende des Tages werden Sie sich fragen, warum, wann und wie gehe ich in die Cloud? Genau diese Fragestellungen wollen Thorsten Hans und Christian Weyer für Java-, node.js- und .NET-Entwickler in diesem Workshop beantworten. Anhand diverser Use Cases werden mögliche Wege mit, über und in Azure diskutiert. Was bedeuten Architekturansätze wie Cloud-Native Microservices und Serverless Microservices? Wie gehe ich bei Brownfield-Projekten vor und wie kann ich Greenfield-Lösungen effizient in Azure realisieren? Wo liegen Unterschiede und Benefits von datengetriebenen und von ereignisgetriebenen Ansätzen? Wie kann ich mit dem Sammelsurium an Patterns, Technologien und Tools in Azure kosteneffektiv hantieren und dennoch flexibel sein? All dies werden wir anhand praktischer Beispiele und pragmatischer Lösungen in interaktiver Art und Weise adressieren. Sehen Sie PaaS, Web Apps, Containers, Orchestrators, Serverless, Functions & Co. mit der Azure-Cloud anhand von .NET-Demos in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/azure-in-action-pragmatische-cloud-losungen-mit-containern-and-serverless-1e2ffa1a-2a42-4355-8c53-3676a71176ff",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/azure-functions-extensibility",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/aks-demo-app",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices",
        "Serverless",
        "Containers",
        "Kubernetes",
        "AKS",
        "Azure Functions"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 14
    },
    {
      "id": 48,
      "type": "Workshop",
      "title": "Einmal API mit allem, bitte: ASP.NET Core MVC und SignalR in Action!",
      "date": "2019-06-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne APIs können so viel mehr als nur gängige HTTPS-Endpunkte bereitzustellen: Zum einen die Möglichkeit zur (optionalen) Echtzeitkommunikation auf Basis von WebSockets. Mit Hilfe von Microsofts Open-Source-Plattform ASP.NET Core MVC und SignalR lassen sich im Handumdrehen Web-APIs und Push Services entwickeln. Doch damit nicht genug: Weitere Themen wie Security, Rate Limiting, eine sinnvolle Dokumentation und ein vernünftiges, zentralisiertes Logging sind mit von der Partie. Und jeder dieser einzelnen Bereiche bietet uns eine neue Herausforderung.\n\nSebastian Gingter und Manuel Rauber zeigen Ihnen in diesem Workshop, wie man mit .NET Core moderne APIs auf und für verschiedene Plattformen entwickeln kann. Zusätzlich wird durch den Einsatz von Entity Framework Core die Anbindung an unterschiedliche Datenbanken ermöglicht. Durch den Einsatz weiterer Open-Source-Bibliotheken für Logging oder zur automatischen Generierung einer Swagger/OpenAPI-Dokumentation ergänzen wir das API um weitere Funktionalitäten. Eine Clientanwendung, das Deployment auf unterschiedliche Plattformen und das Deployment in die Cloud runden den Workshop ab – vollständig End-to-end und einmal mit allem eben!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/einmal-api-mit-allem-bitte-asp-dot-net-core-mvc-und-signalr-in-action-164d1e3e-189b-4b6a-95a3-33003e3f3f05",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-ms-summit-spring-2019-services-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        1
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 14
    },
    {
      "id": 43,
      "type": "Workshop",
      "title": "Progressive Web Apps for PHP Developers in action!",
      "date": "2019-06-05 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps work anywhere from iOS to Windows, run offline and can make use of native functionality such as camera access or geolocation. Thinktecture’s Christian Liebel shows you the technological foundations of this very promising application model—in action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-for-php-developers-in-action",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 20
    },
    {
      "id": 42,
      "type": "Talk",
      "title": "Progressive Web Apps for .NET Developers: An Overview",
      "date": "2019-05-28 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps work anywhere from iOS to Windows, run offline and can make use of native functionality such as camera access or geolocation. Thinktecture’s Christian Liebel shows you the technological foundations of this very promising application model, demonstrates how your PWAs can integrate with the Windows Runtime and what the new Chromium-based Edge means for Progressive Web Apps.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-for-net-developers-an-overview",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 19
    },
    {
      "id": 82,
      "type": "Talk",
      "title": "Advanced Azure Functions – beyond HTTP GET /helloworld",
      "date": "2019-05-27 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Azure Functions enable to swiftly create serverless applications & services. But in practice, we soon face situations where the simple Hello-World-ish approaches do no longer suffice. In this talk, Christian Weyer shows you how to use Microsoft's Functions-as-a-Service (FaaS) platform to realize scenarios beyond the usual static triggers & bindings, like HTTP. He illustrates how you can secure your functions, create your own custom extensions, use dynamic bindings to implement tricky use cases. Hosting Azure Functions is also discussed because it is not always possible to use the public Cloud as-is. Come and see Azure Functions with C # in action - beyond Hello World.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/helloworld",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Azure Functions",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 19
    },
    {
      "id": 27,
      "type": "Talk",
      "title": "Angewandte Serverless Microservices mit Azure Functions & Co.",
      "date": "2019-05-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Warum muss es \"Serverless oder Microservices\" sein? Es sollte vielmehr \"Microservices mit Serverless\" heißen! Basierend auf einigen der allgemein anerkannten Prinzipien von Microservices können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen - nennen wir sie mal Nanoservices. Christian Weyer zeigt Ihnen einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Diensten & Tools. Erleben Sie Serverless Azure mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier in Aktion - jenseits der typischen Functions-as-a-Service-Beispiele.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/angewandte-serverless-microservices-mit-azure-functions-and-co",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 12
    },
    {
      "id": 41,
      "type": "Talk",
      "title": "Advanced Progressive Web Apps: Push notifications under control",
      "date": "2019-05-13 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, Progressive Web Apps (PWA) are one of the hottest topics on the web today. A PWA should feel like a real app, including the ability to show push notifications. In this talk, Thinktecture’s Christian Liebel (@christianliebel) will show you how to implement push messaging in your PWA or website using the Push API, including a look at helpful libraries and third-party services. As a part of Google’s Project Fugu, push notifications will get even better thanks to the advent of the Badging API and Notification Triggers.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/advanced-progressive-web-apps-push-notifications-under-control-61ddbb4e-026d-4beb-a251-eaeea2ab1730",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 18
    },
    {
      "id": 40,
      "type": "Talk",
      "title": "PWA-Update: Neue Webschnittstellen für noch bessere Progressive Web Apps",
      "date": "2019-05-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps funktionieren offline, können Pushbenachrichtigungen darstellen und laufen auf jeder Plattform von Android über Firefox bis Windows. Außerdem können Entwickler auf alle Funktionen zugreifen, für die es eine Webschnittstelle gibt. In der Vergangenheit waren dies etwa Gamepads oder der Standort des Anwenders. \nMit neuen Webschnittstellen will das World Wide Web Consortium (W3C) die Lücke zwischen nativen Apps und PWA weiter schließen: Mithilfe der Writable Files API sollen PWA auf einen Teilbereich des nativen Dateisystems zugreifen können, die Badging API erlaubt das Setzen von Notification-Badges und die Shape Detection API erlaubt das Erkennen von Barcodes, Gesichtern oder Text in Bildern. Christian Liebel zeigt Ihnen brandheiße Web-APIs, die Progressive Web Apps noch mächtiger machen.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-neue-webschnittstellen-fur-noch-bessere-progressive-web-apps",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 17
    },
    {
      "id": 26,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-getriebene Microservices mit Azure Functions & Co. – auch für Java-Entwickler",
      "date": "2019-05-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Microsofts Azure Cloud auf der JAX? Ja, in der Tat. Denn nicht immer muss oder soll es AWS (Amazon Web Services) oder GCP (Google Cloud Platform) sein. Azure bietet mittlerweile eine holistische Plattform für so gut wie jede Cloud-Anforderung an. Auch und vor allem in den Bereichen Cloud Native und Serverless investiert Microsoft sehr viel. In dieser Session zeigt Christian Weyer von Thinktecture – ohne großes Marketing-Tamtam – neben den Grundlagen vor allem typische Anwendungsszenarien für Azure Functions, Azure Service Bus und Co. Fokus soll dabei auf Event-getriebene Microservices-Architekturen liegen. Lehnen Sie sich also zurück und sehen Sie \"die andere Cloud\" – auch mit Java – in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-getriebene-microservices-mit-azure-functions-and-co-auch-fur-java-entwickler",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core",
        "Node.js",
        "Java"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 11
    },
    {
      "id": 25,
      "type": "Talk",
      "title": "Blockchain in 2019: Wichtigste Fakten & sinnvolle Use Cases – jenseits des Hypes",
      "date": "2019-05-07 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blockchain in 2019: Wichtigste Fakten & sinnvolle Use Cases – jenseits des Hypes",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blockchain-in-2019-wichtigste-fakten-and-sinnvolle-use-cases-jenseits-des-hypes",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 10
    },
    {
      "id": 123,
      "type": "Talk",
      "title": "Advanced Azure Functions",
      "date": "2019-04-27 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Azure Functions makes it easy to quickly create simple Serverless applications & services. However in the rarest cases \"Hello World\"-like implementations are sufficient in practice. So, can we implement complex requirements with that technology? Yes we can. In this talk Boris Wilhelms shows you how you can use Microsofts FaaS-platform to implement scenarios beyond the common triggers and bindings and how you can secure your Functions. The topic of hosting is also covered since it is not always possible to use the public cloud, but you can use and benefit from the Serverless concept in a on-premises environment.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/advanced-azure-functions-at-global-azure-bootcamp-2019-frankfurt",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/gab-ffm-2019",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Azure Functions"
      ],
      "primaryTag": "Azure Functions",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 78
    },
    {
      "id": 16,
      "type": "Talk",
      "title": "Code your Azure Environments with Terraform",
      "date": "2019-04-26 22:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 5
    },
    {
      "id": 24,
      "type": "Talk",
      "title": "Pragmatic Serverless Microservices with Azure Functions & Co. - more than FaaS",
      "date": "2019-04-10 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Why does it have to be Serverless versus Microservices? Couldn’t it be rather Microservices with Serverless? Based on some of the well-accepted principles of Microservices, we can use Serverless architectures and technologies to build highly focused Microservices – which we might call Nanoservices. Christian Weyer will show you a pragmatic approach on how to build Nanoservices with Azure Functions, Azure Service Bus, Azure Storage and friends. Join him to see Serverless Azure in action, with .NET Core, JavaScript and Java – beyond the typical Functions-as-a-Service examples.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatic-serverless-microservices-with-azure-functions-and-co-more-than-faas-60687a12-ba7f-487a-a8e2-922a14b162ed",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 9
    },
    {
      "id": 23,
      "type": "Talk",
      "title": "Advanced Serverless Azure: Extending Azure Functions to meet your Runtime Infrastructure Needs",
      "date": "2019-04-09 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Bindings and runtime extensions are the engines of Azure Functions that fuel Azure-based Serverless architectures. In this short talk, Christian Weyer will show you in a live coding session how you can build and use your own custom bindings and extensions. Based on a real project’s requirements, he will walk you through the internals of Azure Functions and create a fully functional custom binding that implements patterns for reusing custom infrastructure needs.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/advanced-serverless-azure-extending-azure-functions-to-meet-your-runtime-infrastructure-needs",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/azure-functions-extensibility",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 9
    },
    {
      "id": 22,
      "type": "Talk",
      "title": "Pragmatische Serverless Microservices mit Azure Functions & Co. (Kaa Sörwa unn Söavis-Gschmarri – so Cloud-Gwerch hald)",
      "date": "2019-04-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das ist eine Hip, das andere ist Hype. Aber muss es Serverless *oder* Microservices sein? Vielmehr sollte es Microservices *mit* Serverless heißen. Basierend auf allgemein anerkannten Prinzipien können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices ohne viel Infrastruktur-Tamtam zu erstellen - nennen wir sie der Einfachheit halber Nanoservices. Der Unterfranke und DDF-Pionier Christian Weyer zeigt euch einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Cloud-Diensten & Tools. Erleben Sie Serverless Azure in Aktion mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier - auf dem Server, äh.... #KaaSörwa",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-serverless-microservices-mit-azure-functions-and-co-kaa-sorwa-unn-soavis-gschmarri-so-cloud-gwerch-hald",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Angular",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 39,
      "type": "Talk",
      "title": "PWA Deep-Dive: Offline-Anwendungen im Griff",
      "date": "2019-04-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps bieten sich als plattformübergreifendes Anwendungsmodell als idealer Partner für in .NET geschriebene Backends an. Zentrale Eigenschaft einer jeden Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: Im Tunnel, im Park oder im Dschungel. Zur Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen die Mechanik hinter der dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit ihren nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offline-anwendungen-im-griff",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 38,
      "type": "Workshop",
      "title": "Frontend der Zukunft: Progressive Web Apps für .NET-Entwickler",
      "date": "2019-04-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET Core eignet sich hervorragend zur Implementierung plattformübergreifender Konsolenanwendungen und Backends. Zuletzt haben nun auch wieder Frontendtechnologien in .NET Core Einzug erhalten. Doch Windows Forms und WPF sind nicht plattformübergreifend einsetzbar. Progressive Web Apps (PWA) hingegen laufen auf allen nennenswerten Mobil- und Desktopplattformen sowie in jedem Browser und bieten sich somit als zukunftssichere Frontendplattform an. Frameworks wie Angular bringen Architekturkonzepte ins Web, die Sie von WPF/XAML schon kennen. Insgesamt eignen sich PWA hervorragend als Frontend für Ihre in .NET Core geschriebene Webschnittstelle. Christian Liebel stellt Ihnen die PWA-Basics vor und zeigt, wie Sie mit einem in .NET Core geschriebenen Backend kommunizieren können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/frontend-der-zukunft-progressive-web-apps-fur-net-entwickler-52418789-d092-4bf2-9e4d-c001b320f31b",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 68,
      "type": "Workshop",
      "title": "Immer und überall: offlinefähige Progressive Web Apps – am Beispiel Angular",
      "date": "2019-03-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\"Keine Internetverbindung\" – ein Satz, den wir alle aus genutzten Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form eines Web API. Bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Gerade in der heutigen Zeit, in der Menschen immer mobiler werden, in Autos, Zügen und Flugzeugen unterwegs sind und arbeiten, benötigt man oftmals offline Zugriff auf die Anwendungsdaten. Wie man diese echt offline-fähigen Single-Page Applications/Progressive Web Apps realisiert, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Ganztagesworkshop. Allgemein werden Themen wie Synchronisationsstrategien von Anwendungsdaten und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur sowohl für neue als auch bestehende Anwendungen diskutiert. Am Beispiel einer Angular-basierten App mit einem exemplarischen Backend in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns implementiert.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/immer-und-uberall-offlinefahige-progressive-web-apps-am-beispiel-angular",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 16
    },
    {
      "id": 37,
      "type": "Workshop",
      "title": "Progressive Web-Apps mit Angular: hands-on",
      "date": "2019-03-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind das App-Modell der Zukunft. Das sagt zumindest Google und hat damit nichts Geringeres vor, als App-Stores von Mobilgeräten zu verbannen. Stattdessen lautet der Gedanke: Offlinefähigkeit, Push Notifications und schnelles Startverhalten sollen ins Web kommen. Ein Fingertipp reicht und eine mobile Website wird zur installierten App auf dem Gerät einschließlich Homescreen-Icon: Android, iOS, Windows, macOS und Linux auf einen Streich.\nChristian Liebel von Thinktecture zeigt Ihnen, wie Sie mit Angular, Angular Material und der Angular CLI PWAs entwickeln und somit sanft und sacht die Schlucht zwischen reinen Web-Sites, Web-Apps und hybriden/nativen Apps schließen können. Und Sie können mitmachen: Dazu benötigen Sie mindestens einen Laptop und optional ein aktuelles Smartphone mit iOS oder Android.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-hands-on",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 16
    },
    {
      "id": 36,
      "type": "Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2019-03-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen an nur einem Tag anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-3ee1e5ae-aa20-466b-b362-a101daf26e77",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 15,
      "type": "Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2019-03-20 23:00:00.0000000",
      "language": "DE",
      "billed": true,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen an nur einem Tag anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Speakerdeck",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-3ee1e5ae-aa20-466b-b362-a101daf26e77",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 35,
      "type": "Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2019-03-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 34,
      "type": "Talk",
      "title": "Progressive Web Apps update 2019: Web Goes Native (RheinNeckarJS)",
      "date": "2019-03-12 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, PWA is one of the hottest topics in Web space today. Progressive Web Apps are cross-platform, support browsers, desktop and mobile platforms—a perfect match for your business application. A PWA should feel like a real app we are used to since years: users want an icon on the home screen as well was native-like performance and feature richness. Christian Liebel, author of “Progressive Web Apps: Das Praxisbuch” and consultant at Thinktecture, shows you how to develop your first PWA, implement offline availability using service workers and send push notifications even when your app is closed. In addition, Christian brings you up to date on modern web APIs and service worker enhancements that will further enhance PWA functionality. Come and bring your PWA questions with you!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-update-2019-web-goes-native-e93aacbc-e56e-46e4-9306-4632dd21b39d",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 33,
      "type": "Workshop",
      "title": "Hands-on Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2019-03-01 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-echte-cross-plattform-losungen-5b162ec3-4953-40f7-aff4-1e49fd3ffc0b",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2019-pwa-workshop",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 5,
      "type": "Workshop",
      "title": "Workshop: Von null auf hundert – Blockchain-Anwendungen mit Hyperledger Fabric",
      "date": "2019-02-28 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "In diesem Ganztagesworkshop erfahren Sie, wie Sie – ganz ohne CPU-intensives Mining und ohne Kryptowährungen – auf der Basis der Open-Source-Plattform \"Hyperledger Fabric\" eine private (\"permissioned\") Blockchain zwischen Geschäftspartnern aufbauen und wie Sie mit Node.js dafür Smart Contracts und HTTP-Endpunkte entwickeln können. Nach einer kurzen Zusammenfassung der technischen Blockchain-Grundlagen sehen Sie, wie eine private Blockchain auf Basis von Hyperledger Fabric konfiguriert und betrieben wird. Danach lernen Sie die Besonderheiten dieser Umgebung zur Entwicklung von Smart Contracts kennen und wie Sie Tools und Vorgehensweisen zum Deployen, Debuggen und Verwalten Ihrer Anwendungen nutzen können. Neben den typischen Sicherheitsaspekten von Blockchain-Anwendungen im Geschäftsumfeld lernen Sie auch verschiedene Versionierungs- und Governance-Strategien zum langfristigen Betrieb Ihrer Smart Contracts kennen. Zu guter Letzt sehen Sie, wie Sie mit zwischengeschalteten Node.js APIs zwischen .NET-Anwendungen und den entstandenen Smart Contracts bidirektional kommunizieren können, um den Datenaustausch zwischen Ihren existierenden Systemen und der Blockchain-Umgebung zu erlauben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/workshop-von-null-auf-hundert-blockchain-anwendungen-mit-hyperledger-fabric",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Hyperledger",
        "Node.js"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 2,
      "type": "Talk",
      "title": "Hyperledger Fabric: Die Open-Source Basis für Ihre Blockchain",
      "date": "2019-02-27 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "In dieser Session stellt Ihnen Ingo Rammer die von der Linux Foundation betreute open-source Blockchain-Basistechnologie Hyperledger Fabric vor. Sie lernen die Grundlagen von Fabric für den Betrieb von privaten bzw. berechtigungsgestützten Blockchains kennen und erfahren die dafür geeigneten Einsatzgebiete, Architekturentscheidungen sowie Sicherheitsaspekte. Diese Session ist eine optimale Grundlage, um Sie für die Folgesession \"Coding Hyperledger Fabric – Smart Contracts und Clients mit Node.js\" vorzubereiten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/hyperledger-fabric-die-open-source-basis-fur-ihre-blockchain-f198d4d3-90fc-497d-bdde-fdd35fcf4731",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Hyperledger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 4,
      "type": "Talk",
      "title": "Coding Hyperledger Fabric – Smart Contracts und Clients mit Node.js",
      "date": "2019-02-27 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "Aufbauend auf den Inhalten der Session \"Hyperledger Fabric: die Open-Source Basis für Ihre Blockchain\" zeigt Ihnen Ingo Rammer in dieser Session, wie Sie die SDKs für Fabric in Ihrem Code nutzen können. Sie lernen, wie Sie von ihrem Client aus Transaktionen initiieren und wie Sie Chaincode (Smart Contracts in Fabric) erstellen können, um diese zu verarbeiten. Sie sehen, wie Sie eventgesteuert auf Ereignisse der Blockchain reagieren können und wie Sie mit den unterschiedlichen Arten von Daten Ihrer Blockchain interagieren. Zu guter Letzt erfahren Sie, wie Sie mit Fabric einen typischen Code>Test>Debug>Deploy-Zyklus umsetzen können.\n\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/coding-hyperledger-fabric-smart-contracts-und-clients-mit-node-dot-js",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Node.js",
        "Hyperledger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 20,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-basierte Microservices mit Azure Functions & Co.",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm… Ja, in der Tat. Der Serverless-Ansatz verspricht eine niedrige Hürde, um den Einstieg in Microservices zu finden. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand praktischer Anwendungsfälle. Auf Basis erprobter Designpatterns können Sie mit Azure Functions, Azure Service Bus und Co. in kurzer Zeit sowohl einfache als auch komplexe Services-Anwendungen designen und implementieren – lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Kommen Sie vorbei – eventuell lernen Sie die Basis für Ihr neues Businesssoftware-Backend kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-basierte-microservices-mit-azure-functions-and-co-c4053d0c-b7d8-433f-a60c-6f4a249cb2db",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 31,
      "type": "Talk",
      "title": "Real-World Angular: Erfahrungen aus (fast) vier Jahren Projektgeschäft",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Frankfurt, im Februar 2015: In einer Hotellobby probiert die Thinktecture-Crew eine der frühen, blutigen Alphaversionen von Angular 2 aus. Seither sind vier Jahre vergangen. Zurück in Frankfurt zeigt Christian Liebel von Thinktecture, welche Lehren das Thinktecture-Team aus beinahe vier Jahren Projektgeschäft gezogen hat. Wir besprechen bspw. erweiterte TypeScript-Sprachfeatures, die Unterteilung von Angular-Projekten in isolierte Module sowie verschiedene Maßnahmen zur Verbesserung der Performance. Dieser Talk richtet sich an Angular-Entwickler, welche die Grundlagen des Frameworks verstehen und schon erste Projekte damit umgesetzt haben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/real-world-angular-erfahrungen-aus-fast-vier-jahren-projektgeschaft",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 32,
      "type": "Talk",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen am Beispiel einer in Angular geschriebenen Anwendung die Mechanik hinter  dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.\nDieser Talk richtet sich an Entwickler, die grob wissen, um was es bei Progressive Web Apps geht. In diesem Track gibt es auch den passenden Grundlagenvortrag („Progressive Enhancement im Web: PWA-Grundlagen“), der Ihnen dieses Verständnis vermittelt. Bitte nehmen Sie ein Smartphone mit, um ggf. die Demoanwendung auf dem eigenen Gerät ausprobieren zu können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 21,
      "type": "Talk",
      "title": "Pragmatische Microservices-Architekturen mit .NET Core – Patterns & Code",
      "date": "2019-02-25 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Angetrieben durch mögliche Nachteile einer monolithischen Architektur wollen Microservices und damit verbundene Designpatterns und -ideen das scheinbare Allheilmittel sein. In diesem Vortrag klärt Christian Weyer die folgenden Fragen: Was sind Microservices und was sind sie nicht? Wann setzt man sie ein? Und vor allem: Wie baut und betreibt man Microservices in der .NET-Core-Welt? Sehen Sie Architekturansätze und Patterns in Aktion und erleben Sie Technologien wie Service Discovery, Web APIs, SignalR, Message Queuing und Co. im praktischen Einsatz. Versuchen wir also gemeinsam, langweilige Architekturthemen spannend zu machen: auf pragmatische Weise. Dieser Talk richtet sich an .NET-Entwickler- und -Architekten, die Microservices verstehen und ohne jegliche Frameworks und Clouds in Aktion sehen wollen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-architekturen-mit-net-core-patterns-and-code",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pragmatic-microservices-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 126,
      "type": "Workshop",
      "title": "Moderne Businessanwendungen mit Angular, .NET Core und Azure – Weitblick für Backend- und Frontend-Entwickler",
      "date": "2019-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Alle reden darüber: Mobile-Apps, Webtechnologien und Cloud. Die Welt besteht nicht mehr nur aus Windows allein und Ihr Job als Entwickler ändert sich. In diesem Workshop zeigen Thorsten Hans und Boris Wilhelms interessierten .NET-Entwicklern, welche architekturellen Ideen und Konzepte hinter modernen Businessanwendungen auf Basis von .NET Core, Azure Functions, Angular und TypeScript stecken.\n\nLernen Sie praktische Lösungen für eine Reihe diverser Problem- und Fragestellungen kennen. Wie kann man geräte- und plattformübergreifend Businessanwendungen mit Angular bauen? Wie kann man dies für Windows, iOS, Android und fürs Web gleichermaßen realisieren? Wie können diese Anwendungen Daten und Anwendungslogik mit Hilfe Service-basierter Architekturen nutzen? Dieser Workshop liefert Antworten auf all diese interessanten Fragen. Moderne Businessanwendungen mit Angular, Cordova, Electron, .NET Core und Azure – in Action!",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4,
        14
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Azure",
        "Azure Functions",
        "Cordova",
        "Electron",
        "Serverless",
        "SPA",
        "Architecture"
      ],
      "primaryTag": "Architecture",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 28,
      "type": "Talk",
      "title": "Serverless Microservices - by example of Azure Functions (and a bit of deep dive into the platform)",
      "date": "2019-02-22 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Why does it have to be Serverless versus Microservices? Couldn’t it be rather Microservices with Serverless? Based on some of the well-accepted principles of Microservices, we can use Serverless architectures and technologies to build highly focused Microservices – which we might call Nanoservices. \nChristian Weyer will show you a pragmatic approach on how to build Nanoservices with Azure Functions, Azure Service Bus, Azure Storage and friends. Join him to see Serverless Azure in action, with .NET Core, JavaScript and Java – beyond the typical Functions-as-a-Service examples.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-microservices-by-example-of-azure-functions-and-a-bit-of-deep-dive-into-the-platform",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Microservices",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 13
    },
    {
      "id": 47,
      "type": "Talk",
      "title": "Code your Azure Deployments using Terraform",
      "date": "2019-02-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Using HashiCorp’s Terraform you can code almost every Azure Deployment. Having your entire infrastructure as source code makes it easy to spin up new environments in a couple of minutes. Terraform takes this approach a step further, having a single language and a single CLI allows you to describe deployments for almost every cloud vendor. With Terraform Execution Plans you can also inspect what will be deployed, changed or deleted in Azure without harming existing deployments. Join this talk by Thorsten Hans and learn how to write your deployments and quickly create different, independent environments such as Testing, Staging, and Production in Azure.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 19,
      "type": "Talk",
      "title": "Serverless in Action: Event-gesteuerte Microservices - am Beispiel Azure",
      "date": "2019-01-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm... Ja, in der Tat. Der Serverless-Ansatz für Microservices verspricht eine niedrige Hürde, um den Einstieg zu finden und auch um ans Ziel zu kommen. Dabei ist Serverless jedoch nicht für jeden und alles geeignet. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand eines realistischen Anwendungsbeispiels. Auf Basis erprobter Design Patterns können Sie mit Azure Functions, Azure Event Grid, Azure Cosmos DB, Azure Storage & Co. in kurzer Zeit einfache & komplexe Anwendungen designen und implementieren - lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Wohnen Sie dieser Session bei und bilden Sie sich Ihre Meinung - eventuell lernen Sie die Basis Ihrer neuen Business-Software hier kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-in-action-event-gesteuerte-microservices-am-beispiel-azure",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 7
    },
    {
      "id": 78,
      "type": "Talk",
      "title": "WebAssembly & ASP.NET Blazor: .NET auf dem Weg, den Browser zu erobern?",
      "date": "2018-12-12 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/it-tage-2018-webassembly-and-blazor-2018-12-13",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 43
    },
    {
      "id": 83,
      "type": "Workshop",
      "title": "Azure in Action: Pragmatische Cloud-Lösungen mit Containern & Serverless",
      "date": "2018-12-04 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "IDE öffnen, „File – New Project – Cloud“, OK klicken und fertig. Oder? Nun, nicht ganz. Denn egal ob AWS, GCP oder eben Azure: am Ende des Tages werden Sie sich fragen, warum, wann und wie gehe ich in die Cloud? Genau diese Fragestellungen wollen Thorsten Hans und Christian Weyer für Java-, node.js- und .NET-Entwickler in diesem Workshop beantworten. Anhand diverser Use Cases werden mögliche Wege mit, über und in Azure diskutiert. Was bedeuten Architekturansätze wie Cloud-Native Microservices und Serverless Microservices? Wie gehe ich bei Brownfield-Projekten vor und wie kann ich Greenfield-Lösungen effizient in Azure realisieren? Wo liegen Unterschiede und Benefits von datengetriebenen und von ereignisgetriebenen Ansätzen? Wie kann ich mit dem Sammelsurium an Patterns, Technologien und Tools in Azure kosteneffektiv hantieren und dennoch flexibel sein? All dies werden wir anhand praktischer Beispiele und pragmatischer Lösungen in interaktiver Art und Weise adressieren. Sehen Sie PaaS, Web Apps, Containers, Orchestrators, Serverless, Functions & Co. mit der Azure-Cloud anhand von .NET-Demos in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/azure-in-action-pragmatische-cloud-losungen-mit-containern-and-serverless",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/aks-demo-app",
          "label": "Containers"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": "Serverless"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "AKS",
        "Azure",
        "Azure Functions",
        "Containers",
        "Kubernetes",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 59
    },
    {
      "id": 84,
      "type": "Talk",
      "title": "Auf ins Blaue: Azure Cloud Services für Java-Entwickler – ein persönlicher Überblick",
      "date": "2018-11-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ein Blick über den Tellerrand kann ja nicht schaden: was hat Microsofts Azure Cloud für Java-Entwickler und -Architekten zu bieten? Freilich ist die blaue Wolke ähnlich mächtig, breit an Services und tief an Features wie die Marktbegleiter AWS oder GPC. In dieser Session möchte daher Christian Weyer – der seit 2008 mit Azure arbeitet – einen nicht ganz unvoreingenommenen Überblick über die zentralen Services geben, die für Java-, .NET- aber auch andere Entwickler zur Verfügung stehen. Angefangen bei Container-as-a-Services mit Docker- und Kubernetes als Basis, über klassische Platform-as-a-Service-Angebote für Web Applications, Datenbanken oder Messaging, bis hin zu ultracoolen Serverless-Architekturen – illustriert mit praktischen Beispielen. Und dies von jemandem, der so gut wie keine Ahnung von Java hat.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/auf-ins-blaue-azure-cloud-services-fur-java-entwickler-ein-personlicher-uberblick",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure Functions",
        "Serverless",
        "Azure",
        "Java"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 60
    },
    {
      "id": 85,
      "type": "Talk",
      "title": "eXtreme Serverless Azure: Data, Compute, Realtime - in Action!",
      "date": "2018-10-12 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Whaaat? No servers? Well, yes. Serverless is all the hype these days. Let's try to sort out some of the real strengths of Serverless and see where Serverless & PaaS build a set of highly productive weapons in your Cloud arsenal. Join Christian Weyer from Thinktecture while he discusses Azure Functions, Storage, CosmosDB and SignalR Service in a holistic scenario - all by building an end-to-end solution that should 'just work' by the end of this session: creating a scalable real-time application in almost no time - really? Aaand action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/extreme-serverless-azure-data-compute-realtime-in-action-c24f4632-02c5-4183-9871-8fb829839d41",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/extreme-serverless-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Azure Functions",
        "Java",
        "JavaScript",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 61
    },
    {
      "id": 86,
      "type": "Talk",
      "title": "WebAssembly & PWA: Single Page Applications (SPAs) ohne JavaScript?",
      "date": "2018-10-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ohoh: JavaScript auf einer JavaScript-Konferenz in Frage zu stellen! Lassen Sie uns über das Web als Plattform reden und darüber wie wir JavaScript-basierte Browser-Anwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browser-Plattformen haben die Art und Weise verändert, wie wir Anwendungen, bspw. Line-of-Business Applications, erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung - eine großartige Basis für moderne Anwendungen gemäß der Idee von Progressive Web Apps (PWA). Mit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard haben wir so allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Session wird Christian Weyer über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C ++ - oder gar Java bzw. C # / .NET-Code im Browser ohne Plug-in nutzen können - und so die optimale Performance aus ihrer \"App\" holen können. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche neuen Möglichkeiten WebAssembly unserer geliebten Plattform verleihen kann. Spüren Sie das mögliche Potenzial Ihrer nächsten (Geschäfts-)Anwendung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-pwa-single-page-applications-spas-ohne-javascript",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angulardays-2018-herbst-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 62
    },
    {
      "id": 87,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps: Rethinking modern application development",
      "date": "2018-10-03 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Choose your programming language of choice for building fast, ubiquitously cross-platform, future-proof modern applications: dang - your dream will finally come true! Really...? Let's see. Undoubtedly, everybody needs to build business applications, somehow. The web and the browser platforms have changed the way we can build LOB applications and these platforms have evolved considerably in the past 5 years. More and more native features are available to SPAs (single page applications) running in the browser - a great base for modern applications as so-called Progressive Web Apps (PWA). Now, with the rise of WebAssembly (WASM) as a standard and the improving maturity of PWAs we have powerful tools in our hand to build the next generation of web-based applications. In this session Christian Weyer will talk about the features & possibilities of Progressive Web Apps as app-like appearance, installability or offline operations, paired with the power of WebAssembly as a bytecode for all major modern browsers. See how to use PWAs to build native-like applications on the browser platforms and experience the strength of WASM to run C, C++ or C#/.NET code in the browser, without any plugin. This can be a disruptive approach for both greenfield and brownfield projects. Lean back and watch how the web is evolving into a new stage of capabilities and feel the potential of your next (business) application. Let’s do it!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-rethinking-modern-application-development-7686e386-c777-43f0-8cdd-f41019e8525b",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-nl-2018-wasm-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "PWA",
        "Blazor",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 63
    },
    {
      "id": 75,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-basierte Microservices mit Azure Functions & Co",
      "date": "2018-09-25 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm… Ja, in der Tat. Der Serverless-Ansatz verspricht eine niedrige Hürde, um den Einstieg in Microservices zu finden. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand praktischer Anwendungsfälle. Auf Basis erprobter Designpatterns können Sie mit Azure Functions, Azure Service Bus und Co. in kurzer Zeit sowohl einfache als auch komplexe Services-Anwendungen designen und implementieren – lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Kommen Sie vorbei – eventuell lernen Sie die Basis für Ihr neues Businesssoftware-Backend kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-basierte-microservices-mit-azure-functions-and-co",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=5VIDcSbTgYI",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Azure Functions",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 88,
      "type": "Talk",
      "title": "Pragmatische Microservices-Architekturen mit ASP.NET Core & Co.",
      "date": "2018-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Schlagwort Microservices ist in aller Munde. Angetrieben durch die zahlreichen Nachteile einer monolithischen Architektur wollen Microservices und damit verbundene Design-Patterns und -Ideen das scheinbare Allheilmittel sein. In diesem Vortrag klärt Christian Weyer über den Mythos Microservices auf. Was sind sie, was sind sie nicht, wann setzt man sie ein – und vor allem: Wie baut und betreibt man Microservices in der .NET/.NET-Core-Welt? Sehen Sie Architekturansätze in Aktion und erleben Sie Technologien wie Service Discovery, Web API, SignalR, Message Queuing und Azure im praktischen Einsatz. Versuchen wir also gemeinsam, langweilige Architekturthemen spannend zu machen: auf pragmatische Weise!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-architekturen-mit-asp-dot-net-core-and-co",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 79,
      "type": "Talk",
      "title": "WebAssembly und Blazor - Wie .NET jetzt auch den Browser erobert?",
      "date": "2018-09-24 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET hat höchstens noch auf dem Server eine Zukunft? Diese Aussage stimmt im modernen Web mittlerweile nicht mehr ganz: Seit der Verfügbarkeit von WebAssembly, einem Bytecode fürs Web, können nun auch etwa in C# geschriebene Programme im Browser ausgeführt werden. Das ist mitunter eine interessante Migrationsstrategie, um .NET-Berechnungskerne ins Web zu portieren und mit Single-Page Applications (SPA), zum Beispiel auf Basis von Angular, zu paaren. Mit dem Projekt Blazor vom ASP.NET-Team experimentiert Microsoft zudem mit einem eigenen SPA-Framework mitsamt Tooling, das jedoch nicht auf HTML und JavaScript, sondern auf der Templating-Sprache Razor sowie C# und .NET Core basiert. Sebastian Gingter und Christian Liebel zeigen Ihnen beide Ansätze und geben eine Einschätzung, wo Blazor eine valide Option für die Erstellung von webbasierten UIs sein kann. Klar ist: Was im Web läuft, das kann auf nahezu allen Plattformen ausgeführt werden. Und auch der Verteilung Ihrer Anwendung als Progressive Web App mit vielen nativen Features steht nichts im Wege.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/webassembly-und-blazor-wie-net-jetzt-auch-den-browser-erobert",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=z3x1u-cuED8",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        3
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 92,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps - Next Generation Apps",
      "date": "2018-09-09 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Gesetzt den Fall, Sie halten Cross-Plattform SPAs (Single Page Applications) für eine gute Idee, könnte diese Night Session in der Tat interessant für Sie werden. Lassen Sie uns über das Web als Plattform reden und darüber, wie wir JavaScript-basierte Browseranwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browserplattformen haben die Art und Weise verändert, wie wir Anwendungen erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung – eine großartige Basis für moderne Applikationen gemäß der Idee von Progressive Web Apps (PWA). Zudem haben wir mit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Night Session wird Christian Weyer sowohl über PWAs als auch über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C++, Java oder C#/.NET-Code im Browser ohne Plug-in nutzen können – sei es aus Performance- oder Wiederverwendungsgründen. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche Möglichkeiten PWAs und WebAssembly dem Web verleihen könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-next-generation-apps",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/software-architecture-summit-2018-pwa-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "PWA",
        "Web Technologies",
        "WebAssembly"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 66
    },
    {
      "id": 129,
      "type": "Talk",
      "title": "Legacy-Anwendungen ver-Service-fizieren mit ASP.NET Core",
      "date": "2018-09-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wer kennt sie nicht: Zehn bis 20-Jährige native Anwendungen weisen nicht selten bekannte Schwierigkeiten auf. Sie sind groß, monolitisch, komplex, launenhaft, laufen nur auf einem bestimmten Betriebssystem mit einem ganz bestimmten Patch Level, es gibt genau einen Entwickler, der diese versteht und jede einzelne von denen ist eine State Machine.\nAus den genannten Gründen und um die Marktanteile zu erweitern ist es kein Wunder, dass die Hersteller ihre Anwendung am liebsten hinter einer Web-API verstecken möchten, welche über eine stabile, performante und vergleichsweise einfache API konsumiert werden kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/legacy-anwendungen-ver-service-fizieren-mit-asp-dot-net-core",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pawelgerr/Talks-LegacyApplications",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        "Architecture",
        "ASP.NET Core",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 83
    },
    {
      "id": 89,
      "type": "Talk",
      "title": "WebAssembly: Dem JavaScript sein Tod!?",
      "date": "2018-06-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blasphemie: JavaScript auf einer JavaScript-Konferenz in Frage zu stellen!\nLassen Sie uns über das Web als Plattform reden und darüber, wie wir JavaScript-basierte Browseranwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browserplattformen haben die Art und Weise verändert, wie wir Anwendungen, beispielsweise Line-of-Business Applications, erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung - eine großartige Basis für moderne Anwendungen gemäß der Idee von Progressive Web Apps (PWA).\nMit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard haben wir so allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Session werden Christian Weyer und Sebastian Gingter über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C++, oder gar Java beziehungsweise C#/.NET-Code im Browser ohne Plug-in nutzen können – und so die optimale Performance aus ihrer \"App\" holen können. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche neuen Möglichkeiten WebAssembly unserer geliebten Plattform verleihen kann. Spüren Sie das Potenzial Ihrer nächsten (Geschäfts-)Anwendung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-dem-javascript-sein-tod",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/enterjs-2018-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Technologies",
        "JavaScript",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 64
    },
    {
      "id": 77,
      "type": "Workshop",
      "title": "Moderne APIs mit ASP.NET Core MVC und SignalR – End-to-End",
      "date": "2018-06-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne APIs bieten neben der gängigen HTTPS-Interaktion auch die Möglichkeit zur Echtzeitkommunikation auf Basis von WebSockets. Mit Hilfe von Microsofts Open-Source-Plattform ASP.NET Core MVC und SignalR lassen sich im Handumdrehen Web-APIs und Push-Services entwickeln. Doch damit nicht genug: Weitere Themen wie Security, Rate-Limiting, eine sinnvolle Dokumentation und ein vernünftiges zentralisiertes Logging sind mit von der Partie. Und jeder dieser einzelnen Bereiche bietet uns eine neue Herausforderung. Sebastian Gingter und Manuel Rauber zeigen Ihnen in diesem Workshop, wie man mit .NET Core moderne APIs auf und für verschiedene Plattformen entwickeln kann. Zusätzlich wird durch den Einsatz von Entity Framework Core die Anbindung an verschiedene Datenbanken ermöglicht. Durch den Einsatz weiterer Open-Source-Bibliotheken fürs Logging oder zur automatischen Generierung einer Swagger/OpenAPI-Dokumentation ergänzen wir die API um weitere Funktionalitäten. Eine Client-Anwendung, das Deployment auf unterschiedliche Plattformen und das Deployment in die Cloud runden den Workshop ab – vollständig End-to-End eben!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/einmal-api-mit-allem-bitte-asp-dot-net-core-mvc-und-signalr-in-action-164d1e3e-189b-4b6a-95a3-33003e3f3f05",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-ms-summit-spring-2018-services-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        1
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 42
    },
    {
      "id": 91,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps: Rethinking modern application development",
      "date": "2018-05-23 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Choose your programming language of choice for building fast, ubiquitously cross-platform, future-proof modern applications: dang - your dream will finally come true! Really...? Let's see. Undoubtedly, everybody needs to build business applications, somehow. The web and the browser platforms have changed the way we can build LOB applications and these platforms have evolved considerably in the past 5 years. More and more native features are available to SPAs (single page applications) running in the browser - a great base for modern applications as so called Progressive Web Apps (PWA). Now, with the rise of WebAssembly (WASM) as a standard and the improving maturity of PWAs we have powerful tools in our hand to build the next generation of web-based applications. In this session Christian Weyer will talk about the features & possibilities of Progressive Web Apps as app-like appearance, installability or offline operations, paired with the power of WebAssembly as a bytecode for all major modern browsers. See how to use PWAs to build native-like applications on the browser platforms and experience the strength of WASM to run C, C++ or C#/.NET code in the browser, without any plugin. This can be a disruptive approach for both greenfield and brownfield projects. Lean back and watch how the web is evolving into a new stage of capabilities and feel the potential of your next (business) application. Let’s do it!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-rethinking-modern-application-development",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-2018-wasm-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "PWA",
        "Web Technologies",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 65
    },
    {
      "id": 90,
      "type": "Workshop",
      "title": "Modern Cross-Platform Business Applications with Angular, Cordova, Electron, PWA & Serverless Backends",
      "date": "2018-05-21 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Modern business applications are facing entirely different challenges today. End-users are used to just leverage their mobile phone, tablets, laptops and (maybe) desktop computers. Applications, data and processes just need to work, just need to “be there” – regardless of the application hosting and provisioning model. Developers should realize these ever-changing challenges and should address possible approaches for ubiquitous solutions. In this full-day workshop, Thorsten and Christian from Thinktecture show you a way how to design, architect, implement and run modern business applications – end-to-end. Come and see how to provide lightweight APIs into your business processes via Serverless technolgoies and architectures in Azure. Feel the power of real-cross platform HTML5 SPAs – e.g. based on Angular – to offer a use-case-optimized user experience across all platforms on any devices and runtimes. Let’s start with Angular web applications for the browser and augment them to have native functionalities on the mobile platforms with Apache Cordova and on desktop operating systems with GitHub Electron. Last but not least, join us for a sneak preview into a hopefully not too disitant future: Progressive Web Apps (PWA) could be the ever-lasting ultimate app model for everybody. Apps without the need to install, just running inside the browser engines with power to interact natively. Sounds too good? Let’s see – all this in action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/modern-cross-platform-business-applications-with-angular-cordova-electron-pwa-and-serverless-backends",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-2018-mba-ws",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Azure Functions",
        "Cordova",
        "Electron",
        "PWA",
        "Serverless",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 65
    },
    {
      "id": 128,
      "type": "Talk",
      "title": "Legacy-Anwendungen ver-Service-fizieren mit ASP.NET Core",
      "date": "2018-04-27 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wer kennt sie nicht: Zehn bis 20-Jährige native Anwendungen weisen nicht selten bekannte Schwierigkeiten auf. Sie sind groß, monolitisch, komplex, launenhaft, laufen nur auf einem bestimmten Betriebssystem mit einem ganz bestimmten Patch Level, es gibt genau einen Entwickler, der diese versteht und jede einzelne von denen ist eine State Machine.\nAus den genannten Gründen und um die Marktanteile zu erweitern ist es kein Wunder, dass die Hersteller ihre Anwendung am liebsten hinter einer Web-API verstecken möchten, welche über eine stabile, performante und vergleichsweise einfache API konsumiert werden kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/legacy-anwendungen-ver-service-fizieren-mit-asp-dot-net-core",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pawelgerr/Talks-LegacyApplications",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        "Architecture",
        "ASP.NET Core",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 81
    },
    {
      "id": 124,
      "type": "Talk",
      "title": "Event-based Microservices with Azure Functions, EventGrid & Co.",
      "date": "2018-04-21 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Whaaat? No servers? Well, yes. The Serverless approach for building microservices promises to offer a low entry barrier - for both getting starting and for fulfilling a target. In this session Christian & Boris will show you end-to-end Serverless with Azure & .NET Core by means of a realistic application scenario from customer projects.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architectures-event-based-microservices-with-azure-functions-eventgrid-and-co",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/globalazurebootcamp-2018-serverless",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6,
        14
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Azure Functions"
      ],
      "primaryTag": "Azure Functions",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 79
    },
    {
      "id": 231,
      "type": "Webinar",
      "title": "RxJS von Grund auf - Teil 2: Operatoren und Operatorenketten",
      "date": "2021-06-15 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im ersten Teil haben wir uns die grundlegenden Konzepte hinter RxJS näher angesehen. Dabei kam ein Blick hinter die Kulissen von Operatoren und Operatorketten zu kurz. In diesem Teil möchten wir besonderen Fokus auf diese Aspekte legen und den Vorhang lüften. Dazu werden wir uns nicht nur bestehende Operatoren ansehen, sondern uns mit der Erstellung eigener Operatoren auseinander setzen.\n\n* Kurzes Recap des ersten Webinar\n* Operatoren selbstgemacht\n* Verhalten in Operatorketten\n* Operatoren parametrisieren\n* Existierende Operatoren wiederverwenden",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-teil-2-operatoren-und-operatorenketten",
          "label": "Speakerdeck (Slides)"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-02-rxjs-operators",
          "label": "GitHub (Code)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 153
    },
    {
      "id": 204,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2021-06-07 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered-862e424d-643b-4b18-8673-631c9375ed7e",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 126
    },
    {
      "id": 230,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Einführung in reaktives JavaScript",
      "date": "2021-06-01 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": "GitHub (Code Sample)"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-einfuhrung-in-reaktives-javascript",
          "label": "SpeakerDeck (Slides)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 153
    },
    {
      "id": 229,
      "type": "Webinar",
      "title": "Keycloak fuer .NET Entwickler",
      "date": "2021-05-25 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Authentication oder Authorization, Multi-Tenancy oder aber für einfache Anwendungen: Keycloak ist ein Open Source Identity and Access Management System mit dem Ihre Anwendungen Authentifizierung und Autorisierung auslagern können. Obwohl es ein Java-basierendes Produkt ist, lässt es sich dank offener Standards wie OAuth, OpenID Connect (OIDC) oder natürlich HTTP auch in ASP.NET-Core-Anwendungen integrieren.\n\nIn diesem Webinar zeigte Boris Wilhelms , wie Sie Keycloak in Ihre ASP.NET-Core-Lösungen integrieren können und wie sich Keycloak von IdentityServer oder Azure Active Directory B2C unterscheidet.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/keycloak-fuer-net-entwickler-9bbba251-7cc3-4e25-8561-b1a7f63ba979",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-keycloak",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        "Keycloak"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 152
    },
    {
      "id": 228,
      "type": "Webinar",
      "title": "Web-API mit Turbo: Deep-dive in async/await für Backend-APIs",
      "date": "2021-05-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Asynchrone Programmierung wird immer häufiger als der Heilsbringer in Sachen Performance angepriesen. Doch stimmt das auch? Die Antwort ist ein ganz klares Jaein. Was bedeutet asynchrone Programmierung überhaupt, wie unterscheidet sie sich von Multithreading und was muss ich wirklich wissen, damit die Verwendung von async/await einen spürbaren Einfluss auf die Geschwindigkeit meiner ASP.NET Core Web API zeigt? Diese Fragen und einige mehr wird Ihnen der .NET- und Backend-Experte Sebastian Gingter in diesem Webinar beantworten und darüber hinaus auf Best Practices sowie einige Tipps & Tricks eingehen. Nach diesem Talk haben Sie das notwendige Handwerkszeug beisammen, um ihre Web APIs an den richtigen Stellen durch asynchrone Operationen zu optimieren.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-2021-05-async",
          "label": "Demos auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/await-in-net",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "async",
        ".NET"
      ],
      "primaryTag": ".NET",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 151
    },
    {
      "id": 226,
      "type": "Webinar",
      "title": "Electron, Capacitor, PWA - was, wann, wie & warum?",
      "date": "2021-05-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org",
          "label": "Paint-PWA"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-capacitor-pwa-was-wann-wie-and-warum",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Capacitor",
        "Cordova",
        "Electron",
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 150
    },
    {
      "id": 224,
      "type": "Webinar",
      "title": "Azure Arc enabled Kubernetes: Hybrid and Multi-Cloud",
      "date": "2021-04-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Finally, one to rule them all: Azure Arc enabled Kubernetes allows you to manage and monitor Kubernetes clusters from different sources. Let Azure Arc act as a cockpit for all your Kubernetes clusters, no matter if they are running in AWS, Google Compute Cloud, Digital Ocean, or even a private data center.\nJoin this webinar with Thorsten Hans to understand the capabilities and see what can be achieved with Azure Arc enabled Kubernetes. With an example, you will dive into the topic and see how to use key features such as onboarding, inventory, monitoring, and Azure Policy powered governance to tame all your clusters.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-arc-enabled-kubernetes-hybrid-and-multi-cloud",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/arc-enabled-k8s-webinar-april-2021",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Kubernetes"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 148
    },
    {
      "id": 223,
      "type": "Webinar",
      "title": "Web Components: Bessere (SPA-)Architektur mit Smart- und Presentational-Components-Pattern",
      "date": "2021-04-27 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components: ein Begriff, gar (ehemaliger?) Hype, den wir in der Webentwicklung seit einiger Zeit lesen und immer wieder darüber stolpern. Custom Elements, Shadow DOM und HTML Templates ergeben ein natives Komponentenmodell für unseren Browser. Komponenten, wiederverwendbare SPA-Framework-unabhängige UI-Bausteine, die wir in jeder und für jede App nutzen könnten.\n\nDoch noch immer werden Komponenten frameworkabhängig bspw. in Angular, React oder Vue.js entwickelt. Liegt das daran, dass unserer Anwendungsarchitektur noch ein wichtiges Pattern fehlt, um SPA-Components mit Web Components sinnvoll zu kombinieren? Mit dem Pattern der Smart und Presentational Components erreichen wir eine klare Trennung zwischen State Management (Smart) und reinem User Interface und seiner Interaktion (Presentational). Was genau es damit auf sich hat und wie dies mit Web Components realisiert werden kann, zeigt Manuel Rauber im Live-Coding mit Vor- und Nachteilen anhand einer Real-World-Demo-Applikation.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-bessere-spa-architektur-mit-smart-und-presentational-components-pattern",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-smart-and-presentation-components",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 147
    },
    {
      "id": 222,
      "type": "Talk",
      "title": "Produktivitäts-PWAs auf Desktop-Niveau mit Project Fugu",
      "date": "2021-04-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Beitragenden Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. Damit können Entwickler endlich auch Produktivitäts-Apps wie Büro- und Bearbeitungsprogramme oder IDEs sinnvoll ins Web bringen. In diesem Vortrag zeigt Ihnen Christian Liebel, wie Sie Produktivitäts-PWAs auf Desktopniveau entwickeln können – Zugriff auf das Dateisystem, die Zwischenablage sowie Dateizuordnungen inklusive.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/produktivitats-pwas-auf-desktop-niveau-mit-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 146
    },
    {
      "id": 219,
      "type": "Workshop",
      "title": "JavaScript Fullstack Day: Project Fugu",
      "date": "2021-04-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Presented as a part of the full-stack day of International JavaScript Conference 2021 London, Online Edition.\n\nProgressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/javascript-fullstack-day-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": true,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 143
    },
    {
      "id": 140,
      "type": "Webinar",
      "title": "Web-Apps mit Ionic: Auf Schienen schneller ans Ziel?",
      "date": "2021-04-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen können mitunter komplex werden. Täglich gibt es neue Anforderungen und am besten soll die App noch Cross-Plattform verfügbar sein. Und natürlich darf die Entwicklung nicht zu lange dauern. Ionic versucht als Opinionated-Framework dieses Problem zu adressieren.\nIn diesem Webinar zeigt Max Schulte, was mit Ionic als SPA-Framework möglich ist und wie es dank seiner Tools, \"Production Ready\"-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-ionic-leitplanken-demo",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net",
          "label": "Live Demo (Azure)"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/web-apps-mit-ionic-auf-schienen-schneller-ans-ziel-3ed7786e-0011-4d07-a42b-acb0e5fcaa9b",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Mobile",
        "Cordova",
        "Capacitor",
        "Web Technologies",
        "Web Components",
        "Webinar",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 144
    },
    {
      "id": 218,
      "type": "Talk",
      "title": "Implementing Productivity Apps With Angular And Fugu APIs",
      "date": "2021-04-20 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have worked since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included! This allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web. Thinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis-869dec24-e8f7-4821-b15b-c063cba32760",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-2021-ldn-angular-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 143
    },
    {
      "id": 225,
      "type": "Talk",
      "title": "Infrastructure as Code for Azure with Terraform",
      "date": "2021-04-16 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Modern and distributed application architectures often require a large set of services and systems with a rather complex configuration to work as expected. You and your team can create and manage such infrastructures professionally by adopting Infrastructure as Code (IaC) and relying on Terraform. In this talk, Azure MVP Thorsten Hans demonstrates how to create reliable and predictable Azure infrastructures with Terraform. You will learn how to structure your project, create and mutate your services and manage multiple environments in no time.",
      "media": [
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=6e3aI5WAg5M",
          "label": "Recording"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/globalazure-2021-terraform",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform",
        "Azure"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 149
    },
    {
      "id": 216,
      "type": "Webinar",
      "title": "Blazor WebAssembly - Forms in Action",
      "date": "2021-04-14 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ein Großteil an Softwarelösungen hantiert mit Daten. Formulare sind hier kaum wegzudenken und ein zentraler Bestandteil. Sei es das Anmelden über eine Login-Maske oder das Buchen von Konzertkarten, überall sind Sie zu finden.\n\nIn dieser Session zeigt Patrick Jahr anhand eines Beispiels wie Formulare mit Blazor WebAssembly in .NET 5 implementiert werden können. Jedoch ist der Aufbau eines Formulars nicht alles: wird ein Nutzer nicht richtig über fehlerhafte Eingaben informiert, oder muss zu lange warten, bis das Formular neue Daten geladen hat, verliert er direkt die Lust oder das Vertauen in die Anwendung. Daher wird in dieser Session auch ein großes Augenmerk auf die Validierung von Formularen gelegt. Schlussendlich ist noch die Diskussion von Performance-beeinträchtigenden Fakten in komplexeren Szenarien ein wichtiges Thema in diesem Webinar.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/blazor-webassembly-forms-in-action",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-blazor-forms",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        ".NET",
        "Blazor",
        "WebAssembly",
        "Blazor WebAssembly"
      ],
      "primaryTag": "Blazor WebAssembly",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 142
    },
    {
      "id": 213,
      "type": "Webinar",
      "title": "Sichere und robuste Docker Images für .NET",
      "date": "2021-03-30 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Anwendungen in Containern zu betreiben gehört nicht nur zum guten Ton. Bereits seit Jahren befinden sich Technologien wie Kubernetes und Docker auf einem Siegeszug der seines gleichen sucht. Doch bereits beim Erstellen von Docker Images gilt es auf viele kleine Dinge zu achten um Anwendungen auf lange Sicht professionell in Containern zu betreiben.\n\nIn diesem Webinar zeigt Azure MVP Thorsten Hans, wie auch Sie sichere und robuste Docker Images erstellen. Sämtliche Demos und Beispiele werden in diesem Webinar anhand einer .NET-WebAPI erläutert.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-docker-march-2021",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/sichere-und-robuste-docker-images-fur-net",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Docker"
      ],
      "primaryTag": "Docker",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 141
    },
    {
      "id": 211,
      "type": "Half Day Workshop",
      "title": "Angular meets Project Fugu: Produktivitäts-PWAs auf Desktopniveau (Hands-on)",
      "date": "2021-03-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Contributors Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. Damit können Entwickler endlich auch Produktivitäts-Apps wie Büro- und Bearbeitungsprogramme oder IDEs sinnvoll ins Web bringen. In diesem Workshop zeigt Ihnen Christian Liebel von Thinktecture, wie Sie mit Angular Produktivitätsapps auf Desktopniveau entwickeln können – Zugriff auf das Dateisystem und die Zwischenablage sowie Dateizuordnungen inklusive. Und Sie können mitentwickeln: Bitte bringen Sie dazu Ihr Notebook (ohne Corporate-Proxys/Unternehmensrichtlinien) mit installiertem Google Chrome Canary, Node.js und Microsoft Visual Studio Code mit.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-meets-project-fugu-produktivitats-pwas-auf-desktopniveau-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-spring-2021-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 214,
      "type": "Workshop",
      "title": "Rock Solid, yet flexible Single Page Applications professionell mit Kubernetes betreiben",
      "date": "2021-03-23 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Kubernetes – das Cloud-Betriebssystem dieser Dekade – bietet auch für den Betrieb von Single Page Applications (SPAs) eine hohe Flexibilität und Individualisierbarkeit. In diesem Halbtages-Workshop zeigt Thorsten Hans, wie Sie Ihre SPA in Docker Images verpacken, und in Kubernetes betreiben können. Lernen Sie essenzielle Konzepte und Techniken für das Hosting von SPAs anhand einer exemplarischen Angular-Anwendung kennen. Hierbei werden wir iterativ vom Standardbetrieb, bis hin zur Abbildung einer professionellen Multi-Tenant-Umgebung mit Canary-Deployments vorgehen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/rock-solid-yet-flexible-single-page-applications-professionell-mit-kubernetes-betreiben",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-2021-kubernetes",
          "label": "Sample Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Docker",
        "Kubernetes"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 210,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Platform Realtime Push - 3",
      "date": "2021-03-23 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-core-signalr-cross-platform-realtime-push-3",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        "SignalR",
        "ASP.NET Core",
        ".NET Core",
        "JavaScript",
        "Angular",
        "Capacitor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 137
    },
    {
      "id": 212,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps – Hands on!",
      "date": "2021-03-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und im Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mit Hilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigt Ihnen Christian Liebel die Grundlagen der PWA-Entwicklung. Und Sie können aktiv mitentwickeln!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-spring-2021-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 139
    },
    {
      "id": 209,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Stream-basierte Denkweise - am konkreten Beispiel",
      "date": "2021-03-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "RxJS unterstützt bei der Bewältigung asynchroner Probleme verschiedener Art, nicht nur bei AJAX-Requests. Allerdings erfordert das Stream-basierte Paradigma ein Umdenken für den Entwickler.\n\nNachdem wir uns im ersten Teil intensiv mit den Grundbausteinen von RxJS beschäftigt haben und dann im zweiten Teil sehr intensiv auf Operatoren und Operatorenketten eingegangen sind, nehmen wir uns in diesem Webinar einen Anwendungsfall aus der Realität vor. An einem konkreten Beispiel leiten wir eine Lösung ohne den Einsatz von RxJS her und stellen dieser eine elegante Lösung gegenüber, die sich den passenden Operatoren bedient.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-stream-basierte-denkweise-am-konkreten",
          "label": "Slides (Speakerdeck)"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-03-rxjs-scrolling",
          "label": "Source (GitHub)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular",
        "RxJS",
        "Angular, RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 136
    },
    {
      "id": 208,
      "type": "Webinar",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2021-03-11 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "What doesn't load in two seconds will never be accessed again: User expectations for web application performance are steadily increasing. After a web application loads, it needs to feel fast and fluid in order for the user to achieve their goal. In our Thinktecture webinar, Christian Liebel will show you Angular’s most important optimization options (Zone.js, Change Detection and Service Workers), so that you can ignite the turbo for your Angular app!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-2e112a94-b9dc-42dc-b166-e46dcb641ac7",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 135
    },
    {
      "id": 207,
      "type": "Webinar",
      "title": "Always up to date: API-Versionierung in .NET 5",
      "date": "2021-03-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit, und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, so haben wir bei APIs das Problem, dass ältere Clientanwendungen mit dem neuen Verhalten nicht mehr zurecht kommen und dann auch nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unserer API.\n\nIn diesem Webinar zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen wann überhaupt eine neue Version benötigt wird, welche Methoden es gibt eine ASP.NET-Core-Web-API zu versionieren und welche verschiedenen Herangehensweisen im Code möglich sind, unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-versioning-webinar-march-2021",
          "label": "Code-Beispiele auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/thinktecture-webinar-api-versionierung-in-net-5",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Versioning",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 134
    },
    {
      "id": 206,
      "type": "Webinar",
      "title": "Storybook: Best Practices mit Angular",
      "date": "2021-03-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Storybook ist ein hervorragendes Tool zur Erstellung von UI-Komponentenkatalogen. Steuerelemente können hier isoliert betrachtet, ausprobiert und dokumentiert werden – eine perfekte Schnittstelle zwischen Designern, Entwicklern und weiteren Projektbeteiligten. Christian Liebel stellt Ihnen in diesem Webinar ein Vorgehensmodell vor, das auf unseren Erfahrungen aus vielen Kundenprojekten mit Angular basiert. Auf einen Streich entsteht damit nicht nur eine erstklassige Komponentenbibliothek, sondern zugleich eine besonders modulare Codebasis – die zugleich Synergieeffekte für Unit Tests und Mocking mit sich bringt.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/storybook-best-practices-mit-angular",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 128
    },
    {
      "id": 205,
      "type": "Webinar",
      "title": "Keycloak fuer .NET Entwickler",
      "date": "2021-02-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Authentication oder Authorization, Multi-Tenancy oder aber für einfache Anwendungen: Keycloak ist ein Open Source Identity and Access Management System mit dem Ihre Anwendungen Authentifizierung und Autorisierung auslagern können. Obwohl es ein Java-basierendes Produkt ist, lässt es sich dank offener Standards wie OAuth, OpenID Connect (OIDC) oder natürlich HTTP auch in ASP.NET-Core-Anwendungen integrieren.\nIn diesem Webinar zeigt Ihnen Boris Wilhelms wie Sie Keycloak in Ihre ASP.NET-Core-Lösungen integrieren können und wie sich Keycloak von IdentityServer oder Azure Active Directory B2C unterscheidet.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/keycloak-fuer-net-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/webinar-keycloak",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "ASP.NET Core",
        "IAM",
        "Keycloak"
      ],
      "primaryTag": "Keycloak",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 127
    },
    {
      "id": 203,
      "type": "Workshop",
      "title": "Progressive Web Apps und Project Fugu: Das nächste Level für Cross-Platform-Apps",
      "date": "2021-02-18 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) ermöglichen es Ihnen, Businessanwendungen für den Browser zu entwickeln, die sich zugleich wie native Anwendungen anfühlen und dabei sogar offline-fähig sind. Dank Project Fugu stehen diese PWAs ihren nativen Gegenstücken in nichts nach! Erfahren Sie in diesem Workshop, wie Sie erfolgreich ihre eigenen PWAs entwickeln!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-und-project-fugu-das-nachste-level-fur-cross-platform-apps?slide=7",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-pwa-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 199,
      "type": "Talk",
      "title": "Advanced Blazor Server: Tiefen und Untiefen meistern",
      "date": "2021-02-18 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor Server ist anders. Es hat gegenüber Blazor WebAssembly ein anderes Verhalten zur Laufzeit. Dabei spielen vor allem Razor Pages eine Rolle, die Dependency Injection funktioniert leicht anders als gewohnt und auch das Zustandsmanagement ist eine Sache für sich. Trauen Sie sich in die tiefsten Tiefen des Blazor-Server-Kaninchenbaus! ASP.NET-Core- und Backend-Experte Sebastian Gingter nimmt Sie an die Hand und zeigt Ihnen diese und noch weitere Spezialitäten von Blazor Server und wie man damit erfolgreich umgeht.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-blazor-server",
          "label": "Repo auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-spring-2021-blazor-server",
          "label": "Folien bei Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "ASP.NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 200,
      "type": "Webinar",
      "title": "RxJS from the group up - Introduction to reactive JavaScript",
      "date": "2021-02-18 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "RxJS is a very powerful tool and has been established in Angular as its central way of communication between Components and Services.\n\nIf you are not quite comfortable yet to use RxJS in all of its glory, then this Webinar is for you. Yannick is going to show you the basic concepts and ideas behind all of RxJS's moving parts, to make sure you can wield this powerful tool more confidently.\n\nAgenda:\n- Why streams?\n- Asynchronicity and the observer pattern\n- Working with RxJS\n- Unsubscribing and completion\n- Resources to help yourself",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-from-the-ground-up-introduction-to-reactive-javascript",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": "Code Sample (GitHub)"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 124
    },
    {
      "id": 202,
      "type": "Talk",
      "title": "Implementing Productivity Apps with Angular and Fugu APIs",
      "date": "2021-02-17 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have been working since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included!\nThis allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web.\nThinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis-cec204b8-f3b4-4dea-a468-a56a0a7b3aea",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 125
    },
    {
      "id": 215,
      "type": "Talk",
      "title": "Kubernetes für .NET Anwendungsentwickler",
      "date": "2021-02-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie möchten Ihre .NET-Core-Anwendung in Kubernetes betreiben und lernen, wie Sie das Potential des Containerorchestrators nutzen können? Dann besuchen Sie diesen Talk von Kubernetes- und Cloud-Native-Experte Thorsten Hans. Sie werden nicht nur den praktischen Umgang mit Kubernetes aus Sicht des Entwicklers lernen, sondern auch, wie Sie Patterns und Praktiken nutzen, um Ihre .NET-Core-Anwendungen optimal in Containern zu betreiben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-fur-net-anwendungsentwickler",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-kubernetes-for-net-devs",
          "label": "Sample Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 201,
      "type": "Talk",
      "title": "Superkräfte für Produktivitäts-PWAs – Project Fugu",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein hervorragendes plattformübergreifendes Anwendungsmodell. In mancherlei Hinsicht musste das Modell jedoch noch hinter seine nativen Gegenstücke zurücktreten. Das wollen Google, Microsoft und Intel mit dem Capabilities Project – Codename Fugu – jetzt ändern. Ihr Ziel: ein leistungsfähigeres Web. Dank den Fugu APIs erhalten PWAs nun Zugriff auf das lokale Dateisystem und die Zwischenablage und können sich als Bearbeitungsprogramm für bestimmte Dateierweiterungen hinterlegen. In dieser Session zeigt Christian Liebel von Thinktecture, wie Fugu APIs entstehen und wie sie einen ganzen Schwung an Produktivitäts-Apps ins Web verlagern könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/superkrafte-fur-produktivitats-pwas-project-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 196,
      "type": "Talk",
      "title": "Blazor in .NET 5: Single-Page-Applications mit C# & WebAssembly",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page-Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor-Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von vielen Beispielen wie Blazor in .NET 5 tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-in-net-5-single-page-applications-mit-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 197,
      "type": "Keynote",
      "title": "Technical Keynote: Auf dem Weg zu „One .NET“ – das eine Framework, sie alle zu beherrschen",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im November 2020 ist .NET 5.0 erschienen. Auch wenn die Vision \"One .NET\" erst mit Version 6.0 vollständig umgesetzt sein wird, so bietet .NET 5.0 doch viele spannende Neuerungen bei Sprachsyntax, Klassen, Anwendungsmodellen und Deployment. In dieser technischen Keynote wird DOTNET-DOKTOR Holger Schwichtenberg zusammen mit Kollegen einige Highlights der neuen Version hervorheben, Empfehlungen zur Migration alter Anwendungen geben und auch einen Ausblick auf die .NET-Zukunft liefern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/technical-keynote-auf-dem-weg-zu-one-net-das-eine-framework-sie-alle-zu-beherrschen",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 198,
      "type": "Talk",
      "title": "Schneller ans Ziel: Web-Apps mit Ionic",
      "date": "2021-02-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen können mitunter komplex werden. Täglich gibt es neue Anforderungen und am besten soll die App auch noch Cross-Platform verfügbar sein. Und natürlich darf die Entwicklung nicht zu lange dauern. Ionic versucht als opinionated Framework dieses Problem zu adressieren. In seinem Vortrag zeigt Max Schulte, was mit Ionic als SPA-Framework möglich ist und wie es dank seiner Tools, Production-Ready-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/schneller-ans-ziel-web-apps-mit-ionic",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net/tabbed/new-offer",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Capacitor",
        "PWA",
        "Web Technologies",
        "Hybrid-App",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 195,
      "type": "Workshop",
      "title": "ASP.NET Core Blazor: Moderne Businessanwendungen mit C# & WebAssembly - Full-Stack- und Cross-Plattform",
      "date": "2021-02-15 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht-webnativen Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET webbasierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browserp﻿lattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Als Abrundung des Workshops soll auch ein Blick auf und ein Vergleich mit Server-side Blazor nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-und-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2021-blazor-workshop",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "WebAssembly",
        "Web Technologies",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 123
    },
    {
      "id": 194,
      "type": "Webinar",
      "title": "Blazor WebAssembly: SPAs mit C# und .NET 5",
      "date": "2021-02-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript oder TypeScript – na klar! Mit ASP.NET Core Blazor gibt es jedoch eine mögliche Alternative für .NET-Entwickler. Auf Basis des Web-Standards WebAssembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# & Razor entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor WebAssembly in .NET 5 möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Ein realistischer Blick auf die Grenzen der Technologie darf hierbei freilich nicht fehlen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-spas-mit-c-number-und-net-5",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 122
    },
    {
      "id": 193,
      "type": "Talk",
      "title": "Full Stack .NET: Single Page Applications mit Blazor, C# & WebAssembly",
      "date": "2021-02-08 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) – bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell – je nach Anwendungsfall – die Grenzen liegen.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/full-stack-net-single-page-applications-mit-blazor-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 121
    },
    {
      "id": 192,
      "type": "Webinar",
      "title": "Unit-Testing in Angular mit Jest",
      "date": "2021-02-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Unit-Tests sind ein hervorragendes Mittel, um (kritische) Funktionalität einer Anwendung automatisiert und schnell überprüfen zu lassen. Das SPA-Framework Angular liefert mit Karma von vornherein eine Testunterstützung mit. Mit Facebooks Jest gibt es jedoch ein weiteres Framework, das unter anderem mit paralleler Testausführung lockt.\n\nIn diesem Webinar zeigt Ihnen Christian Liebel, wie Sie Ihre Angular-App mithilfe von Jest testen können. Nachdem wir zu Beginn ein gemeinsames Verständnis zum Thema Unit Tests geschaffen haben, werden wir uns abschließend auch fortgeschrittenen Inhalten wie Spys und Mocks nähern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/unit-testing-in-angular-mit-jest",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/unit-testing-angular-jest-webinar-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 120
    },
    {
      "id": 190,
      "type": "Talk",
      "title": "Blazor WebAssembly & gRPC - Code-first .NET SPA developer productivity",
      "date": "2021-01-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "With Blazor WebAssembly, developers can write C# code for SPAs in the browser and share code with the server-side of their applications. Usually, you design and use JSON-based Web APIs to communicate between the client and the server logic. In this session, Christian Weyer demonstrates how to employ gRPC & gRPC-Web in a code-first manner to share .NET interface contracts in a strongly-typed way. With this approach, no code generation is needed, you get the same syntax and full IntelliSense on both sides. In fact, you gain the good parts we already had many years ago with WCF - now for the ubiquitous & open web. But: is really everything gold that glitters?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-and-grpc-code-first-net-spa-developer-productivity",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-grpc-code-first",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "ASP.NET Core",
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 118
    },
    {
      "id": 191,
      "type": "Talk",
      "title": "Azure Arc enabled Kubernetes: Hybrid und Multi-Cloud",
      "date": "2021-01-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Endlich alle unter einem Dach. Mit Azure Arc enabled Kubernetes können Kubernetes-Cluster in Azure verwaltet und überwacht werden, und dies unabhängig davon, in welcher Umgebung der Cluster betrieben wird. Azure Arc dient als zentrales und professionelles Cockpit für Ihre Kubernetes-Cluster die in Amazon AWS, Google Compute Cloud, Digital Ocean, oder in privaten Rechenzentren betrieben werden. In diesem Webinar zeigt Thorsten Hans welche Möglichkeiten und Potentiale Azure Arc enabled Kubernetes bietet.  Anhand einer Beispielumgebung werden Sie sehen, wie Inventarisierung, Monitoring und Governance – unter Verwendung von Azure Policies und Open Policy Agent - auf externe Kubernetes-Cluster angewendet werden können.\n ",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-arc-enabled-kubernetes-hybrid-und-multi-cloud",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/arc-enabled-k8s-webinar-january-2021",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Kubernetes",
        "Azure"
      ],
      "primaryTag": "Azure",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 119
    },
    {
      "id": 189,
      "type": "Webinar",
      "title": "RxJS von Grund auf - Teil 2: Operatoren und Operatorenketten",
      "date": "2021-01-19 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Im ersten Teil haben wir uns die grundlegenden Konzepte hinter RxJS näher angesehen. Dabei kam ein Blick hinter die Kulissen von Operatoren und Operatorketten zu kurz. In diesem Teil möchten wir besonderen Fokus auf diese Aspekte legen und den Vorhang lüften. Dazu werden wir uns nicht nur bestehende Operatoren ansehen, sondern uns mit der Erstellung eigener Operatoren auseinander setzen.\n\n* Kurzes Recap des ersten Webinar\n* Operatoren selbstgemacht\n* Verhalten in Operatorketten\n* Operatoren parametrisieren\n* Existierende Operatoren wiederverwenden",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-teil-2-operatoren-und-operatorenketten",
          "label": "Slides"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-2021-02-rxjs-operators",
          "label": "Github Repo"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular, RxJS",
        "RxJS"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 117
    },
    {
      "id": 187,
      "type": "Webinar",
      "title": "Blazor Server: Mögliche Architekturalternative zu SPAs?",
      "date": "2020-12-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Viele .NET-Entwickler sind Feuer und Flamme wenn es um Blazor und Webentwicklung geht. Wenn man etwas genauer hinschaut, stellt man schnell fest, dass man gleich zwei Geschmacksrichtungen vor sich hat: Blazor WebAssembly und Blazor Server.\n\nIn diesem Webinar wollen wir uns genauer mit Blazor Server beschäftigen: Was ist Blazor Server überhaupt, wo liegen die Unterschiede zum Client-seitigen Blazor und SPAs im Allgemeinen und welche Auswirkungen haben diese Unterschiede auf die Art, wie wir Web-Anwendungen schreiben? Was muss ich lernen, um mit Blazor Server arbeiten zu können und worauf muss ich eventuell besonders achten, wenn ich meine ersten Schritte mit Blazor Server gehen möchte? All diese Fragen wird unser Experte Sebastian Gingter in dieser Session klären.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/blazor-server-mogliche-architekturalternative-zu-spas",
          "label": "Slides zum Webinar"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-blazor-server-12-2020",
          "label": "GitHub Repo mit dem Beispielcode"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Architecture",
        "ASP.NET Core",
        "SignalR",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 116
    },
    {
      "id": 186,
      "type": "Webinar",
      "title": "Full Throttle: Azure Infrastructures with Terraform",
      "date": "2020-12-09 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "You want to provision and manage your cloud infrastructure professionally yet still keep things simple? Then you should join this webinar and dive into Terraform with Thorsten Hans.\nYou will learn by practical examples how to automate your mission-critical workloads by adopting Infrastructure as Code (IaC) and mastering Terraform.\nWithin an hour, you will learn everything you need to create and manage your cloud environments. Thorsten explains all necessary concepts and techniques like the Terraform workflow, how modules work, expressions, and interpolation, by live-coding an example infrastructure during the webinar.\nAfter the event, you will be able to express your infrastructures in code, even if you are using different cloud offerings such as AWS, GCP, or Digital Ocean.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-december-2020",
          "label": "GitHub Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/full-throttle-azure-infrastructures-with-terraform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 115
    },
    {
      "id": 185,
      "type": "Webinar",
      "title": "Blazor WebAssembly: Neues in .NET 5\u000b",
      "date": "2020-12-08 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ähnlich wie bei Angular und React wird auch bei Blazor ständig an der Plattform weiter gearbeitet. Vor allem bei Blazor WebAssembly als relativer Framework-Neuling sind die Verbesserungen und Neuerungen des ASP.NET-Teams bei Microsoft von Interesse. In diesem Webinar zeigt Christian Weyer auf gewohnt pragmatische Art was alles neu ist im .NET-5-Release und wie diese Features einzuordnen sind.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-neues-in-net-5",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-things-to-know/tree/net5-demos",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "SPA",
        "Web Technologies",
        "WebAssembly",
        "Blazor",
        ".NET Core",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 114
    },
    {
      "id": 184,
      "type": "Webinar",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-12-02 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann.\n\nIn unserem Thinktecture-Webinar zeigt Ihnen Christian Liebel mit Zone.js, Change Detection und Service Workern die wichtigsten Performance-Stellschrauben des Angular-Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-c737c808-80f3-4e86-b27f-54d311007d2c",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 113
    },
    {
      "id": 182,
      "type": "Webinar",
      "title": "Pragmatische API-Versionierung in ASP.NET Core",
      "date": "2020-11-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit, und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, so haben wir bei APIs das Problem, dass ältere Clientanwendungen mit dem neuen Verhalten nicht mehr zurecht kommen und dann auch nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unserer API. In diesem Webinar zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen wann überhaupt eine neue Version benötigt wird, welche verschiedenen Methoden es gibt eine ASP.NET-Core-Web-API zu versionieren und welche verschiedenen Herangehensweisen im Code möglich sind, unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-versioning-webinar-november-2020",
          "label": "GitHub - Repo"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/thinktecture-webinar-pragmatische-api-versionierung-in-asp-dot-net-core",
          "label": "Slides auf Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Versioning",
        "ASP.NET Core"
      ],
      "primaryTag": "ASP.NET Core",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "webinar-test",
      "bigmarkerRef": "1f15d74a37a4",
      "ctaKey": "Recording ansehen",
      "additionalInfo": "",
      "conference": 112
    },
    {
      "id": 183,
      "type": "Talk",
      "title": "Real-World Blazor WebAssembly : 5(+) Dinge, die Sie kennen sollten",
      "date": "2020-11-24 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "In diesen 60 Minuten spricht Christian Weyer über fünf Erkenntnisse aus dem praktischen Einsatz von Blazor WebAssembly - mit Demos, live und in Farbe. Auch wenn für Sie vielleicht nur ein einziges \"Ding\" dabei ist, das sie neu lernen: diese Session sollte sich dennoch lohnen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/real-world-blazor-webassembly-5-plus-dinge-die-sie-kennen-sollten",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-wasm-things-to-know",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "gRPC",
        "SPA",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 68
    },
    {
      "id": 134,
      "type": "Workshop",
      "title": "Tausche .NET gegen Web: Desktop-Apps als PWA entwickeln",
      "date": "2020-11-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Für .NET-Entwickler ist völlig klar: Wenn eine Desktopanwendung entwickelt werden muss, greift man zu Windows Forms oder WPF. In dieser DevSession nehmen wir eine alternative Technologie unter die Lupe: Progressive Web Apps. Dieses Anwendungsmodell auf Basis von Webtechnologien bietet nicht nur eine erstklassige Unterstützung für Desktopanwendungen, sondern läuft auf Basis desselben Quelltextes auch noch im Browser oder auf Mobilgeräten. Microsoft ist einer der wesentlichen Treiber der Progressive Web Apps – und das nicht erst, seitdem der eigene Browser Edge auf dem Chrome-Unterbau Chromium basiert. Im Rahmen von Project Fugu kooperiert Microsoft mit Intel und Google, um mächtige Schnittstellen für Webanwendungen einzuführen: Das schließt Dateizuordnungen, Zugriff auf das native Dateisystem oder die Zwischenablage sowie Sprunglisteneinträge mit ein. In dieser Session zeigt Ihnen Christian Liebel von Thinktecture, wie Sie erstklassige Produktivitätsapps für den Desktop als PWA entwickeln können – und ganz nebenbei auch noch Apps für den Browser und Mobilgeräte herausfallen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/tausche-net-gegen-web-desktop-apps-als-pwa-entwickeln",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ddc-2020-desktop-pwas",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org/",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 68
    },
    {
      "id": 132,
      "type": "Talk",
      "title": "Real-World Blazor: 5 Dinge, die Sie kennen sollten",
      "date": "2020-11-23 21:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ob Blazor Server oder Blazor WebAssembly: es gibt Dinge in Microsofts Web-UI-Framework, die sich mitunter erst im Projektalltag heraus kristallisieren. In diesen 60 Minuten spricht Christian Weyer über fünf Erkenntnisse aus dem praktischen Einsatz von Blazor Server & WebAssembly - mit Demos live und in Farbe. Auch wenn für Sie vielleicht nur ein einziges Ding dabei ist, das sie neu lernen: diese Session sollte sich dennoch lohnen ;-) ",
      "media": [],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 68
    },
    {
      "id": 181,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Plattform Realtime Push - 2",
      "date": "2020-11-17 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-core-signalr-cross-plattform-realtime-push-2",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "JavaScript",
        "Blazor",
        "ASP.NET Core",
        "SignalR"
      ],
      "primaryTag": "SignalR",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 111
    },
    {
      "id": 179,
      "type": "Webinar",
      "title": "RxJS von Grund auf: Einführung in reaktives JavaScript",
      "date": "2020-11-10 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "RxJS ist sehr mächtig. So mächtig, dass es Angular als zentrales Denk- und Programmiermodell für die interne Kommunikation unter Komponenten und Services auserkoren hat.\n\nSie fühlen sich noch nicht sicher genug, RxJS in vollem Umfang einzusetzen? Dann zeigt Ihnen Yannick wie Sie mit den notwendigen Ideen, Konzepten und Grundlagen, RxJS im Handumdrehen verstehen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-von-grund-auf-einfuhrung-in-reaktives-javascript",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "RxJS",
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 110
    },
    {
      "id": 178,
      "type": "Webinar",
      "title": "Serverless Computing in Azure Kubernetes Service mit KEDA",
      "date": "2020-11-03 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit Azure Functions stellt Microsoft ein flexibles und mächtiges Framework für Serverless Computing bereit, womit skalierbare und reaktive Anwendungen erstellt werden können. Mit Kubernetes Event-driven Applications (KEDA), können Sie Ihre Azure Functions problemlos in einem Kubernetes-Cluster betreiben. Doch KEDA kümmert sich nicht nur um den Betrieb. Durch geschickte Integration von sowohl externen als auch internen Nachrichten- und Ereignissystemen wie Azure Service Bus oder Azure Event Hub skaliert KEDA Ihre Azure Functions automatisch anhand der anfallenden Anfragen",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/serverless-computing-in-azure-kubernetes-service-mit-keda-503afff9-4772-4c26-b9d8-9c846baec4ab",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/keda-webinar-november-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Kubernetes",
        "Serverless",
        "Azure"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 109
    },
    {
      "id": 175,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2020-10-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered-5a8402f4-2ec1-470c-805f-c44598b49e64",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 176,
      "type": "Talk",
      "title": "Implementing Productivity Apps with Angular and Fugu APIs",
      "date": "2020-10-29 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Double-click a file, make changes, and save it back to disk: That’s how productivity apps, IDEs, and image editors have been working since the early days of desktop computing. Until now, web applications could not integrate into this workflow. Fortunately, Project Fugu, a cross-vendor initiative by Google, Microsoft, and Intel, aims to bring very powerful native capabilities to the web—file handler registrations, clipboard, and file system access included! This allows web developers like you to finally bring Office-style apps, IDEs, text, image, or video editors to the web. Thinktecture’s Christian Liebel shows you how to integrate Native File System and File Handler API into your Angular app.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/implementing-productivity-apps-with-angular-and-fugu-apis",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-2020-angular-fugu",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 133,
      "type": "Webinar",
      "title": "Web Components – das Ende der SPA-Framework-Ära?",
      "date": "2020-10-27 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components – ein Begriff, den wir immer öfter lesen und lesen werden. Dahinter stehen die Technologien Custom Elements, Shadow DOM und HTML Templates. Zusammen ergeben sie ein natives Komponentenmodell für unseren Browser. Es hilft uns, wiederverwendbare UI-Komponenten zu entwickeln, die wir in jeder App benutzen können. Völlig gleich, ob diese Anwendungen mit einem SPA-Framework entwickelt wurden. \n\nBedeutet das aber auch, dass wir eigentlich gar kein SPA-Framework mehr benötigen, sondern alles mit Web Components entwickeln können? Dieser spannenden Frage geht Manuel Rauber in diesem Webinar nach anhand einer Real-World-Demo-Applikation, Live-Coding und den Vor- und Nachteilen von Web Components.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-das-ende-der-spa-framework-ara",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 106
    },
    {
      "id": 172,
      "type": "Half Day Workshop",
      "title": "PWA-Bootcamp: von 0 auf MS Paint (hands-on)",
      "date": "2020-10-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifend einsetzbares Anwendungsmodell auf Web-Basis. Dank Project Fugu, einer Initiative der Chrome-Contributors Google, Microsoft und Intel, wird das Web um noch mächtigere Features erweitert. In diesem Bootcamp zeigt Ihnen Christian Liebel von Thinktecture, wie Sie in nur einem halben Tag eine vereinfachte Version von Paint implementieren und auf Ihrem Gerät installieren können – inklusive Dateisystemzugriff. Bitte bringen Sie Ihr Notebook (ohne Corporate-Proxys/Unternehmensrichtlinien) mit installiertem Google Chrome Canary und Microsoft Visual Studio Code mit.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-bootcamp-von-0-auf-ms-paint-hands-on",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/mobiletechcon-2020-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 105
    },
    {
      "id": 174,
      "type": "Talk",
      "title": "Project Fugu: Progressive Web Apps, Taken to The Next Level",
      "date": "2020-10-27 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to take your Progressive Web App to the next level?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-taken-to-the-next-level",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://paint.js.org",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 55
    },
    {
      "id": 171,
      "type": "Workshop",
      "title": "PWA Workshop: Progressive Web Apps, Superpowered",
      "date": "2020-10-25 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use—until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen shortcuts, clipboard access, and native file system access are only a few examples of Fugu’s powerful APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-workshop-progressive-web-apps-superpowered",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-munich-2020-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 87
    },
    {
      "id": 177,
      "type": "Webinar",
      "title": "3D-Visualisierung im Web mit BabylonJS ",
      "date": "2020-10-20 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne Businessanwendungen sind schon lange nicht mehr langweilig: Daten wollen visualisiert werden und zwar verständlich und ansprechend. Genau dabei helfen Web-Grafik-Engines wie BabylonJS. Sie ermöglichen, 2D-, 3D, Virtual- und Augmented-Reality-Inhalte verständlich darzustellen. Somit lassen sich unter anderem digitale Konzepte visualisieren, konfigurieren und testen – Cross-Plattform und performant.\n\nIn dieser Session zeigt Max Schulte anhand einer Angular-Anwendung, Kernaspekte und Wege sowie einen Architekturansatz, um neue Visualisierungs- und Bedienmöglichkeiten in Ihre Anwendung integrieren zu können",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-visualisierung-im-web-mit-babylonjs",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-3d-visualisierung-babylonjs-angular",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://green-sky-080a5d803.azurestaticapps.net/",
          "label": "Demo App"
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#143",
          "label": "BabylonJS Playground Start"
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#142",
          "label": "BabylonJS Playground Ende"
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "JavaScript",
        "Architecture",
        "Typescript",
        "Web Technologies",
        "Webinar",
        "BabylonJs"
      ],
      "primaryTag": "BabylonJs",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 107
    },
    {
      "id": 135,
      "type": "Talk",
      "title": "Das Frontend-Experiment: Tausche Framework gegen Web Components",
      "date": "2020-10-14 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Aktuell sind Frameworks wie Angular oder React das Mittel der Wahl für webbasierte Frontends, doch das könnte sich in Zukunft ändern. Christian Liebel von Thinktecture wagt den Blick über den Tellerrand: Mit Web Components bekommt das Web derzeit ein Komponentenmodell, das kontinuierlich weiterentwickelt wird. Die heute bekannten Frameworks könnten damit in Zukunft weniger attraktiv werden. Anhand eines Experiments wird gezeigt, ob Frontends mit Web Components schon heute komplett ohne Framework aufgezogen werden können und ob das für die heute typische App-Entwicklung reichen könnte.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies",
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 57
    },
    {
      "id": 170,
      "type": "Webinar",
      "title": "Blazor WebAssembly jenseits von REST: gRPC in Web-Apps & .NET",
      "date": "2020-10-13 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor WebAssembly ermöglicht SPAs und PWAs für Desktop und Mobile - mit C#, .NET und HTTPS-/REST-Calls. Aber da muss es nicht aufhören. Über gRPC bzw. gRPC-Web kann man zum einen optimierte binäre Daten zwischen Blazor und APIs austauschen - und zum anderen eine Contract-First-Programmierung realisieren. Blazor kann auch hier im Konzert von etablierten Cross-Plattform-Lösungen mitspielen. Sehen Sie in diesem Webinar von Christian Weyer Blazor WebAssembly in Action - jenseits von REST.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-webassembly-jenseits-von-rest-grpc-in-web-apps-and-net",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "gRPC",
        "ASP.NET Core",
        "Architecture",
        "SPA",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 104
    },
    {
      "id": 169,
      "type": "Talk",
      "title": "Real-time in no time (and costs) – with Azure Functions, Cosmos DB & SignalR",
      "date": "2020-10-13 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Let’s try to sort out some of the real strengths of Serverless and see where it can be a productive tool in your Cloud arsenal: real-time architectures & communication. Join Christian Weyer while discussing Azure Functions, Cosmos DB, and SignalR Service in a holistic scenario – by illustrating an end-to-end solution for a scalable real-time application built in almost no time, with almost no runtime costs. And action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/real-time-in-no-time-and-costs-with-azure-functions-cosmos-db-and-signalr",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Azure Functions",
        ".NET Core",
        "Architecture",
        "SignalR",
        "Serverless"
      ],
      "primaryTag": "Serverless",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 103
    },
    {
      "id": 167,
      "type": "Half Day Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-10-07 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-9ae2ffa5-17a4-4c07-9528-af5899ece615",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-perf",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Performance",
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 166,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2020-10-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-pwa",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-83a8be36-1440-4465-9ea8-813149a0c041",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 168,
      "type": "Workshop",
      "title": "RxJS in Angular-Anwendungen: so schwimmen Sie nicht mehr gegen den Stream",
      "date": "2020-10-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie sind Angular-Entwickler und fühlen sich noch nicht sicher genug, RxJS in vollem Umfang einzusetzen? Es hat sich gezeigt, dass es in der Community noch viel Unsicherheit in der Nutzung von RxJS gibt – selbst für erfahrene Entwickler. In dieser Session mit Yannick Baron wird die Denk- und Arbeitsweise hinter streambasiertem Datenfluss mit RxJS nochmal speziell im Kontext von Angular-Anwendungen angesehen. Darüber hinaus werden häufige Stolperfallen, Antipatterns und Patterns, sowie nützliche Anwendungsbeispiele vorgestellt, um die Anwendung von RxJS einfacher und vertrauter zu machen. Lasst uns gemeinsam mit dem Stream schwimmen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/rxjs-in-angular-anwendungen-so-schwimmen-sie-nicht-mehr-gegen-den-stream",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-sandbox",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-berlin-2020-rxjs-angular-demos",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular, RxJS"
      ],
      "primaryTag": "Angular, RxJS",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 102
    },
    {
      "id": 163,
      "type": "Workshop",
      "title": "Hands-on-Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2020-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und im Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mit Hilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single Page App Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-moderne-cross-plattform-losungen-01aea073-b24a-4f4a-a53b-aed937f7361d",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 164,
      "type": "Workshop",
      "title": "Kubernetes für Entwickler und Architekten",
      "date": "2020-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\nAusfallsichere und skalierbare Anwendungen zu betreiben und dabei ohne Ausfallzeiten neue Versionen Ihrer Software bereitzustellen, klingt auch heute noch für viele Lösungsanbieter nach einem schönen Traum. Mit Kubernetes und insbesondere den verwalteten Angeboten wie Azure Kubernetes Service (AKS) ist dieser Traum für Viele in greifbare Nähe gerückt. In diesem Tagesworkshop erklärt Thorsten Hans die Eigenschaften, Bestandteile und Möglichkeiten, die Kubernetes als Anwendungsplattform bietet. Nach dem Einstieg und den ersten Schritten mit Kubernetes werden Sie lernen, wie existierende Anwendungsbestandteile im Container-Orchestrator bereitgestellt und effektiv betrieben werden können. Essenzielle Themen, wie beispielsweise automatische Skalierung, der Umgang mit sensitiven Konfigurationsdaten, oder die Verwendung von externen, persistenten Datenspeichern, werden anhand von Beispielen aus der Praxis erläutert und können von Ihnen selbst erprobt werden.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-kubernetes-workshop",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-workshop-at-basta-2020",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "AKS",
        "Docker",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 160,
      "type": "Talk",
      "title": "Serverless Computing in Azure Kubernetes Service mit KEDA",
      "date": "2020-09-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit Azure Functions stellt Microsoft ein flexibles und mächtiges Framework für Serverless Computing bereit, womit skalierbare und reaktive Anwendungen erstellt werden können. Mit Kubernetes Event-driven Applications (KEDA), können Sie Ihre Azure Functions problemlos in einem Kubernetes-Cluster betreiben. Doch KEDA kümmert sich nicht nur um den Betrieb. Durch geschickte Integration von sowohl externen als auch internen Nachrichten- und Ereignissystemen wie Azure Service Bus oder Azure Event Hub skaliert KEDA Ihre Azure Functions automatisch anhand der anfallenden Anfragen. In diesem Vortrag zeigt Thorsten Hans, wie Sie zukunftssichere, skalierbare und reaktive cloud-native Anwendungen erstellen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/serverless-computing-in-azure-kubernetes-service-mit-keda",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-keda",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 161,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum",
      "date": "2020-09-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum-f3051ae8-e858-4be1-9c36-a8e7a094e22e",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        3
      ],
      "tags": [
        "Electron",
        "Cordova",
        "Capacitor",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 162,
      "type": "Talk",
      "title": "3D-Daten-Visualisierung in Businessanwendungen mit BabylonJS – das Web kann’s",
      "date": "2020-09-23 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne Businessanwendungen sind schon lange nicht mehr langweilig: Daten wollen visualisiert werden und zwar verständlich und ansprechend. Genau dabei helfen Web-Grafik-Engines wie BabylonJS. Sie ermöglichen, 2D-, 3D, Virtual- und Augmented-Reality-Inhalte verständlich darzustellen. Somit lassen sich unter anderem digitale Konzepte visualisieren, konfigurieren und testen – Cross-Plattform und performant. In dieser Session zeigt Max Schulte anhand einer Angular-Anwendung Kernaspekte und Wege sowie einen Architekturansatz, um neue Visualisierungs- und Bedienmöglichkeiten in Ihre Anwendung integrieren zu können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-demo-basta-2020-mainz",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-daten-visualisierung-in-businessanwendungen-mit-babylonjs-das-web-kanns",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://www.babylonjs-playground.com/#2EYZPE#142",
          "label": "BabylonJS PLayground - Live Coding "
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Mobile",
        "Typescript",
        "BabylonJs"
      ],
      "primaryTag": "BabylonJs",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 158,
      "type": "Talk",
      "title": "Kubernetes für .NET Core Entwickler",
      "date": "2020-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Sie möchten Ihre .NET-Core-Anwendung in Kubernetes betreiben und lernen, wie Sie das Potenzial des Container-Orchestrators nutzen können? Dann besuchen Sie diesen Talk von Kubernetes- und Cloud-native-Experte Thorsten Hans. Sie werden nicht nur den praktischen Umgang mit Kubernetes aus Sicht des Entwicklers lernen, sondern auch, wie Sie Patterns und Praktiken nutzen, um Ihre .NET-Core-Anwendungen optimal in Containern zu betreiben.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-aks",
          "label": "GitHub Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/kubernetes-fur-net-core-etnwicker",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "AKS",
        "Kubernetes"
      ],
      "primaryTag": "Kubernetes",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 156,
      "type": "Talk",
      "title": "ASP.NET Core Web-API-Versionierung direkt aus der Praxis",
      "date": "2020-09-22 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Anforderungen an Software ändern sich mit der Zeit und so muss sich die Software mit ändern. Das gilt ebenso für unsere Web-APIs. Doch sobald wir Endpunkte entfernen, Felder umbenennen oder gar das Verhalten ändern wollen oder müssen, haben wir bei APIs das Problem, dass sich ältere Clientanwendungen auf das Verhalten verlassen, das wir damals bereitgestellt hatten. Änderungen daran würden die Clients nicht verstehen und daher nicht mehr richtig funktionieren: Wir brauchen also unterschiedliche Versionen unseres API. In dieser Session zeigt Ihnen Sebastian Gingter anhand von Praxisbeispielen, wann überhaupt eine neue Version benötigt wird, welche verschiedenen Methoden es gibt, um ein ASP.NET-Core-Web-API zu versionieren, und welche verschiedenen Herangehensweisen im Code möglich sind, um unterschiedliche Versionen parallel bereitzustellen. Versionierung à la carte, angerichtet mit viel Praxiserfahrung und serviert mit einer kleinen Prise Nähkästcheninformationen.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-api-versioning",
          "label": "Beispielcode und Demos auf GitHub"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-hybrid-2020-asp-dot-net-core-api-versionierung-aus-der-praxis",
          "label": "Slides bei Speakerdeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Versioning",
        "ASP.NET Core",
        "Integration",
        "Microservices",
        "Architecture",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 157,
      "type": "Talk",
      "title": "ASP.NET Core Blazor: Single Page Applications im Browser mit C# & WebAssembly",
      "date": "2020-09-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) – bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET-SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag in gewohnt praktischer Manier anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell – je nach Anwendungsfall – die Grenzen liegen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-single-page-applications-im-browser-mit-c-number-and-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "PWA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 159,
      "type": "Talk",
      "title": "Progressive Web Apps mit Angular: Tipps für Fortgeschrittene",
      "date": "2020-09-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifendes Anwendungsmodell, das auf Webtechnologien basiert. Auch Googles SPA Framework Angular enthält eine PWA-Unterstützung, die schnell angeschaltet ist. Doch damit geht die Arbeit erst richtig los: Christian Liebel zeigt Ihnen, wie Sie mit Angular-App-Updates richtig kommunizieren, Cache-Probleme debuggen und den Anwender korrekt zum Abonnement von Pushbenachrichtigungen oder zum Installieren der App auffordern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-tipps-fur-fortgeschrittene-9c0c117d-93e4-4557-8404-30e43bfcc40c",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 155,
      "type": "Workshop",
      "title": "ASP.NET Core Blazor: moderne Businessanwendungen mit C# & WebAssembly – Full-Stack & Cross-Plattform",
      "date": "2020-09-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht webnative Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor WebAssembly Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET Web-basierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browserplattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Zur Abrundung des Workshops soll auch ein Blick auf Server-side Blazor und der Vergleich damit nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-and-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "Web Components",
        "SPA",
        "Architecture",
        "PWA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 101
    },
    {
      "id": 154,
      "type": "Webinar",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff [Webinar]",
      "date": "2020-09-16 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden.\n\nChristian Liebel zeigt Ihnen die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-25bc73fd-b138-4ac8-8eae-0ea5f9d5e5a9",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "10:30",
      "urlFragment": "",
      "bigmarkerRef": "b1af99b54d9e",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 100
    },
    {
      "id": 153,
      "type": "Talk",
      "title": "Blazor-Gwerch: Dodned im Brausa - echt etz?",
      "date": "2020-09-11 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor bereits in einer frühen Vorab-Version möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-gwerch-dodned-im-brausa-echt-etz",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "PWA",
        "Web Technologies",
        "WebAssembly",
        "SPA",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 38
    },
    {
      "id": 152,
      "type": "Webinar",
      "title": "Infrastructure as Code - Azure with HashiCorp Terraform",
      "date": "2020-09-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar-september-2020",
          "label": "Slidedeck"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-september-2020",
          "label": "Sample GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Terraform",
        "Azure",
        "Infrastructure as Code"
      ],
      "primaryTag": "Infrastructure as Code",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 99
    },
    {
      "id": 115,
      "type": "Talk",
      "title": " Project Fugu: Progressive Web Apps, Superpowered",
      "date": "2020-09-04 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps are a great cross-platform application model, even if somewhat restricted in use – until now, that is. Project Fugu is an initiative led by Google, Microsoft, and Intel. Their goal: a more capable web. Home screen icon badges and shortcuts, clipboard access, accelerated shape detection in images and native file system access are only a few examples of Fugu’s powerful APIs. In this session, Christian Liebel, PWA specialist at Thinktecture, shows you the objective of Project Fugu and demonstrates some of its APIs. Are you ready to superpower your Progressive Web App?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/project-fugu-progressive-web-apps-superpowered",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Project Fugu"
      ],
      "primaryTag": "Project Fugu",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 37
    },
    {
      "id": 150,
      "type": "Workshop",
      "title": "Web-Apps schneller entwickeln mit Ionic & Angular",
      "date": "2020-09-03 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Webanwendungen werden schnell komplex. Neben den rapide wechselnden Anforderungen soll die App installierbar, performant und einfach zu warten sein – und die Entwicklungszeit ist kosteneffektiv knapp bestimmt. Genau diese und andere Herausforderungen versucht Ionic als opinionated Framework zu adressieren. \n\nIn diesem Workshop zeigt Max Schulte, was mit Ionic und Angluar möglich ist und wie Ionic, dank seiner Tools, \"Production Ready\"-Komponenten und APIs das Entwicklerleben für gewisse Anwendungsszenarien erleichtern kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/web-apps-schneller-entwickeln-mit-ionic-and-angular",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://jolly-coast-018f46b03.azurestaticapps.net",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-ionic",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Capacitor",
        "Web Technologies",
        "Web Components",
        "Mobile",
        "PWA",
        "Ionic"
      ],
      "primaryTag": "Ionic",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 149,
      "type": "Half Day Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2020-09-03 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-20655223-0b14-43ab-ba43-5b8943e2dad7",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-perf",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "Performance"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 151,
      "type": "Talk",
      "title": "Web Components: An Overview",
      "date": "2020-09-02 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "A brief overview of web components in regard to the question \"can web components replace SPA frameworks?\".",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-components-an-overview",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 37
    },
    {
      "id": 148,
      "type": "Half Day Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2020-09-02 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-e71f0872-ccce-43de-9da3-f63db1b40c24",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-munich-2020-pwa",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://speakerdeck.com/thorstenhans/ohne-netz-aber-mit-doppeltem-boden-offline-first-apps-mit-html5-und-sql-server-backend",
          "label": "Ohne Netz, aber mit doppeltem Boden: Offline-First-Apps mit HTML5 und SQL Server Backend"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "primaryTag": "PWA",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 36
    },
    {
      "id": 147,
      "type": "Webinar",
      "title": "Blazor Server: Mögliche Architekturalternative zu SPAs?",
      "date": "2020-08-12 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Viele .NET-Entwickler sind Feuer und Flamme wenn es um Blazor und Webentwicklung geht. Wenn man etwas genauer hinschaut, stellt man schnell fest, dass man gleich zwei Geschmacksrichtungen vor sich hat: Blazor WebAssembly und Blazor Server.\n \nIn diesem Webinar wollen wir uns genauer mit Blazor Server beschäftigen: Was ist Blazor Server überhaupt, wo liegen die Unterschiede zum Client-seitigen Blazor und SPAs im Allgemeinen und welche Auswirkungen haben diese Unterschiede auf die Art, wie wir Web-Anwendungen schreiben? Was muss ich lernen, um mit Blazor Server arbeiten zu können und worauf muss ich eventuell besonders achten, wenn ich meine ersten Schritte mit Blazor Server gehen möchte?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/isabelschrage/blazor-server-mogliche-architekturalternative-zu-spas",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "SPA",
        "ASP.NET Core",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": "f61bec5686c7",
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 98
    },
    {
      "id": 146,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-07-28 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number-juli-2020",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "Web Technologies",
        "SPA",
        ".NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 97
    },
    {
      "id": 145,
      "type": "Webinar",
      "title": "Electron, Cordova & PWA - was, wann, wie & warum?",
      "date": "2020-07-21 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang.\n\nPWA-Professional Christian Liebel erklärt Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-and-pwa-was-wann-wie-and-warum",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Electron",
        "Web Technologies",
        "PWA",
        "Cordova"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 96
    },
    {
      "id": 144,
      "type": "Webinar",
      "title": "Git started",
      "date": "2020-07-14 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Versionskontrolle ist ein Muss in jedem Projekt, ob groß oder klein, professionell oder privat. Git wurde 2005 ins Leben gerufen und ist eines der populärsten Systeme zur verteilten Versionsverwaltung.\nSetzen sie schon Git ein und fühlen sich unsicher in der Verwendung, oder ist Git neu für Sie?\n\nDieses Webinar erklärt das Konzept hinter Git und illustriert die Verwendung im Day-to-Day-Business, um ein fundamentales Verständnis zu vermitteln. Auch Every-Day-Benutzer könnten das eine oder andere noch dazu lernen. Let's git started - alle zusammen!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/git-started-verteilte-versionsverwaltung-mit-git",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 95
    },
    {
      "id": 143,
      "type": "Webinar",
      "title": "Docker für .NET Entwickler",
      "date": "2020-07-07 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/docker-webinar",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/docker-webinar",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Containers",
        "Docker"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 94
    },
    {
      "id": 142,
      "type": "Webinar",
      "title": "Azure Functions - Serverless für .NET Entwickler",
      "date": "2020-06-30 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Serverless-Modell ist eine von vielen verschiedenen Möglichkeiten, Anwendungen für die Cloud zu entwickeln und zu betreiben. Es verspricht einen leichten Einstieg in die Entwicklung von Anwendungen und in den Betrieb eines Backends. Dabei ist leider nicht immer klar, wann und wie das Serverless-Modell sinnvoll genutzt werden kann.\n\nIn diesem Webinar zeigt Boris Wilhelms, was das Serverless-Modell ist und wie wir als .NET-Entwickler Azure Functions nutzen können um Serverless Code zu schreiben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/azure-functions-serverless-fur-net-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/webinar-azure-functions",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "Azure",
        ".NET Core",
        "Serverless",
        "Webinar",
        "Azure Functions"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 93
    },
    {
      "id": 141,
      "type": "Talk",
      "title": "Angular für XAML-Entwickler",
      "date": "2020-06-30 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das moderne Web lockt mit mächtigen Features und sprengt Plattformgrenzen. Googles SPA-Framework Angular eröffnet einen möglichen Weg in diese schöne neue Welt. Das Framework weist zwar eine gewisse Lernkurve auf, doch XAML-Entwickler haben beim Einstieg in die Technologie glücklicherweise entscheidende Vorteile: Denn viele aus WPF, Silverlight und UWP bekannte Konzepte finden sich auch in Angular wieder. In diesem Webinar möchten wir XAML-Entwicklern anhand konkreter Fallbeispiele eine Orientierungshilfe geben und zeigen, wie der Einstieg in die Entwicklung mit Angular rasch gelingen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-fur-xaml-entwickler-20eb1f34-cf5c-4d1d-b639-b2d8522ad933",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-angular",
          "label": "Angular-Beispiel"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-wpf",
          "label": "WPF-Beispiel"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "primaryTag": "Angular",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 85
    },
    {
      "id": 131,
      "type": "Talk",
      "title": "Blazor jenseits von REST: SignalR & gRPC in Web-Apps",
      "date": "2020-06-29 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blazor WebAssembly ermöglicht SPAs und PWAs für Desktop und Mobile - mit C#, .NET und HTTPS-/REST-Calls. Aber da muss es nicht aufhören. Über gRPC bzw. gRPC-Web kann man zum einen hoch optimierte binäre Daten zwischen Blazor und APIs austauschen - und zum anderen eine Contract-First-Programmierung realisieren. Wenn man zudem ein bisschen Leben in Form von Echtzeit-Updates in die Anwendung bringen möchte, dann ist SignalR die richtige Wahl. Blazor kann auch hier im Konzert der Cross-Plattform-Lösungen mitspielen. Sehen Sie in dieser Session von Christian Weyer Blazor in Action - jenseits von REST.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-jenseits-von-rest-signalr-and-grpc-in-web-apps",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/dwx-home-blazor-grpc-signalr",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Web Technologies",
        "WebAssembly",
        "SignalR",
        "gRPC",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 85
    },
    {
      "id": 139,
      "type": "Webinar",
      "title": "ASP.NET Core SignalR - Cross-Plattform Realtime Push",
      "date": "2020-06-17 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Echtzeitkommunikation zwischen zwei Welten – dem Client und dem Server. In Anwendungen wie zum Beispiel Dashboards, Messaging Apps, oder Spielen ist die Echtzeitkommunikation kaum noch weg zu denken. Mit SignalR ist eine Lösung geschaffen mit der das Hinzufügen und das Aufbauen einer Echtzeitkommunikation zwischen Clients und Server sehr einfach gestaltet ist.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/asp-dot-net-signalr-core-cross-platform-realtime-push",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-signalr-cross-platform",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Blazor",
        "SignalR"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 91
    },
    {
      "id": 138,
      "type": "Webinar",
      "title": "Angular für XAML-Entwickler",
      "date": "2020-06-09 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das moderne Web lockt mit mächtigen Features und sprengt Plattformgrenzen. Googles SPA-Framework Angular eröffnet einen möglichen Weg in diese schöne neue Welt. Das Framework weist zwar eine gewisse Lernkurve auf, doch XAML-Entwickler haben beim Einstieg in die Technologie glücklicherweise entscheidende Vorteile: Denn viele aus WPF, Silverlight und UWP bekannte Konzepte finden sich auch in Angular wieder. In diesem Webinar möchten wir XAML-Entwicklern anhand konkreter Fallbeispiele eine Orientierungshilfe geben und zeigen, wie der Einstieg in die Entwicklung mit Angular rasch gelingen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-fur-xaml-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-angular",
          "label": "Angular-Beispiel"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/article-app-wpf",
          "label": "WPF-Beispiel"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 90
    },
    {
      "id": 137,
      "type": "Webinar",
      "title": "Azure Kubernetes Service für .NET Core Entwickler",
      "date": "2020-06-02 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/azure-kubernetes-service-fur-net-core-entwickler",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/aks-netcore-webinar",
          "label": "GitHub Repository"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        ".NET Core",
        "AKS",
        "Docker"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 89
    },
    {
      "id": 136,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-05-26 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Webinar anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number-1bf79f69-2ba4-413c-b0a1-04c794513a88",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "SPA",
        ".NET Core",
        "Web Technologies",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 88
    },
    {
      "id": 173,
      "type": "Webinar",
      "title": "Web Components – das Ende der SPA-Framework-Ära?",
      "date": "2020-05-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Web Components – ein Begriff, den wir immer öfter lesen und lesen werden. Dahinter stehen die Technologien Custom Elements, Shadow DOM und HTML Templates. Zusammen ergeben sie ein natives Komponentenmodell für unseren Browser. Es hilft uns, wiederverwendbare UI-Komponenten zu entwickeln, die wir in jeder App benutzen können. Völlig gleich, ob diese Anwendungen mit einem SPA-Framework entwickelt wurden. \n\nBedeutet das aber auch, dass wir eigentlich gar kein SPA-Framework mehr benötigen, sondern alles mit Web Components entwickeln können? Dieser spannenden Frage geht Manuel Rauber in diesem Webinar nach anhand einer Real-World-Demo-Applikation, Live-Coding und den Vor- und Nachteilen von Web Components.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-das-ende-der-spa-framework-ara-c68b0388-7730-4822-abc5-c7e96e18a067",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Technologies",
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 86
    },
    {
      "id": 127,
      "type": "Webinar",
      "title": "3D-Visualisierung in Web Apps: Angular und BabylonJS in Symbiose",
      "date": "2020-05-12 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Dieses Webinar zeigt die Vorteile einer 3D-Engine in modernen Business-Anwendungen. Es wird in Detail auf die Aspekte einer integrativen Architektur eingegangen und anhand einer Demo und Live-Code verdeutlicht wie die Kommunikation stattfinden kann. ",
      "media": [
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": "Lagerhaus Beispiel App"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-architecture",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/3d-visualisierung-in-web-apps-angular-und-babylonjs-in-symbiose",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Architecture",
        "Performance",
        "Web Technologies",
        "BabylonJs"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 80
    },
    {
      "id": 130,
      "type": "Webinar",
      "title": "Entity Framework Core - Performance-Optimierung aus der Praxis",
      "date": "2020-05-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit der Veröffentlichung von Entity Framework Core v3 hat sich das Verhalten des Objekt-Relationalen-Mappers von Microsoft an einigen Stellen maßgeblich geändert. Einige Performanceprobleme haben sich mit der neuen Version praktisch von selbst gelöst, andere Probleme sind neu bzw. aus älteren Versionen von Entity Framework zurückgekehrt. Es ist somit sehr empfehlenswert zu wissen, welche Version für welche Problemart besonders anfällig ist, um möglichst viel Geschwindigkeit aus EF-Abfragen und den dahinterliegenden SQL-Abfragen herauszuholen.\nIm ersten Teil des Webinars werden die häufigsten Performance-Probleme in Entity Framework Core v2 und v3 aufgezeigt. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden SQL Server Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/entity-framework-core-performance-optimierung-aus-der-praxis",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Execution Plan",
        "MS SQL Server",
        "Performance",
        "Entity Framework Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 84
    },
    {
      "id": 227,
      "type": "Webinar",
      "title": "Entity Framework Core 5 - Performance-Optimierung aus der Praxis",
      "date": "2020-05-05 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ef-core-performance-webinar-2021",
          "label": "Demos"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/entity-framework-core-5-performance-optimierung-aus-der-praxis",
          "label": "Slides"
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": "",
      "urlFragment": "",
      "bigmarkerRef": "",
      "ctaKey": "",
      "additionalInfo": "",
      "conference": 84
    },
    {
      "id": 117,
      "type": "Webinar",
      "title": "ASP.NET Core Web-API Dokumentation mit Swagger",
      "date": "2020-04-29 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wenn wir eine .NET Core Web-API bauen, ist es nicht nur damit getan, ein neues Projekt zu erzeugen, ein paar Controller zu implementieren und sie dann zu deployen.\n\nEine API ist - wie der Name schon sagt - eine Schnittstelle, und eine Schnittstelle sollte wohl definiert und auch wohl dokumentiert sein. Vor allem, damit die Entwickler, die mit unserer API arbeiten müssen, auch wissen was sie kann und wie sie funktioniert. Allerdings soll uns die Dokumentation nicht zu viel Zeit kosten und sie sollte möglichst immer auf dem aktuellen Stand sein. Und was wäre, wenn eine solche, schnell erstellte Dokumentation uns als API-Entwickler und auch den Konsumenten unserer API auch noch Arbeit abnehmen könnte?\n\nIn diesem Webinar zeigt Ihnen Sebastian Gingter wie man diese beiden Fliegen mit einer Klappe schlagen kann: Mit Hilfe von Swagger erzeugen wir erst eine umfassende, ständig aktuelle und lebendige Dokumentation unserer API im Open API Format. Danach sehen wir uns an, wie uns diese technische Dokumentation helfen kann, zum einen Zeit zu sparen und zum anderen Fehler zu vermeiden, in dem wir diese akkurate Basis nehmen, um Client- Code und Test-Rümpfe zu generieren. Web APIs jenseits von Hello World, mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/tt-webinar-2020-openapi",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/tt-webinar-2020-openapi",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        "Swagger",
        "ASP.NET Core",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 77
    },
    {
      "id": 116,
      "type": "Webinar",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2020-04-21 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel zeigt Ihnen die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-5abb7495-ffd9-4b00-b8bc-589f079f79a2",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pwa-deep-dive-webinar",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://www.thinktecture.com/de/cheatsheet/pwa",
          "label": "PWA Cheat Sheet"
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies",
        "Webinar",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 76
    },
    {
      "id": 114,
      "type": "Talk",
      "title": "Web Components als Frameworkersatz – das Frontend-Experiment",
      "date": "2020-04-16 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wenn ein Frontend im Web benötigt wird, ist die Wahl schnell auf die üblichen Verdächtigen eingegrenzt: Angular, React oder Blazor. Durch Web Components könnte sich das in Zukunft ändern. Christian Liebel von Thinktecture wagt einen Blick in die Glaskugel: Mit Web Components hat das Web ein Komponentenmodell erhalten, das kontinuierlich weiterentwickelt wird. Vielleicht braucht es in Zukunft nicht mehr für jeden Anwendungsfall zwingend ein schweres Framework. Anhand eines Experiments wird demonstriert, ob sich Frontends schon heute komplett mit Web Components statt Frameworks aufziehen lassen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-components-als-frameworkersatz-das-frontend-experiment",
          "label": ""
        },
        {
          "type": "Video",
          "url": "https://www.twitch.tv/videos/594354515?t=05h42m47s",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Components"
      ],
      "primaryTag": "Web Components",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 75
    },
    {
      "id": 113,
      "type": "Talk",
      "title": "Terraform Webinar",
      "date": "2020-04-16 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/terraform-webinar-azure-meetup-ffm",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform"
      ],
      "primaryTag": "Terraform",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 74
    },
    {
      "id": 112,
      "type": "Webinar",
      "title": "Infrastructure as Code mit Terraform",
      "date": "2020-04-14 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/terraform-webinar-april-2020",
          "label": "Sample Repository"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/thorstenhans/terraform-webinar",
          "label": "Slidedeck"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Infrastructure as Code",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 73
    },
    {
      "id": 110,
      "type": "Webinar",
      "title": "ASP.NET Core Blazor WebAssembly – Single-Page Applications mit C#",
      "date": "2020-04-01 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single-Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Webinar anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/asp-dot-net-core-blazor-webassembly-single-page-applications-mit-c-number",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/blazor-webassembly-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Components",
        "SPA",
        ".NET Core",
        "Web Technologies",
        "Blazor"
      ],
      "primaryTag": "Blazor",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 71
    },
    {
      "id": 108,
      "type": "Workshop",
      "title": "Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2020-02-28 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Push-Benachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-fur-moderne-cross-plattform-losungen",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pwapraxis/angular-demo",
          "label": "Angular-Projekt"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pwapraxis/server",
          "label": "Server"
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 101,
      "type": "Talk",
      "title": "Swagger & Co. im Praxiseinsatz für Tests und Clients",
      "date": "2020-02-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Als Entwickler wollen wir uns das Leben möglichst einfach machen. Und wenn wir eine Aufgabe vor uns haben, dann wollen wir auch möglichst viel damit erreichen. Nun haben wir ein ASP.NET-Core-Web-API gebaut, und es mit Hilfe von Swagger dokumentiert. Und nun? In dieser Session zeigt Ihnen Sebastian Gingter, wie man mit möglichst wenig Aufwand möglichst viel aus einer lebendigen Swagger-Dokumentation herausholen kann. Dabei erleben Sie auch, wie man von dort aus mit wenigen Schritten zu einer umfassenden End-to-End-Testsuite kommt. Und wenn wir schon dabei sind, dann schauen wir uns auch noch an, wie wir von der Dokumentation zu komplett funktionalen Clientbibliotheken kommen, ohne uns zu sehr anzustrengen: E2E-Web-APIs – jenseits von Hello World und mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-openapi",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-spring-2020-openapi",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Swagger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 107,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum?",
      "date": "2020-02-26 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum-42fa2c1b-346d-4e77-a03a-4b03036d9048",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-electron-cordova-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Cordova",
        "Electron",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 106,
      "type": "Talk",
      "title": "Progressive Web-Apps mit Angular: Tipps für Fortgeschrittene",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps sind ein plattformübergreifendes Anwendungsmodell, das auf Webtechnologien basiert. Auch Googles SPA Framework Angular enthält eine PWA-Unterstützung, die schnell angeschaltet ist. Doch damit geht die Arbeit erst richtig los: Christian Liebel zeigt Ihnen, wie Sie mit Angular App-Updates richtig kommunizieren, Cacheprobleme debuggen und den Anwender korrekt zum Abonnement von Push-Benachrichtigungen oder zum Installieren der App auffordern.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-tipps-fur-fortgeschrittene",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-advanced-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 104,
      "type": "Talk",
      "title": "Blazor: SPAs im Browser mit C# und WebAssembly",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs): bisher implementierte man sie vornehmlich mit JavaScript oder TypeScript, oft im Rahmen eines SPA Frameworks wie Angular oder React. Mittlerweile können nun durch den WebAssembly-Standard theoretisch beliebige Sprachen genutzt werden. Mit dem Blazor Framework auf Basis von WebAssembly hat das ASP.NET-Core-Team einen neuen Kandidaten am Start, um auch praktisch mit C# und .NET SPAs für den Browser realisieren zu können. Christian Weyer zeigt in diesem Vortrag anhand von Beispielen, wie Blazor tickt, wie man es sinnvoll einsetzen kann und wo aktuell die Grenzen liegen – je nach Anwendungsfall.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blazor-spas-im-browser-mit-c-number-und-webassembly",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "PWA",
        "Web Components",
        "Web Technologies",
        "SPA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 102,
      "type": "Talk",
      "title": "Web Components: native Komponenten fürs Web – das Ende der SPA Frameworks?",
      "date": "2020-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Komponenten – ein Begriff der uns Entwicklern sehr geläufig ist, egal ob als Windows-, Desktop- oder Webentwickler. Durch Kapselung von UI-Definition und Code-behind erhalten wir modulare und wiederverwendbare Bausteine zum Zusammensetzen der Oberfläche unserer Anwendung. Während wir damals im Web mit jQueryUI erste Komponenten entwickeln konnten, bedienen wir uns heute moderner Frameworks wie Angular, React oder Vue.js. Doch mit den Webstandards für HTML-Templates, Shadow DOM und Custom Elements erhalten wir die Möglichkeit, ein natives Komponentenmodell im Browser zu nutzen, gänzlich ohne Frameworks: Es leben die Web Components! In dieser Session klärt Manuel Rauber, wie Web Components funktionieren, wo die Vorteile und Nachteile liegen und ob wir heutzutage schon in der Lage sind, Single Page Applications zu entwickeln, die gänzlich ohne Frameworks auskommen. Sind Sie auch schon auf die Antworten gespannt?",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/web-components-native-komponenten-furs-web-das-ende-der-spa-frameworks",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-web-components/",
          "label": "Live Demo"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": "Chat Demo"
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net/",
          "label": "Chat Online Demo"
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Web Components",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 103,
      "type": "Talk",
      "title": "Pragmatische Microservices mit .NET Core (3) – mehr als nur gRPC",
      "date": "2020-02-24 21:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Microservices: ja! Oder eher doch nicht? Um diese Frage beantworten zu können, klärt Christian Weyer in diesem Vortrag, was Microservices sind, was sie nicht sind, wann man sie nutzt – und vor allem: wie man Microservices in der .NET-Welt implementieren kann. Sehen Sie Architekturansätze und Patterns in Aktion und erleben Sie Technologien wie Web-APIs, gRPC, Push Messaging, Background Workers und Co. im praktischen Einsatz mit .NET Core 3. Versuchen wir gemeinsam, langweilige Architekturthemen spannend zu machen – durch eine pragmatische Sichtweise.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pragmatic-microservices-dotnetcore",
          "label": ""
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-mit-net-core-3-mehr-als-nur-grpc",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Architecture",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 105,
      "type": "Workshop",
      "title": "Workshop - Blazor: Moderne Businessanwendungen mit C# & WebAssembly – Full-Stack- und Cross-Plattform",
      "date": "2020-02-24 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Web als Plattform und der Browser als Ausführungsumgebung haben vor vielen Jahren ihren Siegeszug als Basis für moderne Businessanwendungen angetreten. Mit dem WebAssembly-Standard kann ein Entwickler heute neben JavaScript und TypeScript auch andere nicht-webnativen Programmiersprachen und Frameworks nutzen, um Cross-Plattform-Lösungen für den Browser zu realisieren. In diesem Workshop widmet sich Christian Weyer dem clientseitigen Blazor Framework des ASP.NET-Core-Teams. Sehen Sie, wie man mit Blazor, C# und .NET webbasierte Single Page Applications (SPAs) baut und wie man mit einer passenden Anwendungsarchitektur über API und Push Services eine Full-Stack-Lösung mit C# implementiert. Auch weiterführende Konzepte wie Interoperabilität mit der Browser-P﻿lattform und Umsetzung von Progressive Web Apps (PWAs) werden thematisiert. Als Abrundung des Workshops soll auch ein Blick auf und ein Vergleich mit Server-side Blazor nicht fehlen, um einschätzen zu können, wann man was einsetzt – und wann nicht.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/workshop-blazor-moderne-businessanwendungen-mit-c-number-and-webassembly-full-stack-und-cross-plattform",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2020-blazor",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "SPA",
        "PWA",
        "Web Components",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 34
    },
    {
      "id": 100,
      "type": "Talk",
      "title": "Hot Topic: Dependency Injection",
      "date": "2020-02-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Dependency Injection (DI). By now, everyone should have heard about it.\nBut what actually is \"Dependency Injection\" and \"Inversion of Control\"?\nWe can find 'it' implemented in a lot of frameworks nowadays and for\nsomeone not familiar with the concept it might seem like magic.\nIn this session we are going to take a closer look behind the curtains\nof this software design principle and show what DI can do for us and how\na very simplistic version could be implemented in Javascript.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/yannickbaron/hot-topic-dependency-injection-lets-talk-about-it",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/dependency-injection-poc",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        13
      ],
      "tags": [
        "Angular",
        "Architecture",
        "Typescript"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 69
    },
    {
      "id": 99,
      "type": "Talk",
      "title": "Angular - BabylonJS Integration Deep Dive",
      "date": "2020-02-06 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "\"Angular - BabylonJS Integration Deep Dive\" - This talk demonstrates how Angular and BabylonJS can be integrated in detail, what key aspects are there, and gives an idea of what can be created with the demonstrated approach.\nYou will learn about the similarities and differences between Angular and BabylonJS, as well as an approach to create a future proof architecture that utilizes the best of both frameworks.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/maxoschulte/angular-babylonjs-integration-deep-dive",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-babylonjs-architecture",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://serverlessngbjsv2.z6.web.core.windows.net",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        12
      ],
      "tags": [
        "Angular",
        "Architecture",
        "BabylonJs",
        "Integration",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 67
    },
    {
      "id": 80,
      "type": "Talk",
      "title": "Web Components, ganz ohne Framework! Live & in Action ",
      "date": "2020-01-21 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Jeder kennt es: Kapselung und Wiederverwendung von UI-Komponenten im Web sind sehr mühsam. Meist ist es ein Zusammenkopieren von HTML, CSS und JavaScript, oftmals über eine oder mehrere Dateien verteilt. Vergisst man einen Teil, sieht es nicht wie gewünscht aus oder die Interaktion funktioniert nicht.\nDoch damit ist jetzt Schluss! Mit Web Components eröffnen sich neue Wege im Web, um UI-Komponenten standardisiert und ganz ohne Framework implementieren und verwenden zu können. In dieser Session zeigt Patrick Jahr die wichtigsten Punkte für die erste eigene Web Component mit den Standards HTML Templates, Custom Elements und Shadow DOM. Alles Live mit VSCode, Chrome und den DevTools – in Action!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/patrickjahr/web-component-ganz-ohne-framework-live-and-in-action-81b71392-fd8e-4d7f-b0d3-0a828673f7f1",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/rnjs-native-web-components",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        11
      ],
      "tags": [
        "JavaScript",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 51
    },
    {
      "id": 81,
      "type": "Workshop",
      "title": "Serverless-Architekturen für Java, .NET und node.js – mit Azure Functions & Co.",
      "date": "2019-12-10 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Egal ob Sie Java, .NET oder node.js als Haupttechnologie nutzen: mit Serverless-Ansätzen können Sie schnell \"Gummi auf die Straße\" bringen, um ihre Microservices oder Ihren \"Glue Code\" mir-nichts-dir-nichts entwickeln und bereitstellen zu können. In diesem Workshop sehen Sie Azure Serverless-Dienste ohne großes Marketing-Tamtam im Einsatz. Neben den Grundlagen werden vor allem typische Anwendungsszenarien für Azure Functions, Azure Service Bus, Azure Storage und Co. illustriert. Lehnen Sie sich also zurück und sehen Sie Serverless in Action, mit Java, .NET und JavaScript.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-fur-java-net-und-node-dot-js-mit-azure-functions-and-co",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure Functions",
        "Serverless",
        "Microservices",
        ".NET Core",
        "Azure",
        "Java",
        "JavaScript"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 41
    },
    {
      "id": 76,
      "type": "Workshop",
      "title": "Offline-First: Architektur-Patterns & Implementierung für APIs & Backends",
      "date": "2019-12-10 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\"Keine Internetverbindung\" – ein Satz, den wir alle aus vielen Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form eines HTTP APIs. Wie man sein Backend um eine offline-fähige Architektur erweitert, um es bspw. von einer SPA/PWA nutzen zu können, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Workshop. Denn bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Allgemein werden Themen im API Design, u.a. Synchronisationsstrategien von Anwendungs- und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur – sowohl für neue als auch bestehende Anwendungen – diskutiert. Am Beispiel einer PWA mit einem Backend in Java als auch in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns gezeigt.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/offline-first-architektur-patterns-and-implementierung-fur-apis-and-backends",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-boardist-offline.azurewebsites.net/",
          "label": ""
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-boardist.azurewebsites.net/games",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 41
    },
    {
      "id": 50,
      "type": "Talk",
      "title": "Entity Framework Core - Performanzoptimierung",
      "date": "2019-12-09 10:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Entity Framework hat Microsoft vor Jahren einen Objekt-Relationalen-Mapper geschaffen, welcher sich in der .NET-Welt mittlerweile einer großen Beliebtheit erfreut. Der O/R-Mapper ermöglicht es, ohne SQL-Kenntnisse auf eine Datenbank sowohl lesend als auch schreibend zuzugreifen. Doch hier verbergen sich Risiken, denn ein O/R-Mapper erweckt den Eindruck, dass der Anwendungsentwickler sich nie wieder mit SQL zu befassen braucht - was für 80% der Abfragen in einer Anwendung auch stimmen mag. Die restlichen 20% können allerdings die gesamte Applikation durch sehr schlechte Antwortzeiten beinah unbenutzbar machen. Die unperformanten SQL-Abfragen sind jedoch nicht die einzige Quelle welche die Benutzbarkeit in Mitleidenschaft ziehen. Es spielt auch eine Rolle wie genau Entity Framework im Code verwendet wird. Nicht selten wird die Tatsache vergessen, dass die LINQ-Abfragen am Ende nicht im Arbeitsspeicher, sondern durch die Datenbank ausgeführt werden – mehr oder weniger „transparent“. In ersten Teil des Vortrags wird gezeigt auf was geachtet werden sollte, um die häufigsten Stolperfallen bei der Verwendung von Entity Framework Core zu vermeiden. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden die Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/it-tage-2019-entity-framework-core-performanzoptimierung",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Execution Plan",
        "MS SQL Server",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 52
    },
    {
      "id": 64,
      "type": "Talk",
      "title": "Progressive Web Apps: Cross-Plattform-Apps über iOS und macOS hinaus",
      "date": "2019-12-04 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\nStellen Sie sich vor, Sie schreiben Ihre App einmal – und sie läuft nicht nur auf macOS und iOS, sondern auch noch auf Windows, Android, Linux, Chrome, Safari, Firefox und Edge! Der alte Java-Traum \"Write once, run anywhere\" wird mit den Progressive Web Apps endlich Wirklichkeit. Christian Liebel stellt Ihnen das neue Anwendungsmodell abseits des App Store einschließlich seiner technologischen Grundlagen vor, und zeigt, was es leisten kann und wo die Grenzen der PWA liegen.",
      "media": [
        {
          "type": "Related Link",
          "url": "https://heise-macdev.de/lecture.php?id=9471&source=0",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-cross-plattform-apps-uber-ios-und-macos-hinaus",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 29
    },
    {
      "id": 74,
      "type": "Talk",
      "title": "“Alles C#, oder was?\" Cross-Plattform Web-Anwendungen mit ASP.NET Core Blazor",
      "date": "2019-11-26 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Single Page Applications (SPAs) schreibt man mit JavaScript, vielleicht auch mit TypeScript - is' so! Mit ASP.NET Core Blazor zeichnet sich eine mögliche Alternative für .NET-Entwickler ab. Auf Basis des Web-Standards Web Assembly stellt es Tooling und eine Runtime zur Verfügung, über die man SPAs mit C# entwickeln kann. In dieser Session zeigt .NET- und Web-Veteran Christian Weyer anhand praktischer Beispiele was mit Blazor bereits in einer frühen Vorab-Version möglich ist, vor allem hinsichtlich \"Full Stack\"-Programmierung für End-to-End Web-Anwendungen. Als Abrundung beleuchtet er neben den Möglichkeiten auch die Grenzen des Blazor-Ansatzes und vergleicht ihn mit den bislang üblichen Herangehensweisen - pragmatisch und realitätsnah.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/alles-c-number-oder-was-cross-plattform-web-anwendungen-mit-asp-dot-net-core-blazor",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "PWA",
        "Web Technologies",
        "WebAssembly"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 51,
      "type": "Talk",
      "title": "Entity Framework Core - Performanzoptimierung",
      "date": "2019-11-26 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Entity Framework hat Microsoft vor Jahren einen Objekt-Relationalen-Mapper geschaffen, welcher sich in der .NET-Welt mittlerweile einer großen Beliebtheit erfreut. Der O/R-Mapper ermöglicht es, ohne SQL-Kenntnisse auf eine Datenbank sowohl lesend als auch schreibend zuzugreifen. Doch hier verbergen sich Risiken, denn ein O/R-Mapper erweckt den Eindruck, dass der Anwendungsentwickler sich nie wieder mit SQL zu befassen braucht - was für 80% der Abfragen in einer Anwendung auch stimmen mag. Die restlichen 20% können allerdings die gesamte Applikation durch sehr schlechte Antwortzeiten beinah unbenutzbar machen. Die unperformanten SQL-Abfragen sind jedoch nicht die einzige Quelle welche die Benutzbarkeit in Mitleidenschaft ziehen. Es spielt auch eine Rolle wie genau Entity Framework im Code verwendet wird. Nicht selten wird die Tatsache vergessen, dass die LINQ-Abfragen am Ende nicht im Arbeitsspeicher, sondern durch die Datenbank ausgeführt werden – mehr oder weniger „transparent“. In ersten Teil des Vortrags wird gezeigt auf was geachtet werden sollte, um die häufigsten Stolperfallen bei der Verwendung von Entity Framework Core zu vermeiden. Im zweiten Teil geht es darum, die generierten SQL-Abfragen zu verstehen, denn nur so kann das Problem erkannt und gelöst werden. Das wichtigste Mittel hierfür werden die Ausführungspläne sein.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/ddc-2019-entity-framework-core-performance-optimization",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        ".NET Core",
        "Entity Framework Core",
        "Performance",
        "MS SQL Server",
        "Execution Plan"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 63,
      "type": "Workshop",
      "title": "Progressive Web Apps für .NET-Entwickler: Frontend der Zukunft",
      "date": "2019-11-25 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET Core eignet sich hervorragend zur Implementierung plattformübergreifender Konsolenanwendungen und Backends. Zuletzt haben nun auch wieder Frontendtechnologien in .NET Core Einzug erhalten. Doch Windows Forms und WPF sind nicht plattformübergreifend einsetzbar. Progressive Web Apps (PWA) hingegen laufen auf allen nennenswerten Mobil- und Desktopplattformen sowie in jedem Browser und bieten sich somit als zukunftssichere Frontendplattform an. Frameworks wie Angular bringen Architekturkonzepte ins Web, die Sie von WPF/XAML schon kennen. Insgesamt eignen sich PWA hervorragend als Frontend für Ihre in .NET Core geschriebene Webschnittstelle. Christian Liebel stellt Ihnen die PWA-Basics vor und zeigt, wie Sie mit einem in .NET Core geschriebenen Backend kommunizieren können.",
      "media": [
        {
          "type": "Related Link",
          "url": "https://www.dotnet-developer-conference.de/programm/#/talk/progressive-web-apps-fur-net-entwickler-frontend-der-zukunft",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-fur-net-entwickler-frontend-der-zukunft",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 25
    },
    {
      "id": 61,
      "type": "Talk",
      "title": "Blockchain als Architektur-Komponente – Fluch oder Segen? ",
      "date": "2019-11-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit dem Start der Bitcoin Blockchain im Jahr 2009 wurde der Welt eine verteilte Datenbank zugänglich, bei der nur im Konsens der Teilnehmer über den aktuellen Zustand bestimmt werden kann. Während der Use-Case einer unabhängigen Währung leicht zu greifen ist, fällt es uns bisweilen schwer, die Charakteristiken von Blockchains sinnvoll auf andere Anwendungen zu übertragen. In diesem Talk werden Sie lernen, welche Features die Blockchain einzigartig machen und unter welchen Umständen Sie davon profitieren können - aber auch wann Sie davon absehen sollten. Dieses Wissen wird Patrick Stürmlinger mit Ihnen anhand eines real existierenden Projekts zur Sicherung von Dokumentenarchiven anwenden und vertiefen.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        9
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 23
    },
    {
      "id": 72,
      "type": "Talk",
      "title": "WebComponents: Native Komponenten fürs Web – mal ohne Framework?",
      "date": "2019-11-18 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Die Begriffe UI-Komponenten oder Controls kennen wir Entwickler seit \"Ewigkeiten\". Durch Kapselung erhalten wir modulare und wiederverwendbare Baukastenelemente, aus denen unsere UI-Anwendungen zusammengesetzt werden. Bisher mussten wir uns im Web eines SPA Frameworks bedienen. Ob Angular, React, Vue.js oder Polymer. Doch keines dieser Frameworks wollte oder konnte so recht mit dem anderen zusammenarbeiten. Dies könnte sich in Zukunft ändern mit WebComponents. Diese beschreiben anhand von Standards wie CustomElements ein Komponentenmodell für das Web und bietet damit erstmal die Möglichkeit, native Komponenten im Browser gänzlich ohne ein Framework oder aber über Framework-Grenzen hinweg einzusetzen. In dieser Session klärt Manuel Rauber wie WebComponents funktionieren, wo die Vorteile und Nachteile liegen – und, vermutlich am spannendsten: er geht der Frage in gewohnt praktischer Manier nach, ob WebComponents mit aktuellen Single-Page Application (SPA) Frameworks wie Angular oder React genutzt und erstellt werden können. Abgerundet wird das Ganze mit einem Ausblick, wie wir künftig Web-Anwendungen mit Web Components entwickeln könnten. Auf zum nächsten Schritt!",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": "https://github.com/thinktecture-labs/web-components-chat"
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-mal-ohne-framework?slide=2",
          "label": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-mal-ohne-framework?slide=2"
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net",
          "label": "https://tt-web-components-chat-ng.azurewebsites.net"
        }
      ],
      "previewSrc": "",
      "speaker": [
        1
      ],
      "tags": [
        "Angular",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 23
    },
    {
      "id": 62,
      "type": "Talk",
      "title": "Too many challenges, so little time – How can blockchain integration succeed without an army of engineers?",
      "date": "2019-11-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "For a long time, neither politics nor business took the issue of Blockchain seriously. Today, every larger company develops at least proof of concepts, while Blockchain initiatives are proclaimed. However, feasibility quickly reaches its limits when it comes to transforming a PoC into a product. The rapid development of the space, even by IT standards, and a simultaneous lack of Blockchain experts slows down many projects. In this talk, Patrick Stürmlinger points out the difficulties of integration and introduces you to the concept of a Blockchain gateway (including an exemplary implementation), which solves the biggest integration problems such as the different functionality of the different Blockchains, the predictability of costs and the handling of mini-forks. ",
      "media": [],
      "previewSrc": "",
      "speaker": [
        9
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 4
    },
    {
      "id": 67,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-11-09 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, you’ll get to know common performance pitfalls in Angular applications and learn how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Related Link",
          "url": "http://www.devfestka.de/programm",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-9422e7d0-1204-4577-bd57-e6d318cd6c57",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 30
    },
    {
      "id": 65,
      "type": "Talk",
      "title": " PWA Update 2019: Modern Web APIs for even better Progressive Web Apps",
      "date": "2019-11-08 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "PWA is a great application model: These cross-platform, web-based apps work offline, can show push notifications and run in an own window (desktop) or standalone (mobile). Google’s Project Fugu will bring even more native functionality to the web, such as notification badges, wake locks and native file system access. Thinktecture’s Christian Liebel, GDE for Web Technologies, shows you how those APIs will pave the way for an even brighter future for Progressive Web Apps.",
      "media": [
        {
          "type": "Related Link",
          "url": "http://www.devfestka.de/programm",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-2019-modern-web-apis-for-even-better-progressive-web-apps",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Project Fugu",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 30
    },
    {
      "id": 66,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-getriebene Microservices mit Azure Functions & Co. – auch für Java-Entwickler",
      "date": "2019-11-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Warum muss es \"Serverless oder Microservices\" sein? Es sollte vielmehr \"Microservices mit Serverless\" heißen! Basierend auf einigen der allgemein anerkannten Prinzipien von Microservices können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen - nennen wir sie mal Nanoservices. Christian Weyer zeigt Ihnen einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Diensten & Tools. Erleben Sie Serverless Azure mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier in Aktion - jenseits der typischen Functions-as-a-Service-Beispiele.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-getriebene-microservices-mit-azure-functions-and-co-auch-fur-java-entwickler-1231a20a-87da-4e62-af77-74ee9f8279da",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 32
    },
    {
      "id": 60,
      "type": "Talk",
      "title": "Advanced Progressive Web Apps: Push notifications under control",
      "date": "2019-10-21 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, Progressive Web Apps (PWA) are one of the hottest topics on the web today. A PWA should feel like a real app, including the ability to show push notifications. In this talk, Thinktecture’s Christian Liebel (@christianliebel) will show you how to implement push messaging in your PWA or website using the Push API, including a look at helpful libraries and third-party services. As a part of Google’s Project Fugu, push notifications will get even better thanks to the advent of the Badging API and Notification Triggers.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/advanced-progressive-web-apps-push-notifications-under-control-81c57f71-2200-4494-b14c-8a03c45697e6",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://javascript-conference.com/web-development-architecture/advanced-progressive-web-apps-push-notifications-under-control/",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ijs-munich-2019-push",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=fKDdulqFGSU",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 6
    },
    {
      "id": 59,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-10-19 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, we’ll have a look at common performance pitfalls in Angular applications and how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone, lazy loading, server-side rendering and Service Worker support. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Related Link",
          "url": "https://codecamp.ro/timisoara#agenda",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-f862942b-25a1-4a41-a82c-7df93c77c505",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 28
    },
    {
      "id": 58,
      "type": "Keynote",
      "title": "The Web in 2020: wohin sich das Web bewegt",
      "date": "2019-10-15 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Einmal im Jahr trifft sich das World Wide Web Consortium (W3C) zur Meetingwoche. Christian Liebel von Thinktecture war beim diesjährigen Treffen der Arbeitsgruppen in Japan dabei und hat die neuesten Informationen im Gepäck: Welche Spezifikationen gerade im Gespräch sind – welche neuen Schnittstellen das Web bekommen soll – und was das für Webanwendungen im Jahr 2020 heißen könnte.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/the-web-in-2020-wohin-sich-das-web-bewegt",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://www.web-developer-conference.de/programm/#/talk/keynote-tba",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 27
    },
    {
      "id": 57,
      "type": "Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2019-10-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo-2dfd9043-3590-4810-9621-64e02eadb77c",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://liebel.io/ngp19h",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 71,
      "type": "Workshop",
      "title": "Immer & überall: Offlinefähige Progressive Web Apps – am Beispiel Angular",
      "date": "2019-10-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "“Keine Internetverbindung” – ein Satz, den wir alle aus genutzten Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form einer Web API. Bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Gerade in der heutigen Zeit, in der Menschen immer mobiler werden, in Autos, Zügen und Flugzeugen unterwegs sind und arbeiten, benötigt man oftmals offline Zugriff auf die Anwendungsdaten. Wie man diese echt offline-fähigen Single-Page Applications/Progressive Web Apps realisiert, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Ganztagesworkshop. Allgemein werden Themen wie Synchronisationsstrategien von Anwendungsdaten und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur sowohl für neue als auch bestehende Anwendungen diskutiert. Am Beispiel einer Angular-basierten App mit einem exemplarischen Backend in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns implementiert.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/immer-and-uberall-offlinefahige-progressive-web-apps-am-beispiel-angular",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 70,
      "type": "Workshop",
      "title": "WebComponents: Native Komponenten fürs Web - ohne und mit Frameworks",
      "date": "2019-10-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Der aktuelle Single-Page Application und der frühere Windows-Entwickler kennt sie seit „Ewigkeiten”: UI-Komponenten, oder Controls. Durch Kapselung erhalten wir modulare und wiederverwendbare Baukastenelemente, aus denen unsere UI-Anwendungen zusammengesetzt werden. Bisher mussten wir uns im Web eines SPA Frameworks bedienen – ob Angular, ReactJS, Vue.js oder Polymer. Doch keines dieser Frameworks wollte oder konnte so recht mit dem anderen zusammenarbeiten. Dies könnte sich in Zukunft ändern mit WebComponents. Diese beschreiben anhand von Standards wie CustomElements ein Komponentenmodell für das Web und bietet damit erstmal die Möglichkeit, native Komponenten im Browser gänzlich ohne ein Framework oder aber über Framework-Grenzen hinweg einzusetzen. \nIn dieser Session klären Manuel Rauber und Patrick Jahr wie WebComponents funktionieren, wo die Vorteile und Nachteile liegen – und, vermutlich am spannendsten: sie gehen der Frage in gewohnt praktischer Manier nach, ob WebComponents mit aktuellen Single-Page Application (SPA) Frameworks wie Angular genutzt und erstellt werden können und welche Rolle Ivy dabei spielt. Abgerundet wird das Ganze mit einem Ausblick, wie wir künftig Web-Anwendungen mit Web Components entwickeln könnten. Auf zum nächsten Schritt!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/webcomponents-native-komponenten-furs-web-ohne-und-mit-frameworks",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angular-days-2019-fall-web-components",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture-labs/web-components-chat",
          "label": null
        },
        {
          "type": "Online-Demo",
          "url": "https://tt-web-components-chat-ng.azurewebsites.net",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        11,
        1
      ],
      "tags": [
        "Angular",
        "Web Components"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 56,
      "type": "Workshop",
      "title": "Robuste Design Systems mit Storybook und Angular: vom Konzept zur lebendigen Anwendung",
      "date": "2019-10-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Mit den stetig wachsenden Möglichkeiten, die Cross-Platform-Anwendungen bieten, wachsen auch die Anforderungen an deren Design. Skalierbarkeit, Flexibilität und Wandelbarkeit gehören zu den Grundprinzipien eines modernen User-Interfaces. Andreas Wissel und Christian Liebel erarbeiten mit Ihnen in diesem Workshop anhand von Praxisbeispielen einen robusten Workflow. Mit Storybook und Angular lassen sich so isolierte, test- und wartbare Komponenten im Handumdrehen umsetzen. Ihre Designer und Entwickler werden es lieben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/robuste-design-systems-mit-storybook-und-angular-vom-konzept-zur-lebendigen-anwendung?slide=34",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://bit.ly/ng-ds",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 26
    },
    {
      "id": 55,
      "type": "Workshop",
      "title": "Hands-on Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2019-09-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-moderne-cross-plattform-losungen",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/html5-javascript/cross-plattform-workshop/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 54,
      "type": "Talk",
      "title": "Electron, Cordova, PWA – was, wann, wie und warum",
      "date": "2019-09-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Write once, run anywhere – dieser alte Java-Traum ist dank Webtechnologien längst Realität geworden. Neuerdings haben Cross-Platform-Entwickler aber die Wahl zwischen altbewährten Ansätzen wie Apache Cordova und GitHub Electron, bei denen Web-Apps in native Container verpackt werden, und den neuen Progressive Web Apps (PWA), bei denen eine Webanwendung aus dem Browser heraus installiert wird. Optisch geben sich beide Methoden nicht viel, doch sie unterscheiden sich hinsichtlich der Verteilung und im Funktionsumfang. Electron-Experte Thorsten Hans und PWA-Professional Christian Liebel erklären Ihnen, für welche Anwendungsfälle sich PWAs eignen und wann Sie ergänzend oder alternativ zu Electron oder Cordova greifen sollten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/electron-cordova-pwa-was-wann-wie-und-warum",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-2019-electron-cordova-pwa",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/web-development/electron-cordova-pwa-was-wann-wie-und-warum/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 49,
      "type": "Talk",
      "title": "Advanced ASP.NET Core Web APIs: testen und dokumentieren – aber richtig!",
      "date": "2019-09-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Jeder baut Web-APIs, oder? Leider ist es nicht damit getan, ein neues Projekt zu erzeugen, ein paar Controller zu implementieren und dann sein Web-API zu deployen. Zum einen sollte es vernünftig dokumentiert werden, damit die Entwickler, die mit unserem API arbeiten müssen, auch wissen, was es kann und wie es funktioniert. Zum anderen sollten wir selber auch sicherstellen, dass unser API das tut, was es soll. In dieser Session zeigt Ihnen Sebastian Gingter, wie man diese beiden Fliegen mit einer Klappe schlagen kann. Mit Hilfe von Open API/Swagger erzeugen wir erst eine umfassende, ständig aktuelle und lebendige Dokumentation unseres APIs. Im zweiten Schritt generieren wir aus dieser Dokumentation auch gleich Tests für das API-Test-Tool Postman, die wir dann mit etwas JavaScript Testcode anreichern und diese sogar als automatisierte Integrationstests laufen lassen können. Web-APIs jenseits von Hello World, mit viel Projekterfahrung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/basta-fall-2019-openapi",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=8bU6O_fMr5U",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-fall-2019-openapi",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 73,
      "type": "Talk",
      "title": "Blockchain für Architekten und Entwickler – was steckt wirklich dahinter?",
      "date": "2019-09-23 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "In wenigen Jahren werden wir Blockchains so selbstverständlich nutzen wie heute Datenbanken – und das nicht wegen seltsamer Kryptowährungen, die bereits heute schon mehr an Tulpenkrise als an seriöses Software-Engineering denken lassen. In dieser Session präsentiert Ingo Rammer die konkreten technischen Motivationen, Hintergründe und Zusammenhänge, die den Hype überstehen werden. Sie lernen die fundamentalen Elemente, Arten und Betriebsmodi von öffentlichen und privaten Blockchains kennen und werden wissen, warum Smart Contracts weder „smart“ noch „Verträge“, sondern einfach Regeln zur Prüfung von replizierten Transaktionen sind. Nach diesem Vortrag haben Sie eine solide Basis, um zu beurteilen, ob – und wenn ja, in welchen Bereichen – Ihre Anwendungsfälle von der Nutzung von Blockchain-Technologien profitieren könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/blockchain-fur-architekten-und-entwickler-was-steckt-wirklich-dahinter-8ed00546-c53f-431a-ac74-dc26fe2956d6",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=brw9SHxPcYM",
          "label": null
        },
        {
          "type": "Slides-Originalformat",
          "url": "https://thinktecture2com.sharepoint.com/:p:/s/prj-conferences/ERwa_ZzYxC5KgC6tvvbWtFIB3vgmaUigt9mlfaATtbMllQ?e=c1LPgw",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 53,
      "type": "Talk",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2019-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen am Beispiel einer in Angular geschriebenen Anwendung die Mechanik hinter dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.\n\nDieser Talk richtet sich an Entwickler, die grob wissen, um was es bei Progressive Web Apps geht. In diesem Track gibt es auch den passenden Grundlagenvortrag („Progressive Enhancement im Web: PWA-Grundlagen“), der Ihnen dieses Verständnis vermittelt. Bitte nehmen Sie ein Smartphone mit, um ggf. die Demoanwendung auf dem eigenen Gerät ausprobieren zu können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff-82e2dd43-1bc2-49cc-bdbc-30c1e618ba22",
          "label": null
        },
        {
          "type": "Related Link",
          "url": "https://basta.net/web-development/pwa-deep-dive-offline-anwendungen-im-griff/",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 125,
      "type": "Workshop",
      "title": "Moderne Businessanwendungen mit Angular, .NET Core und Azure – Weitblick für Backend- und Frontend-Entwickler",
      "date": "2019-09-23 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Alle reden darüber: Mobile-Apps, Webtechnologien und Cloud. Die Welt besteht nicht mehr nur aus Windows allein und Ihr Job als Entwickler ändert sich. In diesem Workshop zeigen Thorsten Hans und Boris Wilhelms interessierten .NET-Entwicklern, welche architekturellen Ideen und Konzepte hinter modernen Businessanwendungen auf Basis von .NET Core, Azure Functions, Angular und TypeScript stecken.\n\nLernen Sie praktische Lösungen für eine Reihe diverser Problem- und Fragestellungen kennen. Wie kann man geräte- und plattformübergreifend Businessanwendungen mit Angular bauen? Wie kann man dies für Windows, iOS, Android und fürs Web gleichermaßen realisieren? Wie können diese Anwendungen Daten und Anwendungslogik mit Hilfe Service-basierter Architekturen nutzen? Dieser Workshop liefert Antworten auf all diese interessanten Fragen. Moderne Businessanwendungen mit Angular, Cordova, Electron, .NET Core und Azure – in Action!",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4,
        14
      ],
      "tags": [
        "Angular",
        ".NET Core",
        "Azure Functions",
        "Azure",
        "Electron",
        "Serverless",
        "SPA",
        "Cordova",
        "Architecture"
      ],
      "primaryTag": "Architecture",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 22
    },
    {
      "id": 52,
      "type": "Talk",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-08-29 18:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, you’ll get to know common performance pitfalls in Angular applications and learn how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone. Let’s make your Angular app blazing fast!",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/ngde2019-perf",
          "label": null
        },
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light-e85cc65c-9ba7-4300-b10f-526ad3ba2ecd",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=moUCZoJfhwY",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "Performance"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 24
    },
    {
      "id": 46,
      "type": "Workshop",
      "title": "Angular Performance: Your App at the Speed of Light",
      "date": "2019-07-03 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "In this talk, we’ll have a look at common performance pitfalls in Angular applications and how to avoid them. We’ll have a look at different change detection strategies and ChangeDetectorRef, Zone.js and NgZone, lazy loading, server-side rendering and Service Worker support. Let’s make your Angular app blazing fast!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-your-app-at-the-speed-of-light",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://youtu.be/SY7-8JJAtGM",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 30,
      "type": "Talk",
      "title": "Mehr als nur HTTP-APIs: Pragmatische Serverless Backends mit JavaScript / TypeScript und Azure Functions",
      "date": "2019-06-27 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Serverless ist in aller Munde und so gut wie jede JavaScript-basierte Anwendung braucht irgendeine Art von Backend. Warum also nicht die beiden Ideen vereinen? In dieser Session zeigt Christian anhand von Azure Functions, wie man mit TypeScript effizient eigene HTTP APIs baut, ohne großes Infrastruktur-Tamtam. \nAber damit nicht genug: Basierend auf allgemein anerkannten Prinzipien können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen. Sieh dafür einen pragmatischen Ansatz mit Functions, Service Bus und weiteren Azure-Cloud-Diensten sowie Tools. Eben mehr als nur HTTP-APIs.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/typescript-und-azure-functions",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Serverless",
        "Azure Functions",
        "Typescript",
        "JavaScript",
        "Azure"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 15
    },
    {
      "id": 44,
      "type": "Talk",
      "title": "PWA-Update: Neue Webschnittstellen für noch bessere Progressive Web Apps",
      "date": "2019-06-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps funktionieren offline, können Pushbenachrichtigungen darstellen und laufen auf jeder Plattform von Android über Firefox bis Windows. Außerdem können Entwickler auf alle Funktionen zugreifen, für die es eine Webschnittstelle gibt. In der Vergangenheit waren dies etwa Gamepads oder der Standort des Anwenders. Mit neuen Webschnittstellen will das World Wide Web Consortium (W3C) die Lücke zwischen nativen Apps und PWA weiter schließen: Mithilfe der Writable Files API sollen PWA auf einen Teilbereich des nativen Dateisystems zugreifen können, die Badging API erlaubt das Setzen von Notification-Badges und die Shape Detection API erlaubt das Erkennen von Barcodes, Gesichtern oder Text in Bildern. Christian Liebel zeigt Ihnen brandheiße Web-APIs, die Progressive Web Apps noch mächtiger machen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-neue-webschnittstellen-fur-noch-bessere-progressive-web-apps-6e9b8f36-27c0-4835-afd0-a4f135364c48",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 21
    },
    {
      "id": 45,
      "type": "Talk",
      "title": "Web-Payments neu gedacht: Abrechnen mit der Payment Request API",
      "date": "2019-06-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Anbieter von Onlineshops, Abodiensten oder Progressive Web Apps kennen das Problem: Sobald Zahlungen vom Nutzer angefordert werden sollen, wird die Sache komplex. Anwender müssen die immerselben Daten in vor allem mobil schwer zu bedienende Formulare eintragen und eventuell wird der Bedienfluss durch eine Weiterleitung zu einem externen Zahlungsdienstleister unterbrochen. Wäre es nicht schön, wenn der Webbrowser die Anwenderdaten vorausfüllen und der Nutzer auf komfortable Methoden wie Apple Pay oder Google Pay zurückgreifen könnte? Die Payment Request API bringt genau diese Features in Web. Christian Liebel von Thinktecture zeigt Ihnen, wofür sich diese plattformübergreifend einsetzbare Webschnittstelle eignet und wo ihre Grenzen liegen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/web-payments-neu-gedacht-abrechnen-mit-der-payment-request-api",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 21
    },
    {
      "id": 29,
      "type": "Workshop",
      "title": "Azure in Action: Pragmatische Cloud-Lösungen mit Containern & Serverless",
      "date": "2019-06-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "IDE öffnen, „File – New Project – Cloud“, OK klicken und fertig. Oder? Nun, nicht ganz. Denn egal ob AWS, GCP oder eben Azure: am Ende des Tages werden Sie sich fragen, warum, wann und wie gehe ich in die Cloud? Genau diese Fragestellungen wollen Thorsten Hans und Christian Weyer für Java-, node.js- und .NET-Entwickler in diesem Workshop beantworten. Anhand diverser Use Cases werden mögliche Wege mit, über und in Azure diskutiert. Was bedeuten Architekturansätze wie Cloud-Native Microservices und Serverless Microservices? Wie gehe ich bei Brownfield-Projekten vor und wie kann ich Greenfield-Lösungen effizient in Azure realisieren? Wo liegen Unterschiede und Benefits von datengetriebenen und von ereignisgetriebenen Ansätzen? Wie kann ich mit dem Sammelsurium an Patterns, Technologien und Tools in Azure kosteneffektiv hantieren und dennoch flexibel sein? All dies werden wir anhand praktischer Beispiele und pragmatischer Lösungen in interaktiver Art und Weise adressieren. Sehen Sie PaaS, Web Apps, Containers, Orchestrators, Serverless, Functions & Co. mit der Azure-Cloud anhand von .NET-Demos in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/azure-in-action-pragmatische-cloud-losungen-mit-containern-and-serverless-1e2ffa1a-2a42-4355-8c53-3676a71176ff",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/azure-functions-extensibility",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/aks-demo-app",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices",
        "Serverless",
        "Containers",
        "Kubernetes",
        "AKS",
        "Azure Functions"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 14
    },
    {
      "id": 48,
      "type": "Workshop",
      "title": "Einmal API mit allem, bitte: ASP.NET Core MVC und SignalR in Action!",
      "date": "2019-06-19 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne APIs können so viel mehr als nur gängige HTTPS-Endpunkte bereitzustellen: Zum einen die Möglichkeit zur (optionalen) Echtzeitkommunikation auf Basis von WebSockets. Mit Hilfe von Microsofts Open-Source-Plattform ASP.NET Core MVC und SignalR lassen sich im Handumdrehen Web-APIs und Push Services entwickeln. Doch damit nicht genug: Weitere Themen wie Security, Rate Limiting, eine sinnvolle Dokumentation und ein vernünftiges, zentralisiertes Logging sind mit von der Partie. Und jeder dieser einzelnen Bereiche bietet uns eine neue Herausforderung.\n\nSebastian Gingter und Manuel Rauber zeigen Ihnen in diesem Workshop, wie man mit .NET Core moderne APIs auf und für verschiedene Plattformen entwickeln kann. Zusätzlich wird durch den Einsatz von Entity Framework Core die Anbindung an unterschiedliche Datenbanken ermöglicht. Durch den Einsatz weiterer Open-Source-Bibliotheken für Logging oder zur automatischen Generierung einer Swagger/OpenAPI-Dokumentation ergänzen wir das API um weitere Funktionalitäten. Eine Clientanwendung, das Deployment auf unterschiedliche Plattformen und das Deployment in die Cloud runden den Workshop ab – vollständig End-to-end und einmal mit allem eben!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/einmal-api-mit-allem-bitte-asp-dot-net-core-mvc-und-signalr-in-action-164d1e3e-189b-4b6a-95a3-33003e3f3f05",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-ms-summit-spring-2019-services-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        1
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 14
    },
    {
      "id": 43,
      "type": "Workshop",
      "title": "Progressive Web Apps for PHP Developers in action!",
      "date": "2019-06-05 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Progressive Web Apps work anywhere from iOS to Windows, run offline and can make use of native functionality such as camera access or geolocation. Thinktecture’s Christian Liebel shows you the technological foundations of this very promising application model—in action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-for-php-developers-in-action",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 20
    },
    {
      "id": 42,
      "type": "Talk",
      "title": "Progressive Web Apps for .NET Developers: An Overview",
      "date": "2019-05-28 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps work anywhere from iOS to Windows, run offline and can make use of native functionality such as camera access or geolocation. Thinktecture’s Christian Liebel shows you the technological foundations of this very promising application model, demonstrates how your PWAs can integrate with the Windows Runtime and what the new Chromium-based Edge means for Progressive Web Apps.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-for-net-developers-an-overview",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 19
    },
    {
      "id": 82,
      "type": "Talk",
      "title": "Advanced Azure Functions – beyond HTTP GET /helloworld",
      "date": "2019-05-27 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Azure Functions enable to swiftly create serverless applications & services. But in practice, we soon face situations where the simple Hello-World-ish approaches do no longer suffice. In this talk, Christian Weyer shows you how to use Microsoft's Functions-as-a-Service (FaaS) platform to realize scenarios beyond the usual static triggers & bindings, like HTTP. He illustrates how you can secure your functions, create your own custom extensions, use dynamic bindings to implement tricky use cases. Hosting Azure Functions is also discussed because it is not always possible to use the public Cloud as-is. Come and see Azure Functions with C # in action - beyond Hello World.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/helloworld",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Azure Functions",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 19
    },
    {
      "id": 27,
      "type": "Talk",
      "title": "Angewandte Serverless Microservices mit Azure Functions & Co.",
      "date": "2019-05-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Warum muss es \"Serverless oder Microservices\" sein? Es sollte vielmehr \"Microservices mit Serverless\" heißen! Basierend auf einigen der allgemein anerkannten Prinzipien von Microservices können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices zu erstellen - nennen wir sie mal Nanoservices. Christian Weyer zeigt Ihnen einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Diensten & Tools. Erleben Sie Serverless Azure mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier in Aktion - jenseits der typischen Functions-as-a-Service-Beispiele.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/angewandte-serverless-microservices-mit-azure-functions-and-co",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 12
    },
    {
      "id": 41,
      "type": "Talk",
      "title": "Advanced Progressive Web Apps: Push notifications under control",
      "date": "2019-05-13 22:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, Progressive Web Apps (PWA) are one of the hottest topics on the web today. A PWA should feel like a real app, including the ability to show push notifications. In this talk, Thinktecture’s Christian Liebel (@christianliebel) will show you how to implement push messaging in your PWA or website using the Push API, including a look at helpful libraries and third-party services. As a part of Google’s Project Fugu, push notifications will get even better thanks to the advent of the Badging API and Notification Triggers.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/advanced-progressive-web-apps-push-notifications-under-control-61ddbb4e-026d-4beb-a251-eaeea2ab1730",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 18
    },
    {
      "id": 40,
      "type": "Talk",
      "title": "PWA-Update: Neue Webschnittstellen für noch bessere Progressive Web Apps",
      "date": "2019-05-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps funktionieren offline, können Pushbenachrichtigungen darstellen und laufen auf jeder Plattform von Android über Firefox bis Windows. Außerdem können Entwickler auf alle Funktionen zugreifen, für die es eine Webschnittstelle gibt. In der Vergangenheit waren dies etwa Gamepads oder der Standort des Anwenders. \nMit neuen Webschnittstellen will das World Wide Web Consortium (W3C) die Lücke zwischen nativen Apps und PWA weiter schließen: Mithilfe der Writable Files API sollen PWA auf einen Teilbereich des nativen Dateisystems zugreifen können, die Badging API erlaubt das Setzen von Notification-Badges und die Shape Detection API erlaubt das Erkennen von Barcodes, Gesichtern oder Text in Bildern. Christian Liebel zeigt Ihnen brandheiße Web-APIs, die Progressive Web Apps noch mächtiger machen.\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-update-neue-webschnittstellen-fur-noch-bessere-progressive-web-apps",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 17
    },
    {
      "id": 26,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-getriebene Microservices mit Azure Functions & Co. – auch für Java-Entwickler",
      "date": "2019-05-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Microsofts Azure Cloud auf der JAX? Ja, in der Tat. Denn nicht immer muss oder soll es AWS (Amazon Web Services) oder GCP (Google Cloud Platform) sein. Azure bietet mittlerweile eine holistische Plattform für so gut wie jede Cloud-Anforderung an. Auch und vor allem in den Bereichen Cloud Native und Serverless investiert Microsoft sehr viel. In dieser Session zeigt Christian Weyer von Thinktecture – ohne großes Marketing-Tamtam – neben den Grundlagen vor allem typische Anwendungsszenarien für Azure Functions, Azure Service Bus und Co. Fokus soll dabei auf Event-getriebene Microservices-Architekturen liegen. Lehnen Sie sich also zurück und sehen Sie \"die andere Cloud\" – auch mit Java – in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-getriebene-microservices-mit-azure-functions-and-co-auch-fur-java-entwickler",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core",
        "Node.js",
        "Java"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 11
    },
    {
      "id": 25,
      "type": "Talk",
      "title": "Blockchain in 2019: Wichtigste Fakten & sinnvolle Use Cases – jenseits des Hypes",
      "date": "2019-05-07 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blockchain in 2019: Wichtigste Fakten & sinnvolle Use Cases – jenseits des Hypes",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/blockchain-in-2019-wichtigste-fakten-and-sinnvolle-use-cases-jenseits-des-hypes",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blockchain"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 10
    },
    {
      "id": 123,
      "type": "Talk",
      "title": "Advanced Azure Functions",
      "date": "2019-04-27 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Azure Functions makes it easy to quickly create simple Serverless applications & services. However in the rarest cases \"Hello World\"-like implementations are sufficient in practice. So, can we implement complex requirements with that technology? Yes we can. In this talk Boris Wilhelms shows you how you can use Microsofts FaaS-platform to implement scenarios beyond the common triggers and bindings and how you can secure your Functions. The topic of hosting is also covered since it is not always possible to use the public cloud, but you can use and benefit from the Serverless concept in a on-premises environment.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/boriswilhelms/advanced-azure-functions-at-global-azure-bootcamp-2019-frankfurt",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/gab-ffm-2019",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        14
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Azure Functions"
      ],
      "primaryTag": "Azure Functions",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 78
    },
    {
      "id": 16,
      "type": "Talk",
      "title": "Code your Azure Environments with Terraform",
      "date": "2019-04-26 22:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure",
        "Terraform"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 5
    },
    {
      "id": 24,
      "type": "Talk",
      "title": "Pragmatic Serverless Microservices with Azure Functions & Co. - more than FaaS",
      "date": "2019-04-10 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Why does it have to be Serverless versus Microservices? Couldn’t it be rather Microservices with Serverless? Based on some of the well-accepted principles of Microservices, we can use Serverless architectures and technologies to build highly focused Microservices – which we might call Nanoservices. Christian Weyer will show you a pragmatic approach on how to build Nanoservices with Azure Functions, Azure Service Bus, Azure Storage and friends. Join him to see Serverless Azure in action, with .NET Core, JavaScript and Java – beyond the typical Functions-as-a-Service examples.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatic-serverless-microservices-with-azure-functions-and-co-more-than-faas-60687a12-ba7f-487a-a8e2-922a14b162ed",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 9
    },
    {
      "id": 23,
      "type": "Talk",
      "title": "Advanced Serverless Azure: Extending Azure Functions to meet your Runtime Infrastructure Needs",
      "date": "2019-04-09 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Bindings and runtime extensions are the engines of Azure Functions that fuel Azure-based Serverless architectures. In this short talk, Christian Weyer will show you in a live coding session how you can build and use your own custom bindings and extensions. Based on a real project’s requirements, he will walk you through the internals of Azure Functions and create a fully functional custom binding that implements patterns for reusing custom infrastructure needs.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/advanced-serverless-azure-extending-azure-functions-to-meet-your-runtime-infrastructure-needs",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/azure-functions-extensibility",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 9
    },
    {
      "id": 22,
      "type": "Talk",
      "title": "Pragmatische Serverless Microservices mit Azure Functions & Co. (Kaa Sörwa unn Söavis-Gschmarri – so Cloud-Gwerch hald)",
      "date": "2019-04-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das ist eine Hip, das andere ist Hype. Aber muss es Serverless *oder* Microservices sein? Vielmehr sollte es Microservices *mit* Serverless heißen. Basierend auf allgemein anerkannten Prinzipien können wir serverlose Architekturen und Technologien verwenden, um hochfokussierte Microservices ohne viel Infrastruktur-Tamtam zu erstellen - nennen wir sie der Einfachheit halber Nanoservices. Der Unterfranke und DDF-Pionier Christian Weyer zeigt euch einen pragmatischen Ansatz zum Erstellen von Nanoservices mit Azure Functions, Azure Service Bus, Azure Storage und weiteren Cloud-Diensten & Tools. Erleben Sie Serverless Azure in Aktion mit .NET Core, JavaScript und Java in bester Cross-Plattform-Manier - auf dem Server, äh.... #KaaSörwa",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-serverless-microservices-mit-azure-functions-and-co-kaa-sorwa-unn-soavis-gschmarri-so-cloud-gwerch-hald",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Angular",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 39,
      "type": "Talk",
      "title": "PWA Deep-Dive: Offline-Anwendungen im Griff",
      "date": "2019-04-06 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps bieten sich als plattformübergreifendes Anwendungsmodell als idealer Partner für in .NET geschriebene Backends an. Zentrale Eigenschaft einer jeden Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: Im Tunnel, im Park oder im Dschungel. Zur Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen die Mechanik hinter der dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit ihren nativen Gegenstücken problemlos aufnehmen kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offline-anwendungen-im-griff",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 38,
      "type": "Workshop",
      "title": "Frontend der Zukunft: Progressive Web Apps für .NET-Entwickler",
      "date": "2019-04-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET Core eignet sich hervorragend zur Implementierung plattformübergreifender Konsolenanwendungen und Backends. Zuletzt haben nun auch wieder Frontendtechnologien in .NET Core Einzug erhalten. Doch Windows Forms und WPF sind nicht plattformübergreifend einsetzbar. Progressive Web Apps (PWA) hingegen laufen auf allen nennenswerten Mobil- und Desktopplattformen sowie in jedem Browser und bieten sich somit als zukunftssichere Frontendplattform an. Frameworks wie Angular bringen Architekturkonzepte ins Web, die Sie von WPF/XAML schon kennen. Insgesamt eignen sich PWA hervorragend als Frontend für Ihre in .NET Core geschriebene Webschnittstelle. Christian Liebel stellt Ihnen die PWA-Basics vor und zeigt, wie Sie mit einem in .NET Core geschriebenen Backend kommunizieren können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/frontend-der-zukunft-progressive-web-apps-fur-net-entwickler-52418789-d092-4bf2-9e4d-c001b320f31b",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 8
    },
    {
      "id": 68,
      "type": "Workshop",
      "title": "Immer und überall: offlinefähige Progressive Web Apps – am Beispiel Angular",
      "date": "2019-03-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "\"Keine Internetverbindung\" – ein Satz, den wir alle aus genutzten Apps kennen, sei es Desktopanwendung oder Smartphone App. Oftmals sind die Clients auf dem jeweiligen Zielgerät installiert, bedienen sich aber einer externen Datenquelle, bspw. in Form eines Web API. Bei einer offline-fähigen Implementierung sind nicht nur Lese-, sondern vor allem auch Schreibzugriffe wichtig. Sprich, die Daten müssen in beide Richtungen synchronisiert werden können, sobald die Internetverbindung wiederhergestellt wurde. Gerade in der heutigen Zeit, in der Menschen immer mobiler werden, in Autos, Zügen und Flugzeugen unterwegs sind und arbeiten, benötigt man oftmals offline Zugriff auf die Anwendungsdaten. Wie man diese echt offline-fähigen Single-Page Applications/Progressive Web Apps realisiert, zeigen Thomas Hilzendegen und Manuel Rauber von Thinktecture in diesem Ganztagesworkshop. Allgemein werden Themen wie Synchronisationsstrategien von Anwendungsdaten und großen Binärdaten, Konfliktmanagement oder Datenbankarchitektur sowohl für neue als auch bestehende Anwendungen diskutiert. Am Beispiel einer Angular-basierten App mit einem exemplarischen Backend in .NET Core werden Client und Server zur Umsetzung der besprochenen Konzepte und Patterns implementiert.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/immer-und-uberall-offlinefahige-progressive-web-apps-am-beispiel-angular",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/thinktecture-boardist",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        5,
        1
      ],
      "tags": [
        ".NET Core",
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 16
    },
    {
      "id": 37,
      "type": "Workshop",
      "title": "Progressive Web-Apps mit Angular: hands-on",
      "date": "2019-03-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind das App-Modell der Zukunft. Das sagt zumindest Google und hat damit nichts Geringeres vor, als App-Stores von Mobilgeräten zu verbannen. Stattdessen lautet der Gedanke: Offlinefähigkeit, Push Notifications und schnelles Startverhalten sollen ins Web kommen. Ein Fingertipp reicht und eine mobile Website wird zur installierten App auf dem Gerät einschließlich Homescreen-Icon: Android, iOS, Windows, macOS und Linux auf einen Streich.\nChristian Liebel von Thinktecture zeigt Ihnen, wie Sie mit Angular, Angular Material und der Angular CLI PWAs entwickeln und somit sanft und sacht die Schlucht zwischen reinen Web-Sites, Web-Apps und hybriden/nativen Apps schließen können. Und Sie können mitmachen: Dazu benötigen Sie mindestens einen Laptop und optional ein aktuelles Smartphone mit iOS oder Android.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-hands-on",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 16
    },
    {
      "id": 36,
      "type": "Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2019-03-21 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen an nur einem Tag anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-3ee1e5ae-aa20-466b-b362-a101daf26e77",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 15,
      "type": "Workshop",
      "title": "Progressive Web Apps mit Angular: Das Web wird nativ(er)",
      "date": "2019-03-20 23:00:00.0000000",
      "language": "DE",
      "billed": true,
      "abstract": "Progressive Web Apps (PWA) sind ein heißes und topaktuelles Thema in der Web-Entwicklung. Dank einer ganzen Reihe von Technologien und Vorgehensweisen aus dem PWA-Umfeld lassen sich Websites und Web-Anwendungen mit einigen zentralen und relevanten Features ausstatten, die bisher ausschließlich nativen Anwendungen vorbehalten waren: Offlinefähigkeit, Push Notifications, schnelles Startverhalten und installierbar – samt Homescreen-Icon. Christian Liebel zeigt Ihnen an nur einem Tag anhand eines durchgängigen in Angular entwickelten Beispiels, wie Sie solche PWAs mit Angular erstellen und somit sanft und sacht die Schlucht zwischen reinen Websites, Web Apps und hybriden/nativen Apps schließen können.",
      "media": [
        {
          "type": "Speakerdeck",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-mit-angular-das-web-wird-nativ-er-3ee1e5ae-aa20-466b-b362-a101daf26e77",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 35,
      "type": "Workshop",
      "title": "Angular-Performance: So zünden Sie den Turbo",
      "date": "2019-03-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Was in zwei Sekunden nicht lädt, wird nie wieder aufgerufen: Die Erwartung von Anwendern an die Performance von Webanwendungen nimmt stetig zu. Und auch nach dem Laden einer Webanwendung muss sich diese schnell und flüssig anfühlen, damit der Anwender sein Ziel erreichen kann. Mit Zones, Change-Detection- und Preloading-Strategien, Lazy Loading, Ahead-of-time-Kompilierung und Service Workern stehen in Angular verschiedene Techniken zur Verfügung, um selbst große Webanwendungen superschnell auszuführen. Christian Liebel von Thinktecture zeigt Ihnen die Stellschrauben des Frameworks, damit Sie auch für Ihre Angular-App den Turbo zünden können.",
      "media": [
        {
          "type": "Code Sample",
          "url": "https://speakerdeck.com/christianliebel/angular-performance-so-zunden-sie-den-turbo",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 3
    },
    {
      "id": 34,
      "type": "Talk",
      "title": "Progressive Web Apps update 2019: Web Goes Native (RheinNeckarJS)",
      "date": "2019-03-12 23:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "For sure, PWA is one of the hottest topics in Web space today. Progressive Web Apps are cross-platform, support browsers, desktop and mobile platforms—a perfect match for your business application. A PWA should feel like a real app we are used to since years: users want an icon on the home screen as well was native-like performance and feature richness. Christian Liebel, author of “Progressive Web Apps: Das Praxisbuch” and consultant at Thinktecture, shows you how to develop your first PWA, implement offline availability using service workers and send push notifications even when your app is closed. In addition, Christian brings you up to date on modern web APIs and service worker enhancements that will further enhance PWA functionality. Come and bring your PWA questions with you!\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/progressive-web-apps-update-2019-web-goes-native-e93aacbc-e56e-46e4-9306-4632dd21b39d",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 33,
      "type": "Workshop",
      "title": "Hands-on Workshop: Progressive Web Apps für moderne Cross-Plattform-Lösungen",
      "date": "2019-03-01 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Stellen Sie sich vor, Sie schreiben Ihre moderne Businessanwendung genau einmal – und sie läuft auf Windows, macOS, Linux, Android, iOS und in Ihrem Browser. Diese Anwendungen werden per Fingertippen aus dem Browser auf dem Gerät installiert, können Pushbenachrichtigungen empfangen und funktionieren auch dann, wenn das Wi-Fi im Zug gerade mal wieder nicht funktioniert. Das klingt fantastisch? Dank Progressive Web Apps (PWA) wird all das Wirklichkeit. Mithilfe moderner Webtechnologien wird aus einer Webanwendung eine App, die einer nativen App in nichts nachsteht. In diesem Workshop zeigen wir anhand eines durchgängigen Beispiels die Grundlagen der PWA-Entwicklung mit Googles Single-Page-App-Framework Angular, bei denen Sie aktiv mitentwickeln können. Jeder geht mit einer PWA nach Hause!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/hands-on-workshop-progressive-web-apps-fur-echte-cross-plattform-losungen-5b162ec3-4953-40f7-aff4-1e49fd3ffc0b",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/basta-spring-2019-pwa-workshop",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        7,
        3
      ],
      "tags": [
        "Angular",
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 5,
      "type": "Workshop",
      "title": "Workshop: Von null auf hundert – Blockchain-Anwendungen mit Hyperledger Fabric",
      "date": "2019-02-28 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "In diesem Ganztagesworkshop erfahren Sie, wie Sie – ganz ohne CPU-intensives Mining und ohne Kryptowährungen – auf der Basis der Open-Source-Plattform \"Hyperledger Fabric\" eine private (\"permissioned\") Blockchain zwischen Geschäftspartnern aufbauen und wie Sie mit Node.js dafür Smart Contracts und HTTP-Endpunkte entwickeln können. Nach einer kurzen Zusammenfassung der technischen Blockchain-Grundlagen sehen Sie, wie eine private Blockchain auf Basis von Hyperledger Fabric konfiguriert und betrieben wird. Danach lernen Sie die Besonderheiten dieser Umgebung zur Entwicklung von Smart Contracts kennen und wie Sie Tools und Vorgehensweisen zum Deployen, Debuggen und Verwalten Ihrer Anwendungen nutzen können. Neben den typischen Sicherheitsaspekten von Blockchain-Anwendungen im Geschäftsumfeld lernen Sie auch verschiedene Versionierungs- und Governance-Strategien zum langfristigen Betrieb Ihrer Smart Contracts kennen. Zu guter Letzt sehen Sie, wie Sie mit zwischengeschalteten Node.js APIs zwischen .NET-Anwendungen und den entstandenen Smart Contracts bidirektional kommunizieren können, um den Datenaustausch zwischen Ihren existierenden Systemen und der Blockchain-Umgebung zu erlauben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/workshop-von-null-auf-hundert-blockchain-anwendungen-mit-hyperledger-fabric",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Hyperledger",
        "Node.js"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 2,
      "type": "Talk",
      "title": "Hyperledger Fabric: Die Open-Source Basis für Ihre Blockchain",
      "date": "2019-02-27 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "In dieser Session stellt Ihnen Ingo Rammer die von der Linux Foundation betreute open-source Blockchain-Basistechnologie Hyperledger Fabric vor. Sie lernen die Grundlagen von Fabric für den Betrieb von privaten bzw. berechtigungsgestützten Blockchains kennen und erfahren die dafür geeigneten Einsatzgebiete, Architekturentscheidungen sowie Sicherheitsaspekte. Diese Session ist eine optimale Grundlage, um Sie für die Folgesession \"Coding Hyperledger Fabric – Smart Contracts und Clients mit Node.js\" vorzubereiten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/hyperledger-fabric-die-open-source-basis-fur-ihre-blockchain-f198d4d3-90fc-497d-bdde-fdd35fcf4731",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Hyperledger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 4,
      "type": "Talk",
      "title": "Coding Hyperledger Fabric – Smart Contracts und Clients mit Node.js",
      "date": "2019-02-27 23:00:00.0000000",
      "language": "DE",
      "billed": false,
      "abstract": "Aufbauend auf den Inhalten der Session \"Hyperledger Fabric: die Open-Source Basis für Ihre Blockchain\" zeigt Ihnen Ingo Rammer in dieser Session, wie Sie die SDKs für Fabric in Ihrem Code nutzen können. Sie lernen, wie Sie von ihrem Client aus Transaktionen initiieren und wie Sie Chaincode (Smart Contracts in Fabric) erstellen können, um diese zu verarbeiten. Sie sehen, wie Sie eventgesteuert auf Ereignisse der Blockchain reagieren können und wie Sie mit den unterschiedlichen Arten von Daten Ihrer Blockchain interagieren. Zu guter Letzt erfahren Sie, wie Sie mit Fabric einen typischen Code>Test>Debug>Deploy-Zyklus umsetzen können.\n\n",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/ingorammer/coding-hyperledger-fabric-smart-contracts-und-clients-mit-node-dot-js",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        2
      ],
      "tags": [
        "Blockchain",
        "Node.js",
        "Hyperledger"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 20,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-basierte Microservices mit Azure Functions & Co.",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm… Ja, in der Tat. Der Serverless-Ansatz verspricht eine niedrige Hürde, um den Einstieg in Microservices zu finden. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand praktischer Anwendungsfälle. Auf Basis erprobter Designpatterns können Sie mit Azure Functions, Azure Service Bus und Co. in kurzer Zeit sowohl einfache als auch komplexe Services-Anwendungen designen und implementieren – lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Kommen Sie vorbei – eventuell lernen Sie die Basis für Ihr neues Businesssoftware-Backend kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-basierte-microservices-mit-azure-functions-and-co-c4053d0c-b7d8-433f-a60c-6f4a249cb2db",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices",
        ".NET Core"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 31,
      "type": "Talk",
      "title": "Real-World Angular: Erfahrungen aus (fast) vier Jahren Projektgeschäft",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Frankfurt, im Februar 2015: In einer Hotellobby probiert die Thinktecture-Crew eine der frühen, blutigen Alphaversionen von Angular 2 aus. Seither sind vier Jahre vergangen. Zurück in Frankfurt zeigt Christian Liebel von Thinktecture, welche Lehren das Thinktecture-Team aus beinahe vier Jahren Projektgeschäft gezogen hat. Wir besprechen bspw. erweiterte TypeScript-Sprachfeatures, die Unterteilung von Angular-Projekten in isolierte Module sowie verschiedene Maßnahmen zur Verbesserung der Performance. Dieser Talk richtet sich an Angular-Entwickler, welche die Grundlagen des Frameworks verstehen und schon erste Projekte damit umgesetzt haben.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/real-world-angular-erfahrungen-aus-fast-vier-jahren-projektgeschaft",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "Angular"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 32,
      "type": "Talk",
      "title": "PWA Deep Dive: Offlineanwendungen im Griff",
      "date": "2019-02-26 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Zentrale Eigenschaft jeder Progressive Web App (PWA) ist die Verbindungsunabhängigkeit. Dank dem Service Worker funktioniert die App auch dann, wenn der Anwender gerade offline ist: im Tunnel, im Park oder im Dschungel. Bei der Generierung eines Service Workers hilft das Toolkit Workbox. Anwenderdaten werden hingegen in der Browserdatenbank IndexedDB hinterlegt. Wo Daten offline gehalten werden, müssen aber auch deren Synchronisierung und Konfliktauflösung in der Architektur bedacht werden. Christian Liebel von Thinktecture zeigt Ihnen am Beispiel einer in Angular geschriebenen Anwendung die Mechanik hinter  dem Service-Worker-Cache und der Browserdatenbank IndexedDB, sodass es auch Ihre PWA mit den nativen Gegenstücken problemlos aufnehmen kann.\nDieser Talk richtet sich an Entwickler, die grob wissen, um was es bei Progressive Web Apps geht. In diesem Track gibt es auch den passenden Grundlagenvortrag („Progressive Enhancement im Web: PWA-Grundlagen“), der Ihnen dieses Verständnis vermittelt. Bitte nehmen Sie ein Smartphone mit, um ggf. die Demoanwendung auf dem eigenen Gerät ausprobieren zu können.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianliebel/pwa-deep-dive-offlineanwendungen-im-griff",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        3
      ],
      "tags": [
        "PWA"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 21,
      "type": "Talk",
      "title": "Pragmatische Microservices-Architekturen mit .NET Core – Patterns & Code",
      "date": "2019-02-25 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Angetrieben durch mögliche Nachteile einer monolithischen Architektur wollen Microservices und damit verbundene Designpatterns und -ideen das scheinbare Allheilmittel sein. In diesem Vortrag klärt Christian Weyer die folgenden Fragen: Was sind Microservices und was sind sie nicht? Wann setzt man sie ein? Und vor allem: Wie baut und betreibt man Microservices in der .NET-Core-Welt? Sehen Sie Architekturansätze und Patterns in Aktion und erleben Sie Technologien wie Service Discovery, Web APIs, SignalR, Message Queuing und Co. im praktischen Einsatz. Versuchen wir also gemeinsam, langweilige Architekturthemen spannend zu machen: auf pragmatische Weise. Dieser Talk richtet sich an .NET-Entwickler- und -Architekten, die Microservices verstehen und ohne jegliche Frameworks und Clouds in Aktion sehen wollen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-architekturen-mit-net-core-patterns-and-code",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/pragmatic-microservices-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 126,
      "type": "Workshop",
      "title": "Moderne Businessanwendungen mit Angular, .NET Core und Azure – Weitblick für Backend- und Frontend-Entwickler",
      "date": "2019-02-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Alle reden darüber: Mobile-Apps, Webtechnologien und Cloud. Die Welt besteht nicht mehr nur aus Windows allein und Ihr Job als Entwickler ändert sich. In diesem Workshop zeigen Thorsten Hans und Boris Wilhelms interessierten .NET-Entwicklern, welche architekturellen Ideen und Konzepte hinter modernen Businessanwendungen auf Basis von .NET Core, Azure Functions, Angular und TypeScript stecken.\n\nLernen Sie praktische Lösungen für eine Reihe diverser Problem- und Fragestellungen kennen. Wie kann man geräte- und plattformübergreifend Businessanwendungen mit Angular bauen? Wie kann man dies für Windows, iOS, Android und fürs Web gleichermaßen realisieren? Wie können diese Anwendungen Daten und Anwendungslogik mit Hilfe Service-basierter Architekturen nutzen? Dieser Workshop liefert Antworten auf all diese interessanten Fragen. Moderne Businessanwendungen mit Angular, Cordova, Electron, .NET Core und Azure – in Action!",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4,
        14
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Azure",
        "Azure Functions",
        "Cordova",
        "Electron",
        "Serverless",
        "SPA",
        "Architecture"
      ],
      "primaryTag": "Architecture",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 2
    },
    {
      "id": 28,
      "type": "Talk",
      "title": "Serverless Microservices - by example of Azure Functions (and a bit of deep dive into the platform)",
      "date": "2019-02-22 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Why does it have to be Serverless versus Microservices? Couldn’t it be rather Microservices with Serverless? Based on some of the well-accepted principles of Microservices, we can use Serverless architectures and technologies to build highly focused Microservices – which we might call Nanoservices. \nChristian Weyer will show you a pragmatic approach on how to build Nanoservices with Azure Functions, Azure Service Bus, Azure Storage and friends. Join him to see Serverless Azure in action, with .NET Core, JavaScript and Java – beyond the typical Functions-as-a-Service examples.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-microservices-by-example-of-azure-functions-and-a-bit-of-deep-dive-into-the-platform",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Microservices",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 13
    },
    {
      "id": 47,
      "type": "Talk",
      "title": "Code your Azure Deployments using Terraform",
      "date": "2019-02-09 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Using HashiCorp’s Terraform you can code almost every Azure Deployment. Having your entire infrastructure as source code makes it easy to spin up new environments in a couple of minutes. Terraform takes this approach a step further, having a single language and a single CLI allows you to describe deployments for almost every cloud vendor. With Terraform Execution Plans you can also inspect what will be deployed, changed or deleted in Azure without harming existing deployments. Join this talk by Thorsten Hans and learn how to write your deployments and quickly create different, independent environments such as Testing, Staging, and Production in Azure.",
      "media": [],
      "previewSrc": "",
      "speaker": [
        4
      ],
      "tags": [
        "Azure"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null
    },
    {
      "id": 19,
      "type": "Talk",
      "title": "Serverless in Action: Event-gesteuerte Microservices - am Beispiel Azure",
      "date": "2019-01-22 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm... Ja, in der Tat. Der Serverless-Ansatz für Microservices verspricht eine niedrige Hürde, um den Einstieg zu finden und auch um ans Ziel zu kommen. Dabei ist Serverless jedoch nicht für jeden und alles geeignet. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand eines realistischen Anwendungsbeispiels. Auf Basis erprobter Design Patterns können Sie mit Azure Functions, Azure Event Grid, Azure Cosmos DB, Azure Storage & Co. in kurzer Zeit einfache & komplexe Anwendungen designen und implementieren - lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Wohnen Sie dieser Session bei und bilden Sie sich Ihre Meinung - eventuell lernen Sie die Basis Ihrer neuen Business-Software hier kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-in-action-event-gesteuerte-microservices-am-beispiel-azure",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 7
    },
    {
      "id": 78,
      "type": "Talk",
      "title": "WebAssembly & ASP.NET Blazor: .NET auf dem Weg, den Browser zu erobern?",
      "date": "2018-12-12 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/it-tage-2018-webassembly-and-blazor-2018-12-13",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8
      ],
      "tags": [
        ".NET Core",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 43
    },
    {
      "id": 83,
      "type": "Workshop",
      "title": "Azure in Action: Pragmatische Cloud-Lösungen mit Containern & Serverless",
      "date": "2018-12-04 23:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "IDE öffnen, „File – New Project – Cloud“, OK klicken und fertig. Oder? Nun, nicht ganz. Denn egal ob AWS, GCP oder eben Azure: am Ende des Tages werden Sie sich fragen, warum, wann und wie gehe ich in die Cloud? Genau diese Fragestellungen wollen Thorsten Hans und Christian Weyer für Java-, node.js- und .NET-Entwickler in diesem Workshop beantworten. Anhand diverser Use Cases werden mögliche Wege mit, über und in Azure diskutiert. Was bedeuten Architekturansätze wie Cloud-Native Microservices und Serverless Microservices? Wie gehe ich bei Brownfield-Projekten vor und wie kann ich Greenfield-Lösungen effizient in Azure realisieren? Wo liegen Unterschiede und Benefits von datengetriebenen und von ereignisgetriebenen Ansätzen? Wie kann ich mit dem Sammelsurium an Patterns, Technologien und Tools in Azure kosteneffektiv hantieren und dennoch flexibel sein? All dies werden wir anhand praktischer Beispiele und pragmatischer Lösungen in interaktiver Art und Weise adressieren. Sehen Sie PaaS, Web Apps, Containers, Orchestrators, Serverless, Functions & Co. mit der Azure-Cloud anhand von .NET-Demos in Action.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/azure-in-action-pragmatische-cloud-losungen-mit-containern-and-serverless",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/ThorstenHans/aks-demo-app",
          "label": "Containers"
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/serverless-microservices",
          "label": "Serverless"
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "AKS",
        "Azure",
        "Azure Functions",
        "Containers",
        "Kubernetes",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 59
    },
    {
      "id": 84,
      "type": "Talk",
      "title": "Auf ins Blaue: Azure Cloud Services für Java-Entwickler – ein persönlicher Überblick",
      "date": "2018-11-08 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ein Blick über den Tellerrand kann ja nicht schaden: was hat Microsofts Azure Cloud für Java-Entwickler und -Architekten zu bieten? Freilich ist die blaue Wolke ähnlich mächtig, breit an Services und tief an Features wie die Marktbegleiter AWS oder GPC. In dieser Session möchte daher Christian Weyer – der seit 2008 mit Azure arbeitet – einen nicht ganz unvoreingenommenen Überblick über die zentralen Services geben, die für Java-, .NET- aber auch andere Entwickler zur Verfügung stehen. Angefangen bei Container-as-a-Services mit Docker- und Kubernetes als Basis, über klassische Platform-as-a-Service-Angebote für Web Applications, Datenbanken oder Messaging, bis hin zu ultracoolen Serverless-Architekturen – illustriert mit praktischen Beispielen. Und dies von jemandem, der so gut wie keine Ahnung von Java hat.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/auf-ins-blaue-azure-cloud-services-fur-java-entwickler-ein-personlicher-uberblick",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure Functions",
        "Serverless",
        "Azure",
        "Java"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 60
    },
    {
      "id": 85,
      "type": "Talk",
      "title": "eXtreme Serverless Azure: Data, Compute, Realtime - in Action!",
      "date": "2018-10-12 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Whaaat? No servers? Well, yes. Serverless is all the hype these days. Let's try to sort out some of the real strengths of Serverless and see where Serverless & PaaS build a set of highly productive weapons in your Cloud arsenal. Join Christian Weyer from Thinktecture while he discusses Azure Functions, Storage, CosmosDB and SignalR Service in a holistic scenario - all by building an end-to-end solution that should 'just work' by the end of this session: creating a scalable real-time application in almost no time - really? Aaand action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/extreme-serverless-azure-data-compute-realtime-in-action-c24f4632-02c5-4183-9871-8fb829839d41",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/extreme-serverless-demo",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Azure Functions",
        "Java",
        "JavaScript",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 61
    },
    {
      "id": 86,
      "type": "Talk",
      "title": "WebAssembly & PWA: Single Page Applications (SPAs) ohne JavaScript?",
      "date": "2018-10-10 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Ohoh: JavaScript auf einer JavaScript-Konferenz in Frage zu stellen! Lassen Sie uns über das Web als Plattform reden und darüber wie wir JavaScript-basierte Browser-Anwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browser-Plattformen haben die Art und Weise verändert, wie wir Anwendungen, bspw. Line-of-Business Applications, erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung - eine großartige Basis für moderne Anwendungen gemäß der Idee von Progressive Web Apps (PWA). Mit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard haben wir so allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Session wird Christian Weyer über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C ++ - oder gar Java bzw. C # / .NET-Code im Browser ohne Plug-in nutzen können - und so die optimale Performance aus ihrer \"App\" holen können. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche neuen Möglichkeiten WebAssembly unserer geliebten Plattform verleihen kann. Spüren Sie das mögliche Potenzial Ihrer nächsten (Geschäfts-)Anwendung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-pwa-single-page-applications-spas-ohne-javascript",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/angulardays-2018-herbst-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 62
    },
    {
      "id": 87,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps: Rethinking modern application development",
      "date": "2018-10-03 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Choose your programming language of choice for building fast, ubiquitously cross-platform, future-proof modern applications: dang - your dream will finally come true! Really...? Let's see. Undoubtedly, everybody needs to build business applications, somehow. The web and the browser platforms have changed the way we can build LOB applications and these platforms have evolved considerably in the past 5 years. More and more native features are available to SPAs (single page applications) running in the browser - a great base for modern applications as so-called Progressive Web Apps (PWA). Now, with the rise of WebAssembly (WASM) as a standard and the improving maturity of PWAs we have powerful tools in our hand to build the next generation of web-based applications. In this session Christian Weyer will talk about the features & possibilities of Progressive Web Apps as app-like appearance, installability or offline operations, paired with the power of WebAssembly as a bytecode for all major modern browsers. See how to use PWAs to build native-like applications on the browser platforms and experience the strength of WASM to run C, C++ or C#/.NET code in the browser, without any plugin. This can be a disruptive approach for both greenfield and brownfield projects. Lean back and watch how the web is evolving into a new stage of capabilities and feel the potential of your next (business) application. Let’s do it!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-rethinking-modern-application-development-7686e386-c777-43f0-8cdd-f41019e8525b",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-nl-2018-wasm-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "PWA",
        "Blazor",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 63
    },
    {
      "id": 75,
      "type": "Talk",
      "title": "Serverless-Architekturen: Event-basierte Microservices mit Azure Functions & Co",
      "date": "2018-09-25 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wie bitte? Ohne Server? Ähm… Ja, in der Tat. Der Serverless-Ansatz verspricht eine niedrige Hürde, um den Einstieg in Microservices zu finden. In diesem Vortrag zeigt Christian Weyer die Grundlagen von Serverless mit Azure und .NET Core anhand praktischer Anwendungsfälle. Auf Basis erprobter Designpatterns können Sie mit Azure Functions, Azure Service Bus und Co. in kurzer Zeit sowohl einfache als auch komplexe Services-Anwendungen designen und implementieren – lokal und in der Cloud. Einer der Schlüssel ist hierbei das Denken in Events, über die Daten übertragen, verarbeitet und weitergeleitet werden. Kommen Sie vorbei – eventuell lernen Sie die Basis für Ihr neues Businesssoftware-Backend kennen.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architekturen-event-basierte-microservices-mit-azure-functions-and-co",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=5VIDcSbTgYI",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Azure",
        "Azure Functions",
        "Serverless"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 88,
      "type": "Talk",
      "title": "Pragmatische Microservices-Architekturen mit ASP.NET Core & Co.",
      "date": "2018-09-25 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Das Schlagwort Microservices ist in aller Munde. Angetrieben durch die zahlreichen Nachteile einer monolithischen Architektur wollen Microservices und damit verbundene Design-Patterns und -Ideen das scheinbare Allheilmittel sein. In diesem Vortrag klärt Christian Weyer über den Mythos Microservices auf. Was sind sie, was sind sie nicht, wann setzt man sie ein – und vor allem: Wie baut und betreibt man Microservices in der .NET/.NET-Core-Welt? Sehen Sie Architekturansätze in Aktion und erleben Sie Technologien wie Service Discovery, Web API, SignalR, Message Queuing und Azure im praktischen Einsatz. Versuchen wir also gemeinsam, langweilige Architekturthemen spannend zu machen: auf pragmatische Weise!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/pragmatische-microservices-architekturen-mit-asp-dot-net-core-and-co",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        ".NET Core",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 79,
      "type": "Talk",
      "title": "WebAssembly und Blazor - Wie .NET jetzt auch den Browser erobert?",
      "date": "2018-09-24 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": ".NET hat höchstens noch auf dem Server eine Zukunft? Diese Aussage stimmt im modernen Web mittlerweile nicht mehr ganz: Seit der Verfügbarkeit von WebAssembly, einem Bytecode fürs Web, können nun auch etwa in C# geschriebene Programme im Browser ausgeführt werden. Das ist mitunter eine interessante Migrationsstrategie, um .NET-Berechnungskerne ins Web zu portieren und mit Single-Page Applications (SPA), zum Beispiel auf Basis von Angular, zu paaren. Mit dem Projekt Blazor vom ASP.NET-Team experimentiert Microsoft zudem mit einem eigenen SPA-Framework mitsamt Tooling, das jedoch nicht auf HTML und JavaScript, sondern auf der Templating-Sprache Razor sowie C# und .NET Core basiert. Sebastian Gingter und Christian Liebel zeigen Ihnen beide Ansätze und geben eine Einschätzung, wo Blazor eine valide Option für die Erstellung von webbasierten UIs sein kann. Klar ist: Was im Web läuft, das kann auf nahezu allen Plattformen ausgeführt werden. Und auch der Verteilung Ihrer Anwendung als Progressive Web App mit vielen nativen Features steht nichts im Wege.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/phoenixhawk/webassembly-und-blazor-wie-net-jetzt-auch-den-browser-erobert",
          "label": null
        },
        {
          "type": "Video",
          "url": "https://www.youtube.com/watch?v=z3x1u-cuED8",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        3
      ],
      "tags": [
        "Blazor",
        "WebAssembly",
        ".NET Core",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 39
    },
    {
      "id": 92,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps - Next Generation Apps",
      "date": "2018-09-09 22:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Gesetzt den Fall, Sie halten Cross-Plattform SPAs (Single Page Applications) für eine gute Idee, könnte diese Night Session in der Tat interessant für Sie werden. Lassen Sie uns über das Web als Plattform reden und darüber, wie wir JavaScript-basierte Browseranwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browserplattformen haben die Art und Weise verändert, wie wir Anwendungen erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung – eine großartige Basis für moderne Applikationen gemäß der Idee von Progressive Web Apps (PWA). Zudem haben wir mit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Night Session wird Christian Weyer sowohl über PWAs als auch über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C++, Java oder C#/.NET-Code im Browser ohne Plug-in nutzen können – sei es aus Performance- oder Wiederverwendungsgründen. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche Möglichkeiten PWAs und WebAssembly dem Web verleihen könnten.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-next-generation-apps",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/software-architecture-summit-2018-pwa-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "Blazor",
        "PWA",
        "Web Technologies",
        "WebAssembly"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 66
    },
    {
      "id": 129,
      "type": "Talk",
      "title": "Legacy-Anwendungen ver-Service-fizieren mit ASP.NET Core",
      "date": "2018-09-05 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wer kennt sie nicht: Zehn bis 20-Jährige native Anwendungen weisen nicht selten bekannte Schwierigkeiten auf. Sie sind groß, monolitisch, komplex, launenhaft, laufen nur auf einem bestimmten Betriebssystem mit einem ganz bestimmten Patch Level, es gibt genau einen Entwickler, der diese versteht und jede einzelne von denen ist eine State Machine.\nAus den genannten Gründen und um die Marktanteile zu erweitern ist es kein Wunder, dass die Hersteller ihre Anwendung am liebsten hinter einer Web-API verstecken möchten, welche über eine stabile, performante und vergleichsweise einfache API konsumiert werden kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/legacy-anwendungen-ver-service-fizieren-mit-asp-dot-net-core",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pawelgerr/Talks-LegacyApplications",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        "Architecture",
        "ASP.NET Core",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 83
    },
    {
      "id": 89,
      "type": "Talk",
      "title": "WebAssembly: Dem JavaScript sein Tod!?",
      "date": "2018-06-20 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Blasphemie: JavaScript auf einer JavaScript-Konferenz in Frage zu stellen!\nLassen Sie uns über das Web als Plattform reden und darüber, wie wir JavaScript-basierte Browseranwendungen unter Umständen noch \"besser\" machen können. Die Web- und Browserplattformen haben die Art und Weise verändert, wie wir Anwendungen, beispielsweise Line-of-Business Applications, erstellen können, und diese Plattformen haben sich in den letzten 5 Jahren erheblich weiterentwickelt. Für SPAs, die im Browser laufen, stehen mehr und mehr native Funktionen zur Verfügung - eine großartige Basis für moderne Anwendungen gemäß der Idee von Progressive Web Apps (PWA).\nMit dem zunehmenden Reifegrad von WebAssembly (WASM) als Standard haben wir so allmählich leistungsstarke Tools in unserer Hand, um die nächste Generation von webbasierten Anwendungen zumindest mal anzudenken. In dieser Session werden Christian Weyer und Sebastian Gingter über die Basis und Möglichkeiten von WebAssembly als Bytecode für alle gängigen modernen Browser sprechen. Erfahren Sie, wie Sie WASM zum Ausführen von C/C++, oder gar Java beziehungsweise C#/.NET-Code im Browser ohne Plug-in nutzen können – und so die optimale Performance aus ihrer \"App\" holen können. Dies kann sowohl bei Greenfield- als auch bei Brownfield-Projekten ein interessanter Ansatz sein. Lehnen Sie sich zurück und schauen Sie zu, welche neuen Möglichkeiten WebAssembly unserer geliebten Plattform verleihen kann. Spüren Sie das Potenzial Ihrer nächsten (Geschäfts-)Anwendung.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-dem-javascript-sein-tod",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/enterjs-2018-wasm",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        6
      ],
      "tags": [
        "WebAssembly",
        "Web Technologies",
        "JavaScript",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 64
    },
    {
      "id": 77,
      "type": "Workshop",
      "title": "Moderne APIs mit ASP.NET Core MVC und SignalR – End-to-End",
      "date": "2018-06-13 00:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Moderne APIs bieten neben der gängigen HTTPS-Interaktion auch die Möglichkeit zur Echtzeitkommunikation auf Basis von WebSockets. Mit Hilfe von Microsofts Open-Source-Plattform ASP.NET Core MVC und SignalR lassen sich im Handumdrehen Web-APIs und Push-Services entwickeln. Doch damit nicht genug: Weitere Themen wie Security, Rate-Limiting, eine sinnvolle Dokumentation und ein vernünftiges zentralisiertes Logging sind mit von der Partie. Und jeder dieser einzelnen Bereiche bietet uns eine neue Herausforderung. Sebastian Gingter und Manuel Rauber zeigen Ihnen in diesem Workshop, wie man mit .NET Core moderne APIs auf und für verschiedene Plattformen entwickeln kann. Zusätzlich wird durch den Einsatz von Entity Framework Core die Anbindung an verschiedene Datenbanken ermöglicht. Durch den Einsatz weiterer Open-Source-Bibliotheken fürs Logging oder zur automatischen Generierung einer Swagger/OpenAPI-Dokumentation ergänzen wir die API um weitere Funktionalitäten. Eine Client-Anwendung, das Deployment auf unterschiedliche Plattformen und das Deployment in die Cloud runden den Workshop ab – vollständig End-to-End eben!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/manuelrauber/einmal-api-mit-allem-bitte-asp-dot-net-core-mvc-und-signalr-in-action-164d1e3e-189b-4b6a-95a3-33003e3f3f05",
          "label": null
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/api-ms-summit-spring-2018-services-dotnetcore",
          "label": null
        }
      ],
      "previewSrc": "",
      "speaker": [
        8,
        1
      ],
      "tags": [
        ".NET Core",
        "Azure",
        "Microservices"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 42
    },
    {
      "id": 91,
      "type": "Talk",
      "title": "WebAssembly & Progressive Web Apps: Rethinking modern application development",
      "date": "2018-05-23 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Choose your programming language of choice for building fast, ubiquitously cross-platform, future-proof modern applications: dang - your dream will finally come true! Really...? Let's see. Undoubtedly, everybody needs to build business applications, somehow. The web and the browser platforms have changed the way we can build LOB applications and these platforms have evolved considerably in the past 5 years. More and more native features are available to SPAs (single page applications) running in the browser - a great base for modern applications as so called Progressive Web Apps (PWA). Now, with the rise of WebAssembly (WASM) as a standard and the improving maturity of PWAs we have powerful tools in our hand to build the next generation of web-based applications. In this session Christian Weyer will talk about the features & possibilities of Progressive Web Apps as app-like appearance, installability or offline operations, paired with the power of WebAssembly as a bytecode for all major modern browsers. See how to use PWAs to build native-like applications on the browser platforms and experience the strength of WASM to run C, C++ or C#/.NET code in the browser, without any plugin. This can be a disruptive approach for both greenfield and brownfield projects. Lean back and watch how the web is evolving into a new stage of capabilities and feel the potential of your next (business) application. Let’s do it!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/webassembly-and-progressive-web-apps-rethinking-modern-application-development",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-2018-wasm-pwa",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6
      ],
      "tags": [
        "WebAssembly",
        "PWA",
        "Web Technologies",
        "Blazor"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 65
    },
    {
      "id": 90,
      "type": "Workshop",
      "title": "Modern Cross-Platform Business Applications with Angular, Cordova, Electron, PWA & Serverless Backends",
      "date": "2018-05-21 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Modern business applications are facing entirely different challenges today. End-users are used to just leverage their mobile phone, tablets, laptops and (maybe) desktop computers. Applications, data and processes just need to work, just need to “be there” – regardless of the application hosting and provisioning model. Developers should realize these ever-changing challenges and should address possible approaches for ubiquitous solutions. In this full-day workshop, Thorsten and Christian from Thinktecture show you a way how to design, architect, implement and run modern business applications – end-to-end. Come and see how to provide lightweight APIs into your business processes via Serverless technolgoies and architectures in Azure. Feel the power of real-cross platform HTML5 SPAs – e.g. based on Angular – to offer a use-case-optimized user experience across all platforms on any devices and runtimes. Let’s start with Angular web applications for the browser and augment them to have native functionalities on the mobile platforms with Apache Cordova and on desktop operating systems with GitHub Electron. Last but not least, join us for a sneak preview into a hopefully not too disitant future: Progressive Web Apps (PWA) could be the ever-lasting ultimate app model for everybody. Apps without the need to install, just running inside the browser engines with power to interact natively. Sounds too good? Let’s see – all this in action!",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/modern-cross-platform-business-applications-with-angular-cordova-electron-pwa-and-serverless-backends",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/techorama-2018-mba-ws",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        4,
        6
      ],
      "tags": [
        ".NET Core",
        "Angular",
        "Azure Functions",
        "Cordova",
        "Electron",
        "PWA",
        "Serverless",
        "Web Technologies"
      ],
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 65
    },
    {
      "id": 128,
      "type": "Talk",
      "title": "Legacy-Anwendungen ver-Service-fizieren mit ASP.NET Core",
      "date": "2018-04-27 20:00:00",
      "language": "DE",
      "billed": false,
      "abstract": "Wer kennt sie nicht: Zehn bis 20-Jährige native Anwendungen weisen nicht selten bekannte Schwierigkeiten auf. Sie sind groß, monolitisch, komplex, launenhaft, laufen nur auf einem bestimmten Betriebssystem mit einem ganz bestimmten Patch Level, es gibt genau einen Entwickler, der diese versteht und jede einzelne von denen ist eine State Machine.\nAus den genannten Gründen und um die Marktanteile zu erweitern ist es kein Wunder, dass die Hersteller ihre Anwendung am liebsten hinter einer Web-API verstecken möchten, welche über eine stabile, performante und vergleichsweise einfache API konsumiert werden kann.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/pawelgerr/legacy-anwendungen-ver-service-fizieren-mit-asp-dot-net-core",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/pawelgerr/Talks-LegacyApplications",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        10
      ],
      "tags": [
        "Architecture",
        "ASP.NET Core",
        ".NET Core"
      ],
      "primaryTag": ".NET Core",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 81
    },
    {
      "id": 124,
      "type": "Talk",
      "title": "Event-based Microservices with Azure Functions, EventGrid & Co.",
      "date": "2018-04-21 00:00:00",
      "language": "EN",
      "billed": false,
      "abstract": "Whaaat? No servers? Well, yes. The Serverless approach for building microservices promises to offer a low entry barrier - for both getting starting and for fulfilling a target. In this session Christian & Boris will show you end-to-end Serverless with Azure & .NET Core by means of a realistic application scenario from customer projects.",
      "media": [
        {
          "type": "Slides",
          "url": "https://speakerdeck.com/christianweyer/serverless-architectures-event-based-microservices-with-azure-functions-eventgrid-and-co",
          "label": ""
        },
        {
          "type": "Code Sample",
          "url": "https://github.com/thinktecture/globalazurebootcamp-2018-serverless",
          "label": ""
        }
      ],
      "previewSrc": "",
      "speaker": [
        6,
        14
      ],
      "tags": [
        "Azure",
        "Serverless",
        "Azure Functions"
      ],
      "primaryTag": "Azure Functions",
      "externalSpeaker": false,
      "time": null,
      "urlFragment": null,
      "bigmarkerRef": null,
      "ctaKey": null,
      "additionalInfo": null,
      "conference": 79
    }
  ],
  "itemCount": 990
}